<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nerd Calistênico</title>
  
  
  <link href="/hemersonvianna/atom.xml" rel="self"/>
  
  <link href="https://nerdcalistenico.github.io/hemersonvianna/"/>
  <updated>2021-02-27T18:20:00.000Z</updated>
  <id>https://nerdcalistenico.github.io/hemersonvianna/</id>
  
  <author>
    <name>Hemerson Vianna</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Projetos para 2021</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/projetos-para-2021/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/projetos-para-2021/</id>
    <published>2021-02-27T18:20:00.000Z</published>
    <updated>2021-02-27T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Primeiro artigo de 2021, e iniciando as atividades desse blog neste ano.</p><p>A última atividade nesse blog, foi referente aos 92 dias de código, onde apenas joguei os códigos diariamente. Eles Estão melhor organizados no Instagram e no Github. Para ajustar isso, nesse ano terá um bootcamp para ter um vídeo para cada dia, desses 92. Assim, os últimos artigos publicados nesse blog, serão atualizados.</p><h2 id="Nerd-Calistenico"><a href="#Nerd-Calistenico" class="headerlink" title="Nerd Calistênico"></a>Nerd Calistênico</h2><p>Esse é único projeto que já está no ar, mas sempre será atualizado e conta como um projeto em 2021.</p><p>Se está lendo isso, provavelmente conhece esse projeto. O projeto conta com 9 blogs e iformações sobre mim. Pode ser resumindo a um site pessoal, mas é a origem para todos os projetos que já planejei e irei planejar.</p><h2 id="Cyan-Front"><a href="#Cyan-Front" class="headerlink" title="Cyan Front"></a>Cyan Front</h2><p>Com o tempo quis colocar o meu perfil internacional, mas colocar o projeto Nerd Calistênico em vários idiomas ou pelo menos criar uma versão em inglês, seria um trabalho muito grande e talvez, sem necessidade.</p><p>Com base nisso, a ideia é ter o Cyan Front para atingir esse objetivo. Terá uma estrutura mais simples e possivelmente um blog. Assim, poderei disponibilizar conteúdos para quem entende o idioma inglês.</p><h2 id="Coding-Bootcamps"><a href="#Coding-Bootcamps" class="headerlink" title="Coding Bootcamps"></a>Coding Bootcamps</h2><p>Senti a necessidade de ter uma área para bootcamps, que se encaixariam bem no objetivo de ter conteúdos diretos e rápidos.</p><h2 id="Togakure"><a href="#Togakure" class="headerlink" title="Togakure"></a>Togakure</h2><p>Sempre tive o sonho e meta de criar um projeto que reunisse componentes que dessem suporte ao maior número de bibliotecas e frameworks possível. Pelo menos os mais utilizados no mercado.</p><p>É um projeto ambicioso e que trará grandes problemas de manutenção. Como é um projeto de vida, não importa o tempo que irá levar.</p><h2 id="Votacao-2022"><a href="#Votacao-2022" class="headerlink" title="Votação 2022"></a>Votação 2022</h2><p>De uns anos para cá, fiquei mais ligado em política. Ao buscar algum meio de me colocar por dentro desse assunto, criei o rio2020.com.br, que já tirei do ar, pois atingiu o seu objetivo.</p><p>Foram mais de 20.000 visitas e no site, mostrava todos os candidatos a câmara de vereadores do município do Rio de Janeiro, e também incluia os cadidatos a prefeitura da cidade.</p><p>Então, descobri que dá para fazer algo relacionado a política. Com isso em mente, o votacao2022.com.br existirá para ser mais um canal para trazer informações sobre as eleições no Brasil, em 2022.</p><h2 id="Zero-to-Deploy"><a href="#Zero-to-Deploy" class="headerlink" title="Zero to Deploy"></a>Zero to Deploy</h2><p>Tendo uma área para os bootcamps, já é algo interessante, mas ainda faltava um curso oficial. O <code>zero to deploy</code>, será alo óbvio pelo nome do curso. Então, tentarei toda a minha experiência que tenho desde o brainstorming de um projeto, até o deploy em produção. Passando por todas as áreas como: negócio, gestão de projeto, ux/ui, front-end, back-end e devOps.</p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>No site <a href="https://hemersonvianna.com.br/" target="_blank" rel="noopener">Hemerson Vianna</a>, pode ser visto todos os links para os projetos. Desde o site de cada um, como os endereços nas redes sociais.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Primeiro artigo de 2021, e iniciando as atividades desse blog neste ano.&lt;/p&gt;&lt;p&gt;A última atividade nesse blog, foi referente aos 92 dias d
      
    
    </summary>
    
      <category term="personal" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/"/>
    
    
  </entry>
  
  <entry>
    <title>O ano dos desafios</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/o-ano-dos-desafios/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/o-ano-dos-desafios/</id>
    <published>2020-07-09T18:20:00.000Z</published>
    <updated>2020-07-09T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Esse é o segundo artigo de teor pessoal que pode ser encontrado nesse blog. O primeiro artigo é o <a href="/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/">O ano que mudou a minha vida</a>, que foi escrito em 01.07.2016.</p><p>Para dar uma continuidade para quem leu, no dia 19.07.2016, estava iniciando na empresa <strong>B2W Digital</strong>. Quando escrevi o artigo, ainda não tinha previsões de quando voltaria para um emprego de carteira assinada.</p><p>O artigo tinha como foco, ser motivador e sincero. Não foi uma escolha tirar um tempo para mim. Basicamente, fui jogado em uma situação onde estava sem emprego, muito estresse e com traumas. Boa parte do esforço que tive no ano descrito, foi para me recuperar e tenho consciência de que alguns traumas se arrastam até hoje.</p><p>Em julho de 2016, estava com as forças renovadas e tinha conseguido superar muitas coisas.</p><h2 id="Equipes-e-codigos"><a href="#Equipes-e-codigos" class="headerlink" title="Equipes e códigos"></a>Equipes e códigos</h2><p>Do dia 19.07.2016 até 15.03.2019, pude trabalhar com boas equipes e evoluir bastante no meio da programação. Tive mais experiência com o <code>node.js</code> no back-end, <code>react</code> no front-end e até experiência como líder de equipe.</p><p>Também tive experiência como líder em 2014/2015, mas não oficialmente. O cenário era: Ser o único responsável de <strong>front-end</strong>, ter a contribuição de 7 estagiários (seo, campanhas, ux, ui e comercial) e ter mais uma pessoa de <strong>back-end</strong>, para uma loja online de seguros e previdência. Então, sentava com todos, para definir padrões e estratégias. Por mais que a ideia era passar conhecimento, também obtive bastante. O lado ruim, foi acabar me sobrecarregando e somou com o que descrevi no outro artigo.</p><p>Trabalhei com muitas pessoas no período de 3 anos e também tive a oportunidade de fazer o meu primeiro projeto que foi para produção, com <code>react-native</code>. Junto com o meu líder de equipe na época, fizemos a área de produto para as lojas <strong>Americanas</strong>, <strong>Submarino</strong>, <strong>Shoptime</strong> e <strong>Sou barato</strong>.</p><p>Como líder, tive a oportunidade dada pelo meu gerente na época, de liderar 2 projetos internos. Um era utilizado pelo pessoal de marketing, para gerenciar as peças que são mostradas nos sites do grupo e outro, era para criação de campanhas. O primeiro já existia, o segundo foi criado do zero. Atuei fazendo toda a parte do front-end, também mexendo na parte de back-end com os outros desenvolvedores e como líder. Éramos em 3 pessoas.</p><p>Participei de algumas equipes e projetos. Destaco o <strong>Allan Carvalho</strong> e o <strong>Luiz Felipe</strong>, que foram respectivamente líder e gerente da minha pessoa, por um tempo. Obrigado pelas oportunidades e pelo profissionalismo. Nem vou enumerar as pessoas desenvolvedoras, pois, posso esquecer alguém.</p><p>Tudo deu certo. Esses projetos como vários outros, estão em produção até hoje.</p><h2 id="Dilemas"><a href="#Dilemas" class="headerlink" title="Dilemas"></a>Dilemas</h2><p>Com a evolução, vem alguns dilemas. Como desenvolvedor já fiz vários projetos do zero e considero ter sorte por isso. Já perdi as contas de quantos projetos de componentes e projetos completos, já fiz do zero.</p><p>De 2016 a 2019, teve uma grande quantidade de desenvolvedores que passaram pela minha vida. Muitos trabalharam comigo ou conhecia, por ser da mesma empresa. Começou a ficar esquisito o tamanho da rotatividade e isso trazia alguns dilemas.</p><ul><li>Todo mundo indo para fora, deveria ir também?</li><li>Deixei de ser líder, pois não tinha poder de decisão e voltei para pleno, tenho que sair para virar sênior?</li><li>A motivação está indo embora ou é apenas um desgaste temporário?</li><li>Todos estão evoluindo, será que estou também?</li></ul><p>Só uma observação, não ligo e nunca liguei para cargos. Já fui pleno, depois sênior, depois pleno e etc.. Isso depende muito da empresa. Só ligo para a questão financeira, que não pode diminuir. Então, quando cito pleno e sênior é mais por uma questão de reconhecimento. Pois acabou que isso me confundiu, ao saber realmente em que posição estou.</p><p>Parece bobo, mas hoje vejo que isso realmente me confundiu e me trouxe para um dilema que acredito que muitos vivem no Brasil.</p><p>Por experiência, é muito tenso ficar perdido entre pleno, sênior e líder. Por mais que isso dependa da empresa onde está, nos questionamos no contexto geral. Isso deveria ser mais nivelado entre as empresas. Assim, fica a questão de custo e benefício. Uma coisa é como se considera, outra é o que a empresa espera/precisa. Sendo o fator financeiro, as vezes primordial para as devidas escolhas.</p><p>Então, temos uma mistura de situações na área. O mais importante é se sentir confortável na posição que está, pois se não estiver, o caldo entorna muito rápido.</p><p>E nunca, nunca, nunca pense que será mais tranquilo estar em um cargo abaixo. O seu subconsciente não irá permitir que você dê menos que o seu melhor. Se trata mais de uma questão moral, em que você não conseguirá ficar bem consigo mesmo.</p><h2 id="Planejamento"><a href="#Planejamento" class="headerlink" title="Planejamento"></a>Planejamento</h2><p>Se eu falar que planejei em detalhes ou com antecedência os momentos que tirei para mim, estarei mentindo com a cara lavada.</p><p>No <a href="/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/">ano que mudou a minha vida</a>, não tinha para onde correr, tive que planejar rápido e só tinha a opção de me recuperar e colocar metas.</p><p>Agora, para esse <strong>ano dos desafios</strong>, os dilemas já estavam martelando e infelizmente, minha experiência como profissional estava frequentemente sendo desprezada. Nunca fui orgulhoso profissionalmente, talvez isso seja até um erro. Sempre me coloco abaixo da minha capacidade.</p><p>Também não sou impulsivo profissionalmente, sei exatamente quando começou e quando terminou a insatisfação profissional, sendo um processo de 1 ano. Então, não foi uma situação de um dia, onde um superior diz: “- Sei que tem anos de experiência, mas só faça o que estou mandando. O que importa e a meta, não a qualidade.”</p><p>E chega aquele momento que você se pergunta: “- O que estou fazendo da minha vida? Passei anos virando noites, dando o meu melhor e para quê?”</p><p>Assim, se deu a decisão de tirar um <strong>ano para os desafios</strong>. Nada planejado, mas sabia que as coisas não poderiam continuar como estavam.</p><p>Particularmente, consigo planejar muito rápido. Vou me lembrar para sempre, que no final de 2018, tive 10 dias de folga. O meu líder me informou no trabalho e planejei, comprei todos os voos e hospedagens em 2 horas, para 10 dias em 4 estados no nordeste. Deu tudo certo, nenhum furo e foi incrível.</p><h2 id="Maos-a-obra"><a href="#Maos-a-obra" class="headerlink" title="Mãos à obra"></a>Mãos à obra</h2><p>Agora tinha que começar de fato um ano para mim. A primeira escolha foi dedicação à esse site, mudando a estrutura e adicionando mais coisas. O resultado foi muito bom. O número de visitantes aumentou em 10 vezes e agora em 2020, o número está 200% maior. Isso foi e está sendo muito motivador.</p><p>Com esse período, tinha como objetivo um tempo para o <strong>Hemerson</strong>, investi no lado pessoal e em relacionamento. Por mais que consiga manter a vida profissional e relacionamentos, nem sempre dá para conhecer pessoas novas, pois acabamos entrando na rotina de trabalho e menos tempo livre.</p><p>Os primeiros 6 meses se resumem nisso. Depois veio a ideia dos desafios, já que os meus projetos com o <strong>site</strong> e <strong>github</strong>, já estavam encaminhados. Em outubro de 2019, começaram os desafios de <strong>calistenia</strong> e de <strong>códigos</strong> que podem ser vistos no decorrer deste artigo.</p><p>Algo surreal e acredito que nunca mais terei tempo para essa correria insana. Foram 92 dias, que tive uma disciplina extrema. Já seria difícil ser apenas 1 desafio, mas 2, foi loucura. Fora outras coisas que fiz nesse período. Então, até a virada do ano, foi uma correria bem grande.</p><p>Abaixo, consigo mostrar como foram esses 92 dias e depois para finalizar esse ano, relaxei no nordeste.</p><h2 id="Calistenia"><a href="#Calistenia" class="headerlink" title="Calistenia"></a>Calistenia</h2><p>Desafio de calistenia, totalizando 90 dias. A intenção era manter a disciplina de treinar todo dia.</p><style>.images{display:flex;flex-direction:row;flex-flow:row wrap}.images .loader{display:block;height:80px;width:80px}.images a{display:block;position:relative;height:80px;width:80px}.images a:hover:after{box-shadow:inset 0 0 10px;content:"";display:block;position:absolute;width:100%;height:100%;top:0;left:0}</style><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B3H16mjBQY9/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3H16mjBQY9/media/" alt="Calistenia 90" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3KP2fOh3IM/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3KP2fOh3IM/media/" alt="Calistenia 89" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3Mnlo2BggB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3Mnlo2BggB/media/" alt="Calistenia 88" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3PWoMLhFSR/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3PWoMLhFSR/media/" alt="Calistenia 87" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3R3jFxhxd1/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3R3jFxhxd1/media/" alt="Calistenia 86" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3UiL55BJKW/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3UiL55BJKW/media/" alt="Calistenia 85" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3XGlMwhjoU/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3XGlMwhjoU/media/" alt="Calistenia 84" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3ZxLjEBv8t/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3ZxLjEBv8t/media/" alt="Calistenia 83" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3cRiVthikf/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3cRiVthikf/media/" alt="Calistenia 82" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3fI9VUhtNI/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3fI9VUhtNI/media/" alt="Calistenia 81" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3iTfLOBpRs/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3iTfLOBpRs/media/" alt="Calistenia 80" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3k43UfBWUt/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3k43UfBWUt/media/" alt="Calistenia 79" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3ncE_hBoRQ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3ncE_hBoRQ/media/" alt="Calistenia 78" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3pW4WGh-bL/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3pW4WGh-bL/media/" alt="Calistenia 77" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3rwA7VhQwo/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3rwA7VhQwo/media/" alt="Calistenia 76" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3uKTIEhYVo/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3uKTIEhYVo/media/" alt="Calistenia 75" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3xKdzSBiG3/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3xKdzSBiG3/media/" alt="Calistenia 74" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3zlecnhH7f/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3zlecnhH7f/media/" alt="Calistenia 73" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B32KCT-hgSD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B32KCT-hgSD/media/" alt="Calistenia 72" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B34zu3hB-LD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B34zu3hB-LD/media/" alt="Calistenia 71" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B37tNIvhw5Y/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B37tNIvhw5Y/media/" alt="Calistenia 70" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3-b9h_paY2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3-b9h_paY2/media/" alt="Calistenia 69" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4A-uQbgJZr/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4A-uQbgJZr/media/" alt="Calistenia 68" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4DAbIAgSNB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4DAbIAgSNB/media/" alt="Calistenia 67" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4GP9KSgxAL/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4GP9KSgxAL/media/" alt="Calistenia 66" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4IwxiVg-Hn/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4IwxiVg-Hn/media/" alt="Calistenia 65" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4LUuN2gkJ2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4LUuN2gkJ2/media/" alt="Calistenia 64" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4N430nAIxP/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4N430nAIxP/media/" alt="Calistenia 63" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4QfH1fFUum/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4QfH1fFUum/media/" alt="Calistenia 62" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4SmfvzgGuE/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4SmfvzgGuE/media/" alt="Calistenia 61" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4VlWYVgAHm/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4VlWYVgAHm/media/" alt="Calistenia 60" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4YJ_3pgErQ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4YJ_3pgErQ/media/" alt="Calistenia 59" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4a1uPSAUc_/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4a1uPSAUc_/media/" alt="Calistenia 58" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4dYU1gARFj/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4dYU1gARFj/media/" alt="Calistenia 57" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4fWsS0AecV/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4fWsS0AecV/media/" alt="Calistenia 56" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4icNsJAV-S/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4icNsJAV-S/media/" alt="Calistenia 55" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4kx-K_giNC/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4kx-K_giNC/media/" alt="Calistenia 54" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4nGE5_A9JM/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4nGE5_A9JM/media/" alt="Calistenia 53" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4qVenyAIWT/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4qVenyAIWT/media/" alt="Calistenia 52" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4s6lQegYkw/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4s6lQegYkw/media/" alt="Calistenia 51" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4vWuw3AIio/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4vWuw3AIio/media/" alt="Calistenia 50" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4x_29egS8G/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4x_29egS8G/media/" alt="Calistenia 49" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B40ZJwhgbhg/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B40ZJwhgbhg/media/" alt="Calistenia 48" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B43ERmpAXDb/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B43ERmpAXDb/media/" alt="Calistenia 47" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B45v0xeAuFS/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B45v0xeAuFS/media/" alt="Calistenia 46" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B47uwsNAFAl/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B47uwsNAFAl/media/" alt="Calistenia 45" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4-u8eXgP1l/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4-u8eXgP1l/media/" alt="Calistenia 44" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5BYl5zgnOO/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5BYl5zgnOO/media/" alt="Calistenia 43" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5EEZkeAn9a/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5EEZkeAn9a/media/" alt="Calistenia 42" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Git3WAExD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Git3WAExD/media/" alt="Calistenia 41" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5JFs2WgcUg/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5JFs2WgcUg/media/" alt="Calistenia 40" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Luoi-AGtI/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Luoi-AGtI/media/" alt="Calistenia 39" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5OLHQsAujH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5OLHQsAujH/media/" alt="Calistenia 38" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Q_Nb-A5b4/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Q_Nb-A5b4/media/" alt="Calistenia 37" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Tfgf-g1i2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Tfgf-g1i2/media/" alt="Calistenia 36" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5VXqIpgXU4/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5VXqIpgXU4/media/" alt="Calistenia 35" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5YmR8fgnZl/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5YmR8fgnZl/media/" alt="Calistenia 34" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5a65JIgGUR/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5a65JIgGUR/media/" alt="Calistenia 33" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5d_-8VgCgH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5d_-8VgCgH/media/" alt="Calistenia 32" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5gUGovBAyi/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5gUGovBAyi/media/" alt="Calistenia 31" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5i8SjIBDFI/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5i8SjIBDFI/media/" alt="Calistenia 30" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5luWk6h8aV/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5luWk6h8aV/media/" alt="Calistenia 29" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5oEHoShog7/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5oEHoShog7/media/" alt="Calistenia 28" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5p-pLiB1tc/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5p-pLiB1tc/media/" alt="Calistenia 27" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5tOO2NhPkf/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5tOO2NhPkf/media/" alt="Calistenia 26" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5wKpRFBv_c/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5wKpRFBv_c/media/" alt="Calistenia 25" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5ypEV5hcwx/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5ypEV5hcwx/media/" alt="Calistenia 24" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B50HpD0hE5e/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B50HpD0hE5e/media/" alt="Calistenia 23" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B52y04SBAYr/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B52y04SBAYr/media/" alt="Calistenia 22" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B55Nb49hSjm/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B55Nb49hSjm/media/" alt="Calistenia 21" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B58lX0wBsiU/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B58lX0wBsiU/media/" alt="Calistenia 20" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5_FAwFhs1S/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5_FAwFhs1S/media/" alt="Calistenia 19" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6BnV0XJ6EB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6BnV0XJ6EB/media/" alt="Calistenia 18" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6DllLcpYGN/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6DllLcpYGN/media/" alt="Calistenia 17" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6G3BJnhgoV/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6G3BJnhgoV/media/" alt="Calistenia 16" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6JfTPuhSQI/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6JfTPuhSQI/media/" alt="Calistenia 15" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6MDbcdBnd1/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6MDbcdBnd1/media/" alt="Calistenia 14" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6OcwEeBSJV/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6OcwEeBSJV/media/" alt="Calistenia 13" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6RJcBxhcQM/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6RJcBxhcQM/media/" alt="Calistenia 12" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6TpoH-BG4H/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6TpoH-BG4H/media/" alt="Calistenia 11" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6WgjfMh-bH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6WgjfMh-bH/media/" alt="Calistenia 10" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6Y3-VKp5-D/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6Y3-VKp5-D/media/" alt="Calistenia 9" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6beVPfp8-6/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6beVPfp8-6/media/" alt="Calistenia 8" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6duCQLhDe5/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6duCQLhDe5/media/" alt="Calistenia 7" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6gvPjehnQI/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6gvPjehnQI/media/" alt="Calistenia 6" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6jRYEYBd6d/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6jRYEYBd6d/media/" alt="Calistenia 5" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6lZ6PSBy9u/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6lZ6PSBy9u/media/" alt="Calistenia 4" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6oS5HVhWi4/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6oS5HVhWi4/media/" alt="Calistenia 3" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6rFN3EhZ-V/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6rFN3EhZ-V/media/" alt="Calistenia 2" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6tkFznBgz-/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6tkFznBgz-/media/" alt="Calistenia 1" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="Codigos"><a href="#Codigos" class="headerlink" title="Códigos"></a>Códigos</h2><p>Desafio de códigos, totalizando 92 dias. <strong>#92daysofcode</strong>. A intenção era mostrar uma transição do básico para o avançado. Registrado no <strong>Instagram</strong> e no <a href="https://github.com/org-moon-world/daysofcode" target="_blank" rel="noopener">Github</a>. Atualmente, transformando esses dias em artigos e atualizando esse blog.</p><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B3F8M5EhyS7/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3F8M5EhyS7/media/" alt="Código 01" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3INBFXBQuu/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3INBFXBQuu/media/" alt="Código 02" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3K8wDFhAAo/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3K8wDFhAAo/media/" alt="Código 03" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3Nex-cBgq3/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3Nex-cBgq3/media/" alt="Código 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3QMJU1BH0k/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3QMJU1BH0k/media/" alt="Código 05" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3SnwZshQvA/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3SnwZshQvA/media/" alt="Código 06" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3VNQpShfOS/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3VNQpShfOS/media/" alt="Código 07" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3XxxIYhU2o/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3XxxIYhU2o/media/" alt="Código 08" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3aewjsBIsR/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3aewjsBIsR/media/" alt="Código 09" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3dHZnsBQgn/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3dHZnsBQgn/media/" alt="Código 10" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3fwy8fhRNh/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3fwy8fhRNh/media/" alt="Código 11" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3iVLTuBcq-/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3iVLTuBcq-/media/" alt="Código 12" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3k5RibhaWg/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3k5RibhaWg/media/" alt="Código 13" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3ncU7tBnfO/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3ncU7tBnfO/media/" alt="Código 14" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3pzts_hZf5/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3pzts_hZf5/media/" alt="Código 15" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3scYARBeuF/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3scYARBeuF/media/" alt="Código 16" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3vGyRvhtK-/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3vGyRvhtK-/media/" alt="Código 17" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3xf22uBUEt/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3xf22uBUEt/media/" alt="Código 18" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B30KIhTBFPK/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B30KIhTBFPK/media/" alt="Código 19" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B323Q5ohges/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B323Q5ohges/media/" alt="Código 20" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B35U_4MJTUe/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B35U_4MJTUe/media/" alt="Código 21" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B378Sa8B3gL/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B378Sa8B3gL/media/" alt="Código 22" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B3-cWUVp9wA/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B3-cWUVp9wA/media/" alt="Código 23" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4BJBjBgVtZ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4BJBjBgVtZ/media/" alt="Código 24" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4EXfnzgUPG/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4EXfnzgUPG/media/" alt="Código 25" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4GShLSgh65/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4GShLSgh65/media/" alt="Código 26" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4I77XMgIzB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4I77XMgIzB/media/" alt="Código 27" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4LbucBg10b/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4LbucBg10b/media/" alt="Código 28" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4OAdlUA6cY/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4OAdlUA6cY/media/" alt="Código 29" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4QijxaFeGv/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4QijxaFeGv/media/" alt="Código 30" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4TPBbLANO8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4TPBbLANO8/media/" alt="Código 31" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4V1ehZA1sR/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4V1ehZA1sR/media/" alt="Código 32" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4Ya626g9lZ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4Ya626g9lZ/media/" alt="Código 33" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4bTv4Kg8Bi/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4bTv4Kg8Bi/media/" alt="Código 34" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4d7OwXg0Cu/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4d7OwXg0Cu/media/" alt="Código 35" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4ghKi8AJkJ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4ghKi8AJkJ/media/" alt="Código 36" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4i6oYKAgqF/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4i6oYKAgqF/media/" alt="Código 37" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4lk234AxBi/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4lk234AxBi/media/" alt="Código 38" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4oM9mHgyj7/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4oM9mHgyj7/media/" alt="Código 39" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4qzVdJgf8d/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4qzVdJgf8d/media/" alt="Código 40" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4tkc6NA_eH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4tkc6NA_eH/media/" alt="Código 41" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4vYeIBAoQY/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4vYeIBAoQY/media/" alt="Código 42" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4y3R-DAc6_/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4y3R-DAc6_/media/" alt="Código 43" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B41f2bjAJfw/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B41f2bjAJfw/media/" alt="Código 44" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B44HvoMAQsf/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B44HvoMAQsf/media/" alt="Código 45" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B46HbhcA7s1/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B46HbhcA7s1/media/" alt="Código 46" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B483xVDA6RP/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B483xVDA6RP/media/" alt="Código 47" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4_4s74AV6N/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4_4s74AV6N/media/" alt="Código 48" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5BuwTqACLB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5BuwTqACLB/media/" alt="Código 49" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5EyvSHgvAj/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5EyvSHgvAj/media/" alt="Código 50" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5HerWUgl9b/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5HerWUgl9b/media/" alt="Código 51" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5J3lZMgOLM/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5J3lZMgOLM/media/" alt="Código 52" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5MgLm1gYjO/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5MgLm1gYjO/media/" alt="Código 53" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Piwk8A700/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Piwk8A700/media/" alt="Código 54" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5SAhslg-h2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5SAhslg-h2/media/" alt="Código 55" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5TyDJwgfoT/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5TyDJwgfoT/media/" alt="Código 56" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5XYU6NAJbN/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5XYU6NAJbN/media/" alt="Código 57" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Y0r5wgBRD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Y0r5wgBRD/media/" alt="Código 58" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5bYS6UAWz6/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5bYS6UAWz6/media/" alt="Código 59" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5eel9WhK3k/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5eel9WhK3k/media/" alt="Código 60" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5g14ugBGpj/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5g14ugBGpj/media/" alt="Código 61" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5jfPd1hV-g/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5jfPd1hV-g/media/" alt="Código 62" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5moiElBe4O/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5moiElBe4O/media/" alt="Código 63" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5oo24eh69i/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5oo24eh69i/media/" alt="Código 64" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5sY6HYhGps/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5sY6HYhGps/media/" alt="Código 65" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5ttnSUBXLD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5ttnSUBXLD/media/" alt="Código 66" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5wXSywBlMx/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5wXSywBlMx/media/" alt="Código 67" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5y5q8ZBpG0/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5y5q8ZBpG0/media/" alt="Código 68" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B50JVNvBjFC/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B50JVNvBjFC/media/" alt="Código 69" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B520LFAhQtD/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B520LFAhQtD/media/" alt="Código 70" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B56aHrfp-kl/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B56aHrfp-kl/media/" alt="Código 71" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B586rlxhZ3B/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B586rlxhZ3B/media/" alt="Código 72" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5_FZtJhvuz/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5_FZtJhvuz/media/" alt="Código 73" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6BrDyHJqCG/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6BrDyHJqCG/media/" alt="Código 74" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6Ex6g0pmdo/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6Ex6g0pmdo/media/" alt="Código 75" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6HfoEuB7we/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6HfoEuB7we/media/" alt="Código 76" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6Jfzu2h3pS/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6Jfzu2h3pS/media/" alt="Código 77" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6MmgeQhsFR/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6MmgeQhsFR/media/" alt="Código 78" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6POxKHh3N3/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6POxKHh3N3/media/" alt="Código 79" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6RklevhyUh/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6RklevhyUh/media/" alt="Código 80" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6USxbGBn1g/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6USxbGBn1g/media/" alt="Código 81" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6XPKsehypd/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6XPKsehypd/media/" alt="Código 82" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6ZIL1DJe7m/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6ZIL1DJe7m/media/" alt="Código 83" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6cSZCRJLuE/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6cSZCRJLuE/media/" alt="Código 84" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6efqVPhTRE/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6efqVPhTRE/media/" alt="Código 85" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6hQvbYBzyi/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6hQvbYBzyi/media/" alt="Código 86" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6jZwoohSwP/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6jZwoohSwP/media/" alt="Código 87" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6mUUCsB6zd/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6mUUCsB6zd/media/" alt="Código 88" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6pg3Q2hfqZ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6pg3Q2hfqZ/media/" alt="Código 89" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6sDJ1GhvBN/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6sDJ1GhvBN/media/" alt="Código 90" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6uaee1Be9Q/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6uaee1Be9Q/media/" alt="Código 91" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6wHXw0psST/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6wHXw0psST/media/" alt="Código 92" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="Monologo-na-caminhada"><a href="#Monologo-na-caminhada" class="headerlink" title="Monólogo na caminhada"></a>Monólogo na caminhada</h2><p>Aproveitei, para fazer monólogos rápidos durante a caminhada, que ficava mais dificil de raciocinar. Foi um desafio interessante.</p><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B40oRkygfIL/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B40oRkygfIL/media/" alt="Monólogo na caminhada 01" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4-0fYxgESj/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4-0fYxgESj/media/" alt="Monólogo na caminhada 02" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5L89BSgS1i/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5L89BSgS1i/media/" alt="Monólogo na caminhada 03" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5sd2qEB8Jv/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5sd2qEB8Jv/media/" alt="Monólogo na caminhada 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B55gCtqhwfH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B55gCtqhwfH/media/" alt="Monólogo na caminhada 05" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6D4gkOJsve/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6D4gkOJsve/media/" alt="Monólogo na caminhada 06" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6odn6RBmuF/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6odn6RBmuF/media/" alt="Monólogo na caminhada 07" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B79fJjWhYYH/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B79fJjWhYYH/media/" alt="Monólogo na caminhada 08" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="Sonus-et-Rhythmus"><a href="#Sonus-et-Rhythmus" class="headerlink" title="Sonus et Rhythmus"></a>Sonus et Rhythmus</h2><p>Consegui registrar as minhas playlists e ter mais conteúdo.</p><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B43lLoqAkL7/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B43lLoqAkL7/media/" alt="Playlist 01" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B45pYlEAq7U/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B45pYlEAq7U/media/" alt="Playlist 02" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B47YyGjAIHe/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B47YyGjAIHe/media/" alt="Playlist 03" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B4-ds3agvXn/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4-ds3agvXn/media/" alt="Playlist 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5AHd17g7Zh/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5AHd17g7Zh/media/" alt="Playlist 05" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5C4DzpAIkn/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5C4DzpAIkn/media/" alt="Playlist 06" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5F8lJzAeM8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5F8lJzAeM8/media/" alt="Playlist 07" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5H4RnEgbd9/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5H4RnEgbd9/media/" alt="Playlist 08" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5LJ5k_A1-D/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5LJ5k_A1-D/media/" alt="Playlist 09" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5NuNWFAS37/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5NuNWFAS37/media/" alt="Playlist 10" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5P0tvggxB_/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5P0tvggxB_/media/" alt="Playlist 11" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5SVVHIARMi/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5SVVHIARMi/media/" alt="Playlist 12" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5Utc7qAmov/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5Utc7qAmov/media/" alt="Playlist 13" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5XlwzFgyp_/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5XlwzFgyp_/media/" alt="Playlist 14" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5aEPSMANJy/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5aEPSMANJy/media/" alt="Playlist 15" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5csQUagHOz/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5csQUagHOz/media/" alt="Playlist 16" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5fYRU0BdPZ/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5fYRU0BdPZ/media/" alt="Playlist 17" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6ZrQDEpr4M/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6ZrQDEpr4M/media/" alt="Playlist 18" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6mixKMBhVS/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6mixKMBhVS/media/" alt="Playlist 19" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6uF94TBBKE/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6uF94TBBKE/media/" alt="Playlist 20" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B63VMBXh5KV/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B63VMBXh5KV/media/" alt="Playlist 21" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B76wlvqBNF7/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B76wlvqBNF7/media/" alt="Playlist 22" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8VEPJDhNGs/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8VEPJDhNGs/media/" alt="Playlist 23" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CA2WRWUJ3HS/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CA2WRWUJ3HS/media/" alt="Playlist 24" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CBNcBYlpshm/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CBNcBYlpshm/media/" alt="Playlist 25" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="IHMO-Movies"><a href="#IHMO-Movies" class="headerlink" title="IHMO Movies"></a>IHMO Movies</h2><p>Não poderia deixar de fora a minha paixão pelo mundo cinematográfico. Além de registrar no meu <strong>Instagram</strong>, consegui gerar conteúdo semanalmente para o <strong>Youtube</strong>. Os vídeos podem ser vistos <a href="/videos">aqui</a>.</p><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B4yaNwugEBA/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B4yaNwugEBA/media/" alt="IMHO Movies 01" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5D_Wumg_Pl/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5D_Wumg_Pl/media/" alt="IMHO Movies 02" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5WkxyoATiU/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5WkxyoATiU/media/" alt="IMHO Movies 03" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B5ppb8uhdNj/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B5ppb8uhdNj/media/" alt="IMHO Movies 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B542jlgJOGl/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B542jlgJOGl/media/" alt="IMHO Movies 05" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6OLNOBh0q3/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6OLNOBh0q3/media/" alt="IMHO Movies 06" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6gTHWYhBhX/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6gTHWYhBhX/media/" alt="IMHO Movies 07" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B6vqpatpfJw/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B6vqpatpfJw/media/" alt="IMHO Movies 08" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B7COZ_UBA1z/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B7COZ_UBA1z/media/" alt="IMHO Movies 09" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B7S3z9NBEU2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B7S3z9NBEU2/media/" alt="IMHO Movies 10" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B7oW92nh-8U/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B7oW92nh-8U/media/" alt="IMHO Movies 11" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B731CsMBVIz/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B731CsMBVIz/media/" alt="IMHO Movies 12" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8MVJLqhDx4/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8MVJLqhDx4/media/" alt="IMHO Movies 13" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8b9DoGBj4U/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8b9DoGBj4U/media/" alt="IMHO Movies 14" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8tUATIBnlT/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8tUATIBnlT/media/" alt="IMHO Movies 15" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8_abVjhv-J/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8_abVjhv-J/media/" alt="IMHO Movies 16" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B9RzMfaJiqd/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B9RzMfaJiqd/media/" alt="IMHO Movies 17" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B9mSL6QJc9v/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B9mSL6QJc9v/media/" alt="IMHO Movies 18" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B92ypJgpSqk/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B92ypJgpSqk/media/" alt="IMHO Movies 19" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B-NcDmlJJj1/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B-NcDmlJJj1/media/" alt="IMHO Movies 20" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B-gBDFwpeY8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B-gBDFwpeY8/media/" alt="IMHO Movies 21" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B-yr1abpbk_/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B-yr1abpbk_/media/" alt="IMHO Movies 22" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B_ENAGSpCL2/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B_ENAGSpCL2/media/" alt="IMHO Movies 23" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B_Uqy1RJHL8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B_Uqy1RJHL8/media/" alt="IMHO Movies 24" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B_oCQlgpuX8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B_oCQlgpuX8/media/" alt="IMHO Movies 25" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B_6bfs3pHiW/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B_6bfs3pHiW/media/" alt="IMHO Movies 26" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CAJ-c-2Jx5m/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CAJ-c-2Jx5m/media/" alt="IMHO Movies 27" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CAcV2afpZ6o/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CAcV2afpZ6o/media/" alt="IMHO Movies 28" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CAwa1QNpbFB/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CAwa1QNpbFB/media/" alt="IMHO Movies 29" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CBAZnBPJnbM/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CBAZnBPJnbM/media/" alt="IMHO Movies 30" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/CBSinCUJnve/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/CBSinCUJnve/media/" alt="IMHO Movies 31" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="Jornada-Relevante"><a href="#Jornada-Relevante" class="headerlink" title="Jornada Relevante"></a>Jornada Relevante</h2><p>É preciso ter um bom momento para relaxar e conhecer novos lugares. Para encerrar esse ano de desafios, tinha que ter essa viagem, para fechar com chave de ouro.</p><ul class="images"><li class="loader"><a href="https://www.instagram.com/p/B7oVeTyh9o8/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B7oVeTyh9o8/media/" alt="Jornada Relevante 01" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B7ohMRGBR4T/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B7ohMRGBR4T/media/" alt="Jornada Relevante 02" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B75_e0OBZqE/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B75_e0OBZqE/media/" alt="Jornada Relevante 03" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B78_-zOh3Rn/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B78_-zOh3Rn/media/" alt="Jornada Relevante 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B79r56Dhy1p/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B79r56Dhy1p/media/" alt="Jornada Relevante 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li><li class="loader"><a href="https://www.instagram.com/p/B8BraclhGnd/" target="_blank" rel="noopener"><img class="lazy" src="/assets/img/site/global/transparent.png" data-src="https://www.instagram.com/p/B8BraclhGnd/media/" alt="Jornada Relevante 04" width="80" height="80" onerror='this.src="/assets/img/site/global/image-not-found.png"'></a></li></ul><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Foram 9 dias no nordeste, dessa vez só no <strong>Recife</strong>, mas consegui dar um pulo em <strong>Alagoas</strong>, para conhecer <strong>Maragogi</strong>. No dia 22 de janeiro de 2020, tendo voltado de viagem no dia anterior, estava me encontrando no final do ano dos desafios.</p><p>A grana já estava no fim, afinal, uma hora ela acaba. O planejamento foi para 1 ano e uma hora chegamos na reta final.</p><p>Então, fiquei reservado em casa para não ter mais custos e esperar a volta para o mercado de trabalho. Fui tocando algumas coisas e analisando vagas. Fui deixando para março, pois a ideia era completar 1 ano. Na minha cabeça, não teria mais oportunidade ou não queria mais fazer isso novamente.</p><p>Por mais que você tire um tempo para você, coloque planos e objetivos, sempre se trabalha com a incerteza, pois aqui, ninguém tem renda infinita ou alguém para bancar. Podemos dizer também, que nem sempre o melhor para você, também fará bem para a sua imagem profissional.</p><p>As pessoas desenvolvedoras tem uma visão, as empresas tem uma visão e as pessoas de RH tem uma visão.</p><p>Como desenvolvedor e criador de conteúdo, estou sempre evoluindo, mas ainda temos visões engessadas na área de tecnologia. Um tempo para você, pode somar para uns, mas pode ser motivo de desconfiança para outros.</p><p>Então, as incertezas são muito grandes. Gosto de ser modesto, mas se me falarem que tenho coragem, pode ser que eu concorde. Afinal, não consigo dizer claramente de onde vem essa determinação. As vezes penso nisso e uma resposta seria que não tenho medo de trabalhar.</p><p>Já fiz muitas coisas nessa vida. Não tenho receio de trabalhar como jardineiro, pedreiro e mais. Talvez, seja isso, o baixo custo de vida e não ter dependentes que possibilitam a minha “<strong>coragem</strong>“.</p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>No dia 01 de abril de 2020, estava começando em uma nova empresa e assim se encerrou o ano de desafios. A história após esse dia, continua em um próximo artigo pessoal.</p><p>Com esses 2 artigos, temos um resumo dos meus últimos 5 anos.</p><p>Se chegou até aqui, espero que essa história real te acrescente em algo. É interessante escrever sem saber como será o dia de amanhã e se nossos objetivos serão alcançados. Foi muito bom rever o artigo que escrevi há 4 anos e estar escrevendo um novo artigo pessoal, hoje.</p><p>Dei um pequeno azar em ficar 92 dias em uma correria insana, depois mais 54 dias em uma quarentena voluntária para poupar dinheiro e desde o dia 15.03.2020, em quarentena por causa da <strong>covid-19</strong>. Para tirar um tempo para você, é preciso ter coragem. Não sabemos o dia de amanhã e as coincidências podem ser bizarras.</p><p>Espero que se tenha mais um artigo com a continuação dessa história. Até a próxima.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Esse é o segundo artigo de teor pessoal que pode ser encontrado nesse blog. O primeiro artigo é o &lt;a href=&quot;/hemersonvianna/artigos/person
      
    
    </summary>
    
      <category term="personal" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com Vue</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/vue/comecando-com-vue/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/vue/comecando-com-vue/</id>
    <published>2019-08-14T18:20:00.000Z</published>
    <updated>2019-08-14T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Quando se trata de front-end, temos muitas bibliotecas e frameworks no mercado. Temos 3 frameworks/bobliotecas(React, Angular e Vue), cuja a comunidade vem crescendo e se fortalecendo nos últimos anos. Dos 3, tive menos contato com o <strong>VueJS</strong>, que é o tema desse artigo.</p><p>Por traz da criação do framework, temos <a href="https://twitter.com/youyuxi" target="_blank" rel="noopener">Evan You</a>, que iniciou o projeto quando estava trabalhando na empresa <strong>Google</strong>, em 2013. Acredito que a primeira coisa que vem à sua cabeça, é o <strong>AngularJS</strong>. Pois bem, ele usou bastante o <strong>AngularJS</strong> e estava entre os engenheiros da <strong>Google</strong>, na época do <strong>AngularJS</strong> 1.x.</p><p>Em seu antigo blog, ele escreveu um artigo com uma <a href="https://blog.evanyou.me/2015/10/25/vuejs-re-introduction/" target="_blank" rel="noopener">reintrodução ao VueJS</a>, em 2015. Nesse artigo, ele buscava explicar os motivos para ser usar e estudar mais sobre o <strong>VueJS</strong>, sendo que nessa época, já haviam várias opções de bibliotecas e frameworks. Ele também postou o artigo no <a href="https://medium.com/@youyuxi/vue-js-a-re-introduction-ed159414a1be" target="_blank" rel="noopener">medium</a>.</p><p>Agora vamos voltar um pouquinho e seguir a cronologia.</p><h2 id="Releases"><a href="#Releases" class="headerlink" title="Releases"></a>Releases</h2><p>O <strong>VueJS</strong> foi lançado em fevereiro de 2014, com o release <strong>Animatrix</strong>. A versão <strong>v2.6.0</strong>, foi lançada em fevereiro deste ano e no momento temos a versão <strong>v2.6.10</strong>, que foi lançada em 20 de março. Particularmente, gosto muito da consistência dos releases do <strong>VueJS</strong>.</p><p>Irei até pesquisar sobre o intervalo que teve em 2018, mas já olhando o repositório, a preocupação foi apenas com as versões de correção(PATCH) do <strong>v2.5.0</strong>. Por alto e sem muito conhecimento da rotina de manutenção do framework, me parece bem sólido o lançamento das versões com novas funcionalidades(MINOR).</p><p>Basicamente, se tem o processo de lançamento, foco nas correções e logo após o estudo com as versões beta para um próximo release. (Processo bem óbvio, mas é bonito de se ver)</p><p>Acho bem interessante a trajetória do framework, em relação a questão de releases e ver que a versão <strong>2.x.x</strong> (MAJOR), está sendo sustentada desde 2016. Traz uma segurança. :)</p><p>Até o momento, temos os seguintes releases:</p><ul><li>08/12/2013 - <a href="https://github.com/vuejs/vue/releases/tag/v0.6.0" target="_blank" rel="noopener">v0.6.0: VueJS</a></li><li>08/12/2013 - <a href="https://github.com/vuejs/vue/releases/tag/v0.7.0" target="_blank" rel="noopener">v0.7.0</a></li><li>08/12/2013 - <a href="https://github.com/vuejs/vue/releases/tag/v0.8.0" target="_blank" rel="noopener">v0.8.0</a></li><li>25/02/2014 - <a href="https://github.com/vuejs/vue/releases/tag/v0.9.0" target="_blank" rel="noopener">v.0.9.0: Animatrix</a> <code>Lançamento do VueJS</code></li><li>23/03/2014 - <a href="https://github.com/vuejs/vue/releases/tag/v0.10.0" target="_blank" rel="noopener">v0.10.0: Blade Runner</a></li><li>07/11/2014 - <a href="https://github.com/vuejs/vue/releases/tag/v0.11.0" target="_blank" rel="noopener">v0.11.0: Cowboy Bebop</a></li><li>12/06/2015 - <a href="https://github.com/vuejs/vue/releases/tag/v0.12.0" target="_blank" rel="noopener">v0.12.0: Dragon Ball</a></li><li>25/10/2015 - <a href="https://github.com/vuejs/vue/releases/tag/v1.0.0" target="_blank" rel="noopener">v1.0.0: Evangelion</a></li><li>30/09/2016 - <a href="https://github.com/vuejs/vue/releases/tag/v2.0.0" target="_blank" rel="noopener">v2.0.0: Ghost in the Shell</a></li><li>22/11/2016 - <a href="https://github.com/vuejs/vue/releases/tag/v2.1.0" target="_blank" rel="noopener">v2.1.0: Hunter X Hunter</a></li><li>26/02/2017 - <a href="https://github.com/vuejs/vue/releases/tag/v2.2.0" target="_blank" rel="noopener">v2.2.0: Initial D</a></li><li>27/04/2017 - <a href="https://github.com/vuejs/vue/releases/tag/v2.3.0" target="_blank" rel="noopener">v2.3.0: JoJo’s Bizarre Adventure</a></li><li>13/07/2017 - <a href="https://github.com/vuejs/vue/releases/tag/v2.4.0" target="_blank" rel="noopener">v2.4.0: Kill la Kill</a></li><li>13/10/2017 - <a href="https://github.com/vuejs/vue/releases/tag/v2.5.0" target="_blank" rel="noopener">v2.5.0: Level E</a></li><li>04/02/2019 - <a href="https://github.com/vuejs/vue/releases/tag/v2.6.0" target="_blank" rel="noopener">v2.6.0: Macross</a></li></ul><p>No blog atual do <strong>Evan You</strong>, temos o destaque para as versões:</p><ul><li><a href="https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.vh9f94s2m" target="_blank" rel="noopener">Vue 2.0 is Here!</a></li><li><a href="https://medium.com/the-vue-point/vue-2-5-released-14bd65bf030b" target="_blank" rel="noopener">Vue 2.5 released</a></li><li><a href="https://medium.com/the-vue-point/vue-2-6-released-66aa6c8e785e" target="_blank" rel="noopener">Vue 2.6 released</a></li></ul><h2 id="Sobre-o-framework"><a href="#Sobre-o-framework" class="headerlink" title="Sobre o framework"></a>Sobre o framework</h2><p>o <strong>Vue</strong> deperta o meu interesse devido a alguns pontos que já estou acostumado com o <strong>React</strong>:</p><ul><li>utiliza a abordagem de DOM virtual.</li><li>provê componentes visuais reativos e combináveis.</li><li>mantêm o foco na biblioteca principal, com preocupações como roteamento e gerenciamento de estado global tratadas por bibliotecas companheiras.</li><li>entre outras vantagens que podem ser vistas nesse <a href="https://br.vuejs.org/v2/guide/comparison.html#React" target="_blank" rel="noopener">comparativo</a></li></ul><h3 id="Mais-algumas-vantagens"><a href="#Mais-algumas-vantagens" class="headerlink" title="Mais algumas vantagens"></a>Mais algumas vantagens</h3><p><strong>Simplicidade</strong><br>A idéia básica por trás do desenvolvimento com Vue é obter bons resultados com o mínimo de esforço possível. Ter o armazenamento de todos os códigos de um componente, como <strong>HTML</strong>, <strong>CSS</strong> e <strong>JavaScript</strong>, em um único arquivo.</p><p><strong>Integração</strong><br>Os desenvolvedores podem integrar o Vue a outras estruturas, como o React, permitindo que eles personalizem o projeto de acordo com seus respectivos requisitos.</p><p><strong>Fácil aprendizado</strong><br>De acordo com vários especialistas, o Vue não requer uma grande curva de aprendizado, o que é benéfico para novos desenvolvedores. Requer apenas que os desenvolvedores conheçam os fundamentos de JavaScript, HTML e CSS, que é diferente de outras bibliotecas/frameworks, onde linguagens de programação adicionais são necessárias para codificação avançada.</p><p><strong>Documentação</strong><br>Documentação extensa e detalhada que torna rápido e fácil de aprender. Ele permite que um desenvolvedor inexperiente, com apenas um conhecimento básico de HTML e JavaScript, desenvolva um aplicativo.</p><p><strong>Flexibilidade</strong><br>O framework Vue não é opinativo, você pode projetar a estrutura do aplicativo do jeito que você quer que seja.</p><p><strong>Suporte ao TypeScript</strong><br>O Vue tem um suporte nativo para o TypeScript.</p><p><strong>Vue CLI 3</strong><br>Interface gráfica, suporte a plug-ins, prototipagem instantânea e uma configuração muito fácil do Webpack.</p><p><strong>Devtools no navegador</strong><br>Permitindo que os desenvolvedores verifiquem o estado atual do Vuex, componentes, views, alterem manualmente dados específicos ou até mesmo analisem mais profundamente os eventos.</p><h3 id="Algumas-desvantagens"><a href="#Algumas-desvantagens" class="headerlink" title="Algumas desvantagens"></a>Algumas desvantagens</h3><p><strong>Falta de suporte para grandes projetos</strong><br>A equipe de desenvolvimento do <strong>Vue</strong> é pequena, o que significa que o framework precisará de algum tempo para obter suporte corporativo. Desde de 2018, o desenvolvimento do framework não está atrelado ao interesse das empresas. Sendo assim, mudanças na estrutura existente dependem principalmente do feedback dos membros da comunidade.</p><p><strong>Falta de Plugins</strong><br>O <strong>Vue</strong> ainda não tem o amplo apoio de seus colegas frameworks, já que não é tão popular quanto <strong>React</strong> ou <strong>Angular</strong>. Existem muito mais recursos para o <strong>React</strong> do que o <strong>Vue</strong>.</p><p><strong>Muita flexibilidade pode ser problemática</strong><br>Às vezes, a flexibilidade pode causar alguns problemas para os desenvolvedores. Mas a variedade de opções do <strong>Vue</strong> pode se tornar um fardo quando implementada em projetos maiores que envolvem muitos desenvolvedores.</p><p>O pensamento final é que o <strong>VueJS</strong> tem poucas desvantagens em comparação com outros frameworks. Como tem que ser, a questão é fazer uma análise completa do que a tecnologia pode oferecer e o que o seu projeto precisa.</p><h2 id="Aplicacoes-Moveis"><a href="#Aplicacoes-Moveis" class="headerlink" title="Aplicações Móveis"></a>Aplicações Móveis</h2><p>Se fosse para o <strong>React</strong>, a resposta seria rápida. Para o <strong>Vue</strong>, se tem 2 opções:</p><ul><li><a href="https://docs.nativescript.org/vuejs/nativescript-vuejs" target="_blank" rel="noopener">Native Script</a> - NativeScript é um framework open source para construção de aplicativos móveis nativos usando JavaScript. Também é possivel saber mais com essa <a href="https://nativescript-vue.org/pt-br/docs/introduction/" target="_blank" rel="noopener">documentação do NativeScript-Vue</a>.</li><li><a href="https://weex.apache.org/guide/use-vue-in-weex.html" target="_blank" rel="noopener">Weex</a> - é um projeto criado pelo gigante chinês do comércio eletrônico, Alibaba. Com ele é possível produzir aplicações para web (html5), Android e iOS a partir da mesma base de código.</li></ul><h2 id="Ferramentas"><a href="#Ferramentas" class="headerlink" title="Ferramentas"></a>Ferramentas</h2><h3 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h3><p>Temos o CLI (command line interface) do <strong>VueJS</strong>, para criar a estrutura básica com o framework.</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> install -g @vue/cli</span><br><span class="line"><span class="comment"># ou</span></span><br><span class="line">yarn <span class="built_in">global</span> add @vue/cli</span><br></pre></td></tr></table></figure><p>Tem a <a href="https://cli.vuejs.org/" target="_blank" rel="noopener">documentação</a> completa que você pode conferir. Também pode ter acesso à organização com os <a href="https://github.com/vuejs-templates" target="_blank" rel="noopener">templates</a>.</p><h3 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h3><p>Com o <strong>Vue Loader</strong>, você pode criar componentes do <strong>Vue</strong>, no formato SFC (Vue Single-File Component). Que seria um arquivo <code>*.vue</code>, que usa a sintaxe semelhante ao do HTML para descrever um componente do Vue. Cada arquivo é composto por três tipos de blocos de linguagem: <code>&lt;template&gt;</code>, <code>&lt;script&gt;</code> e <code>&lt;style&gt;</code>, e blocos personalizados opcionalmente adicionais. Exemplo:</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"example"</span>&gt;</span></span><span class="template-variable">&#123;&#123; msg &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">  data () &#123;</span></span><br><span class="line"><span class="xml">    return &#123;</span></span><br><span class="line"><span class="xml">      msg: 'Hello world!'</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">.example &#123;</span></span><br><span class="line"><span class="xml">  color: red;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">custom1</span>&gt;</span></span></span><br><span class="line"><span class="xml">  This could be e.g. documentation for the component.</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">custom1</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>Confere a <a href="https://vue-loader.vuejs.org/" target="_blank" rel="noopener">documentação</a> completa para saber mais.</p><h3 id="Devtools"><a href="#Devtools" class="headerlink" title="Devtools"></a>Devtools</h3><p>Estou muito acostumando a debugar em alguns navegadores com <strong>React</strong>, mas com o <strong>Vue</strong> também é possível. Dá uma olhada no <a href="https://github.com/vuejs/vue-devtools" target="_blank" rel="noopener">projeto</a>.</p><h2 id="Bibliotecas-oficiais"><a href="#Bibliotecas-oficiais" class="headerlink" title="Bibliotecas oficiais"></a>Bibliotecas oficiais</h2><h3 id="Vue-router"><a href="#Vue-router" class="headerlink" title="Vue router"></a>Vue router</h3><p>Para a questão de roteamento com o <strong>Vue</strong>, você precisa do <strong>Vue Router</strong>. Ele se integra ao núcleo do <strong>Vue</strong> para facilitar a criação de uma SPA e tem as seguintes características:</p><ul><li>Mapeamento de rota/visualização aninhada</li><li>Configuração de roteador modular baseada em componente</li><li>Parâmetros de rota, de consulta, wildcard (curinga, ex: “*”)</li><li>Efeitos de transição de <strong>views</strong> ativados pelo sistema de transição do Vue</li><li>Controle de navegação refinado</li><li>Links com classes CSS ativas automáticas</li><li>Modo de histórico HTML5 ou modo hash, com fallback automático no IE9</li><li>Comportamento de rolagem personalizável</li></ul><p>Veja mais na <a href="http://router.vuejs.org/" target="_blank" rel="noopener">documentação</a> oficial.</p><h3 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h3><p>O <strong>Vue</strong> tem essa biblioteca, que tamém é um padrão de gerenciamento de estado para as aplicações com o framework. Ele centraliza o armazenamento de todos os componentes de uma aplicação, contendo regras com o intuito de garantir que o estado só possa ser modificado de maneira previsível.</p><p>Essa biblioteca merece um artigo só sobre o assunto, mas por enquanto pode dar uma olhada na <a href="http://vuex.vuejs.org/" target="_blank" rel="noopener">documentação</a> oficial.</p><h3 id="Vue-Server-Renderer"><a href="#Vue-Server-Renderer" class="headerlink" title="Vue Server Renderer"></a>Vue Server Renderer</h3><p>Faz um bom tempo que o desenvolvedor front-end, tem se preocupado não apenas com o lado do cliente. A preocupação com SEO, performance, consumo de CPU e outros assuntos que o lado do servidor resolve melhor, tem sido os motivos para o <strong>NodeJS</strong>, ser a plataforma da esperança.</p><p>Renderizar pelo lado do servidor, cada vez mais se mostra uma coisa primordial no desenvolvimento front-end. Assim, nos dias de hoje, temos um aumento na designação de desemvolvedor full-stack. Pra quem é da época do <strong>Web designer</strong> e <strong>Web master</strong>, como eu, não liga muito para rótulos.</p><p>O fato é que as camadas no desenvolvimento de uma aplicaçao tem ficado cada vez mais próximas na questão da mão de obra. A <a href="https://ssr.vuejs.org/" target="_blank" rel="noopener">documentação</a> oficial dessa biblioteca está disponível para você saber mais sobre usar o <strong>Vue</strong>, no lado do servidor.</p><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Depois de muitas estratégias de estudo, agora busco ter alguns padrões para estudar sobre alguma tecnologia. Com a combinação de artigos e repositórios no github, tento consolidar o conhecimento.</p><p>No caso do <strong>VueJS</strong>, tenho o repositório <a href="https://github.com/org-victorinox/knowledge-vuejs" target="_blank" rel="noopener">Knowledge VueJS</a>, onde guardo os links de artigos, videos e projetos sobre o assunto. Também tem o repositório <a href="https://github.com/org-victorinox/prime-vuejs" target="_blank" rel="noopener">Prime VueJS</a>, onde testo uma estrutura SPA básica com o framework.</p><p>Nessa estratégia de conhecimento sobre o framework, falta mais um repositório utilizando mais recursos SPA (Single Page Application) e SSR (Server Side Rendering). Quando o mesmo estiver pronto, atualizo esse artigo.</p><p>Nos próximos artigos sobre <strong>Vue</strong>, vamos conhecer mais sobre o framework e levantar mais questões para a sua utilização e comparativo com outros frameworks/bibliotecas do mercado. Enquanto isso, você pode conferir a <a href="https://br.vuejs.org/" target="_blank" rel="noopener">documentação</a> oficial.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Quando se trata de front-end, temos muitas bibliotecas e frameworks no mercado. Temos 3 frameworks/bobliotecas(React, Angular e Vue), cuj
      
    
    </summary>
    
      <category term="vue" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/vue/"/>
    
    
  </entry>
  
  <entry>
    <title>UI Grid - Sistemas e bibliotecas</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/front-end/ui-grid-sistemas-e-bibliotecas/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/front-end/ui-grid-sistemas-e-bibliotecas/</id>
    <published>2019-07-22T18:20:00.000Z</published>
    <updated>2019-07-22T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Nos últimos 8 anos, os sistemas de grid CSS vem ganhando destaque pela atenção que o layout responsivo tem recebido. E estou estimando esse tempo, com base na data de lançamento do twitter boostrap (19 de agosto de 2011). Essa seria a minha referência, em relação ao início forte de discussões sobre boas práticas para layout responsivo, frameworks e bibliotecas para esse fim.</p><h2 id="Sistema-de-grid"><a href="#Sistema-de-grid" class="headerlink" title="Sistema de grid"></a>Sistema de grid</h2><p>O sistema de grid é uma estrutura que permite o alinhamento de elementos da página com base em colunas e linhas sequenciadas.</p><p>O formato com 12 colunas tem sido o mais utilizado, por causa da flexibilidade proporcionada e por ser capaz de dividir o layout uniformemente. Na divisão por 2, 3 e 4, temos uma serie de modulações disponíveis (2x6 , 3x4) e várias outras combinações.</p><p>O número de colunas pode variar dependendo do projeto. Quanto maior o número de colunas, (por exemplo, 16 ou 24) maior a quantidade de possibilidades para divisão.</p><p><a href="https://960.gs/" target="_blank" rel="noopener">960 Grid System</a>, considerado o rei do <strong>grid</strong> por muitos anos, tem a seguinte estrutura:</p><ul><li>Largura total de 960px.</li><li>12 colunas<ul><li>Largura de 60px em cada coluna.</li><li>Cada coluna tem 10px de margem esquerda e direita. Sendo 20px de espaço entre as colunas.</li><li>A área total do conteúdo é de 940px.</li></ul></li><li>16 colunas<ul><li>largura de 40px em cada coluna.</li><li>Cada coluna tem 10px de margem esquerda e direita. Sendo 20px de espaço entre as colunas.</li><li>A área total do conteúdo é de 940px.</li></ul></li><li>24 colunas<ul><li>largura de 30px em cada coluna.</li><li>Cada coluna tem 5px de margem esquerda e direita. Sendo 10px de espaço entre as colunas.</li><li>A área total do conteúdo é de 950px.</li></ul></li></ul><p>Uma das principais razões para a popularidade do <strong>960 Grid</strong> com os designers é a sua flexibilidade. Os designers podem usar uma ampla gama de colunas, com o número máximo de 24.</p><p>Funcionou muito bem no começo e ainda funciona até hoje, porque a maioria dos projetos tem o tamanho de fonte definido em 12px. De uns anos para cá, que a maioria dos layouts estão sendo definidos com tamanho de fonte de 13px ou superior.</p><p>Como o tamanho da fonte aumentou, é necessário aumentar a área de conteúdo e ajustar o espaço entre as colunas. Com a evolução das boas práticas na experiência do usuário e uma variedade de novos dispositivos, o sistema de grid foi ganhando uma infinidade de variações. Ex: O <strong>Bootstrap</strong>, acima de 960px, usa a largura de 1140px para área de conteúdo no tamanho <strong>wide</strong>.</p><p>Sendo encontrado com facilidade na internet, os sistemas mais comuns. Lembrando que o projeto terá uma necessidade e o sistema poderá ser livremente customizado.</p><h2 id="Levando-o-layout-CSS-ao-proximo-nivel"><a href="#Levando-o-layout-CSS-ao-proximo-nivel" class="headerlink" title="Levando o layout CSS ao próximo nível"></a>Levando o layout CSS ao próximo nível</h2><p>Quem já trabalha com layout CSS, há muitos anos, já deve ter visto muito <code>float: *</code>, <code>display: table</code>, <code>display: inline-block</code>, para montar uma grade na estrutura ou em um simples menu. Desde 2015, o suporte dos navegadores mais relevantes para o <strong>Flexbox</strong>, tem sido excelente. O <strong>CSS Grid</strong>, tem sido bem recebido pelo navegadores, desde 2017. É claro que não considero o <strong>IE</strong>, para falar de suporte as novas tecnologias, mas o suporte a esse layout que tem feito muitos desenvolvedores felizes, já passa de 90%. Agora, vamos falar mais sobre essa flexibilidade que temos no <strong>CSS</strong>.</p><p>O <strong>Flexbox</strong>, foi projetado como um modelo de layout <strong>unidimensional</strong> e método que pode oferecer distribuição de espaço entre itens numa interface e capacidade de alinhamento. Ele também pode ser usado para trabalhar elementos de forma <strong>bidimensional</strong>, mas o flexbox opera melhor quando trabalhado com os itens em apenas uma dimensão, ou seja, em coluna ou linha.</p><p>Já o <strong>CSS Grid</strong>, tem o modelo <strong>bidimensional</strong>, que controla ao mesmo tempo as colunas e linhas. Você pode indicar o ponto em que um elemento começa e acaba dentro da sua grid, o que proporciona muita flexibilidade.</p><p><strong>CSS Grid</strong> é principalmente definido no elemento pai. No <strong>flexbox</strong>, fora o básico, a maior parte do layout é aplicado nos elementos filhos.</p><p>O intuito do artigo, não é me aprofundar muito em cada assunto sobre como montar a sua grade, e sim, apenas apresentar os sistemas e ferramentas para o mesmo. O mais importante é deixar claro que um não substitui o outro. Podem ser usado tranquilamente juntos e em próximo artigos, darei mais exemplos dessa combinação.</p><p>Abaixo podemos brincar, conhecer e praticar com <strong>Flexbox</strong> e <strong>CSS Grid</strong>.</p><ul><li><a href="https://flexboxfroggy.com/" target="_blank" rel="noopener">Flexbox Froggy</a></li><li><a href="https://cssgridgarden.com/" target="_blank" rel="noopener">CSS Grid Garden</a></li></ul><h2 id="Bibliotecas"><a href="#Bibliotecas" class="headerlink" title="Bibliotecas"></a>Bibliotecas</h2><p>Fiz um compilado das ferramentas que podem nos ajudar e inspirar no desenvolvimento e montagem da grade para os nossos projetos.</p><h3 id="Pre-processadores-e-CSS"><a href="#Pre-processadores-e-CSS" class="headerlink" title="Pré-processadores e CSS"></a>Pré-processadores e CSS</h3><h4 id="Flexbox"><a href="#Flexbox" class="headerlink" title="Flexbox"></a>Flexbox</h4><ul><li><strong>Flexbox Grid</strong> - <a href="http://flexboxgrid.com/" target="_blank" rel="noopener">http://flexboxgrid.com/</a></li><li><strong>Bootstrap Grid</strong> - <a href="https://getbootstrap.com/docs/4.0/layout/grid/" target="_blank" rel="noopener">https://getbootstrap.com/docs/4.0/layout/grid/</a></li><li><strong>Bulma</strong> - <a href="https://bulma.io/" target="_blank" rel="noopener">https://bulma.io/</a></li><li><strong>Waffle Grid</strong> - <a href="https://lucasgruwez.github.io/waffle-grid" target="_blank" rel="noopener">https://lucasgruwez.github.io/waffle-grid</a></li><li><strong>Basscss</strong> - <a href="https://basscss.com/" target="_blank" rel="noopener">https://basscss.com/</a></li><li><strong>Pure</strong> - <a href="https://purecss.io/grids/" target="_blank" rel="noopener">https://purecss.io/grids/</a></li><li><strong>Milligram</strong> - <a href="https://milligram.io/grids.html" target="_blank" rel="noopener">https://milligram.io/grids.html</a></li><li><strong>GRD</strong> - <a href="https://github.com/1000ch/grd" target="_blank" rel="noopener">https://github.com/1000ch/grd</a></li><li><strong>Gridlex</strong> - <a href="https://github.com/devlint/gridlex" target="_blank" rel="noopener">https://github.com/devlint/gridlex</a></li><li><strong>Gridly</strong> - <a href="https://github.com/IonicaBizau/gridly" target="_blank" rel="noopener">https://github.com/IonicaBizau/gridly</a></li><li><strong>Blueprint CSS</strong> - <a href="https://blueprintcss.dev/" target="_blank" rel="noopener">https://blueprintcss.dev/</a></li><li><strong>Structure</strong> - <a href="https://github.com/kenwheeler/structure" target="_blank" rel="noopener">https://github.com/kenwheeler/structure</a></li><li><strong>Picnic CSS</strong> - <a href="https://github.com/franciscop/picnic" target="_blank" rel="noopener">https://github.com/franciscop/picnic</a></li></ul><h4 id="CSS-Grid"><a href="#CSS-Grid" class="headerlink" title="CSS Grid"></a>CSS Grid</h4><ul><li><strong>CSS grid 12 column layout</strong> - <a href="https://github.com/erikmonjas/css-grid-12-column-layout" target="_blank" rel="noopener">https://github.com/erikmonjas/css-grid-12-column-layout</a></li><li><strong>Griddy.css</strong> - <a href="https://github.com/balapa/griddy.css" target="_blank" rel="noopener">https://github.com/balapa/griddy.css</a></li></ul><h4 id="Outros-sistemas"><a href="#Outros-sistemas" class="headerlink" title="Outros sistemas"></a>Outros sistemas</h4><ul><li><strong>Semantic UI</strong> - <a href="https://semantic-ui.com/collections/grid.html" target="_blank" rel="noopener">https://semantic-ui.com/collections/grid.html</a></li><li><strong>csswizardry-grids</strong> - <a href="https://github.com/csswizardry/csswizardry-grids" target="_blank" rel="noopener">https://github.com/csswizardry/csswizardry-grids</a></li><li><strong>Jeet Grid</strong> - <a href="https://github.com/mojotech/jeet" target="_blank" rel="noopener">https://github.com/mojotech/jeet</a></li><li><strong>Lost Grid</strong> - <a href="https://github.com/peterramsing/lost" target="_blank" rel="noopener">https://github.com/peterramsing/lost</a></li><li><strong>Toast</strong> - <a href="https://github.com/daneden/Toast" target="_blank" rel="noopener">https://github.com/daneden/Toast</a></li><li><strong>Neat</strong> - <a href="https://github.com/thoughtbot/neat" target="_blank" rel="noopener">https://github.com/thoughtbot/neat</a></li><li><strong>Msdotcom/WinJS Grid Framework</strong> - <a href="https://github.com/winjs/grid/" target="_blank" rel="noopener">https://github.com/winjs/grid/</a></li><li><strong>Skeleton</strong> - <a href="https://github.com/dhg/Skeleton" target="_blank" rel="noopener">https://github.com/dhg/Skeleton</a></li><li><strong>Crow</strong> - <a href="https://github.com/kkortes/crow" target="_blank" rel="noopener">https://github.com/kkortes/crow</a></li><li><strong>Simple Grid</strong> - <a href="https://github.com/zachacole/Simple-Grid" target="_blank" rel="noopener">https://github.com/zachacole/Simple-Grid</a></li><li><strong>Pills</strong> - <a href="http://arkpod.in/pills/" target="_blank" rel="noopener">http://arkpod.in/pills/</a></li><li><strong>Spacegrid</strong> - <a href="https://github.com/JonathanSpeek/spacegrid" target="_blank" rel="noopener">https://github.com/JonathanSpeek/spacegrid</a></li></ul><h3 id="Angular-React-e-Vue"><a href="#Angular-React-e-Vue" class="headerlink" title="Angular, React e Vue"></a>Angular, React e Vue</h3><ul><li><strong>Angular UI Grid</strong> - <a href="http://ui-grid.info/" target="_blank" rel="noopener">http://ui-grid.info/</a></li><li><strong>React Material-UI Grid</strong> - <a href="https://material-ui.com/components/grid/" target="_blank" rel="noopener">https://material-ui.com/components/grid/</a></li><li><strong>React Grid Layout</strong> - <a href="https://github.com/STRML/react-grid-layout" target="_blank" rel="noopener">https://github.com/STRML/react-grid-layout</a></li><li><strong>Rebass Grid</strong> - <a href="https://rebassjs.org/grid/" target="_blank" rel="noopener">https://rebassjs.org/grid/</a></li></ul><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><ul><li><strong>Muuri</strong> - <a href="https://github.com/haltu/muuri" target="_blank" rel="noopener">https://github.com/haltu/muuri</a></li><li><strong>Masonry</strong> - <a href="https://github.com/desandro/masonry" target="_blank" rel="noopener">https://github.com/desandro/masonry</a></li></ul><h3 id="Design-UX-UI"><a href="#Design-UX-UI" class="headerlink" title="Design/UX/UI"></a>Design/UX/UI</h3><ul><li><strong>KK UI Store’s - Grid System Library</strong> - <a href="https://grid.kkuistore.com/" target="_blank" rel="noopener">https://grid.kkuistore.com/</a></li></ul><h3 id="Bonus"><a href="#Bonus" class="headerlink" title="Bônus"></a>Bônus</h3><p>Como bônus, deixo uma biblioteca que posibilita a utilização de 3 sistemas de grid (flexbox, CSS Grid e Flexbox Masonry Grid. Escrito em SCSS e disponível em SCSS e CSS.</p><ul><li><a href="https://github.com/CodyReeves/css-grid-system-library" target="_blank" rel="noopener">CSS Grid Library</a></li></ul><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Montar uma grade no projeto sempre gerou dúvidas entre leigos, designers e desenvolvedores front-end. Citei o <strong>960 GS</strong>, por ser um exemplo de que esse assunto precisou de um <strong>norte</strong> para quem não tinha muita experiência ou estipular um padrão.</p><p>A única coisa certa, é que temos uma evolução e maior suporte em relação ao assunto de <strong>layout CSS</strong> na última década. Vale o estudo na parte de elaboração do projeto, quanto ao melhor sistema que deixará o desenvolvimento do mesmo mais flexivel e de acordo com a área de interface e desenvolvimento.</p><p>Na minha opinião, antes de qualquer coisa relacionada ao desenvolvimento web, é necessário definir quais são os navegadores que o seu projeto dará suporte. Assim, diminuindo as preocupações na fase de desenvolvimento e é claro, quando o produto estiver em produção.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Nos últimos 8 anos, os sistemas de grid CSS vem ganhando destaque pela atenção que o layout responsivo tem recebido. E estou estimando es
      
    
    </summary>
    
      <category term="front-end" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>React - Hooks</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-hooks/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-hooks/</id>
    <published>2019-06-10T18:20:00.000Z</published>
    <updated>2019-06-10T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>A versão <a href="https://github.com/facebook/react/releases/tag/v16.8.0" target="_blank" rel="noopener">16.8.0</a>, é o primeiro <strong>release</strong> que traz suporte estável aos <strong>Hooks</strong>. Com isso, simplificando a vida de programadores e curiosos. Permitindo o uso de estado e outros recursos da biblioteca sem escrever uma classe.</p><h2 id="Regras-dos-Hooks"><a href="#Regras-dos-Hooks" class="headerlink" title="Regras dos Hooks"></a>Regras dos Hooks</h2><ul><li>Apenas chame os Hooks <strong>no nível mais alto</strong>. Não chame Hooks dentro de <strong>loops</strong>, <strong>condicionais</strong> ou <strong>funções aninhadas</strong>. O React identifica os hooks de um componente pela ordem em que eles foram chamados.</li><li>Apenas chame os Hooks em <strong>componentes funcionais</strong>. Não chame Hooks em funções <strong>JavaScript</strong> comuns. (Há apenas um outro lugar válido para se chamar Hooks — dentro dos seus próprios Hooks customizados.)</li></ul><p>Confira o link para o <a href="https://www.npmjs.com/package/eslint-plugin-react-hooks" target="_blank" rel="noopener">plugin do eslint</a>, para que as regras sejam revisadas automaticamente.</p><h2 id="Tipos-de-Hooks"><a href="#Tipos-de-Hooks" class="headerlink" title="Tipos de Hooks"></a>Tipos de Hooks</h2><ul><li><a href="https://reactjs.org/docs/hooks-state.html" target="_blank" rel="noopener">Hook de estados</a> - <strong>useState</strong> - permite ler e armazenas as informações de maneira mais fácil e prática no estado, eliminando alguns componentes de classes e substituindo por componentes funcionais.</li><li><a href="https://reactjs.org/docs/hooks-effect.html" target="_blank" rel="noopener">Hook de efeitos</a> - <strong>useEffect</strong> - utilizado para executar funções que necessitam ou realizam algum efeito no componente. Ex: <strong>mutations</strong>, <strong>subscriptions</strong>, <strong>timers</strong> e <strong>logging</strong>. Tem o mesmo efeito que os <strong>componentDidMount</strong> e <strong>componentDidUpdate</strong> tem nas classes.</li><li><a href="https://reactjs.org/docs/hooks-custom.html" target="_blank" rel="noopener">Hook customizado</a> - Crie seus próprios <strong>hooks</strong> e extraia a lógica de um componente em funções reutilizáveis.</li><li><a href="https://reactjs.org/docs/hooks-reference.html" target="_blank" rel="noopener">Outros Hooks</a> - Hooks nativos com funções específicas.</li></ul><p>Os Hooks existentes podem ser classificados como básicos e adicionais. Veja a lista abaixo:</p><p><strong>Hooks básicos:</strong></p><ul><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usestate" target="_blank" rel="noopener">useState</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#useeffect" target="_blank" rel="noopener">useEffect</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usecontext" target="_blank" rel="noopener">useContext</a></li></ul><p><strong>Hooks adicionais:</strong></p><ul><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usereducer" target="_blank" rel="noopener">useReducer</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usecallback" target="_blank" rel="noopener">useCallback</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usememo" target="_blank" rel="noopener">useMemo</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#useref" target="_blank" rel="noopener">useRef</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#useimperativehandle" target="_blank" rel="noopener">useImperativeMethods</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#uselayouteffect" target="_blank" rel="noopener">useMutationEffect</a></li><li><a href="https://pt-br.reactjs.org/docs/hooks-reference.html#usedebugvalue" target="_blank" rel="noopener">useLayoutEffect</a></li></ul><h2 id="Hook-de-estados"><a href="#Hook-de-estados" class="headerlink" title="Hook de estados"></a>Hook de estados</h2><p>Vamos olhar o hook de estado. Abaixo veremos um exemplo:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Counter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [count, setCount] = useState(<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      Você clicou &#123;count&#125; vezes!</span><br><span class="line">      &lt;button onClick=&#123;() =&gt; setCount(count + <span class="number">1</span>)&#125;&gt;+<span class="number">1</span>&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>O hook nesse caso é o <strong>useState</strong>. Ele está recebendo um estado inicial e retorna um array com dois valores. Sendo o primeiro valor o estado atual e o segundo uma função para atualizar esse estado. O <strong>useState</strong> não tem a funcionalidade idêntica ao <strong>setState</strong> que é utilizado em classes. Quando se é passado um objeto para o <strong>setState</strong>, o mesmo combina o valor que estamos passando com o antigo. Já no <strong>useState</strong>, todo o estado do hook será alterado, mas temos o mesmo efeito usando o operador de <strong>spread</strong>. Ex: useState({ …oldState, …newState }); .</p><p>Exemplo de um objeto no estado inicial:</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function Counter() &#123;</span><br><span class="line">  const [<span class="keyword">state</span>, <span class="built_in">set</span>State] = useState(&#123; nome: '', idade: <span class="number">0</span>  &#125;)</span><br><span class="line">  ...</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Também, podemos chamar mais de uma vez o nosso hook <strong>useState</strong> no nosso componente.</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Counter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [name, setName] = useState(<span class="string">''</span>)</span><br><span class="line">  <span class="keyword">const</span> [age, setAge] = useState(<span class="number">0</span>)</span><br><span class="line">  ...</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hook-de-efeitos"><a href="#Hook-de-efeitos" class="headerlink" title="Hook de efeitos"></a>Hook de efeitos</h2><p>Agora vamos falar do hook <strong>useEffect</strong>. O mesmo permite que seu componente em forma de função tenha acesso aos métodos de ciclo de vida sem precisar refatorar seu componente para uma classe. Abaixo, um exemplo:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Counter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [count, setCount] = useState(<span class="number">0</span>)</span><br><span class="line">  </span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.document.title = <span class="string">`Você clicou <span class="subst">$&#123;count&#125;</span> vezes!`</span></span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      Você clicou &#123;count&#125; vezes!</span><br><span class="line">      &lt;button onClick=&#123;() =&gt; setCount(count + <span class="number">1</span>)&#125;&gt;+<span class="number">1</span>&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><p>O título será alterado de acordo com a atualização do estado do componente. O <strong>useEffect</strong> nesse contexto, seria o mesmo que o <strong>ComponentDidMount</strong> e também o <strong>ComponentDidUpdate</strong>. Será chamada a função passada tanto quando o componente é montado quando é atualizado.</p><p>O <strong>useEffect</strong> te ajuda ao desmontar os recursos, exatamente como faria com <strong>ComponentWillUnmount</strong>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Example</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [x, setX] = useState(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> [y, setY] = useState(<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> mouseMove = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      setX(e.screenX)</span><br><span class="line">      setY(e.screenY)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">document</span>.removeEventListener(<span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>O Mouse esta no &#123;x&#125;, &#123;y&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Acima temos o evento de <strong>mousemove</strong> configurado para alterar o estado do componente de acordo com o movimento do mouse e quando o componente for desmontado será rodado o <strong>removeEventListener</strong>. Também será chamada quando for detectado que o <strong>useEffect</strong> precisa rodar novamente, ou seja em cada render. A cada alteração no estado do componente nosso evento está sendo removido e adicionado novamente. Agora não queremos isso e precisamos que o evento seja adicionado na montagem e na desmontagem.</p><p>Vamos utilizar o segundo argumento que o <strong>useEffect</strong> recebe, que é uma lista dos valores que devem mudar para que ele rode novamente. Passando uma lista vazia, ele irá rodar apenas quando é montado e a função de limpeza apenas quando é desmontado.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Example</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [x, setX] = useState(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">const</span> [y, setY] = useState(<span class="number">0</span>)</span><br><span class="line">  </span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> mouseMove = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      setX(e.clientX)</span><br><span class="line">      setY(e.clientY)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">document</span>.removeEventListener(<span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line">  &#125;, []) <span class="comment">// &lt;-- lista vazia</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span> Mouse esta no &#123;x&#125;, &#123;y&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Os <strong>Event listeners</strong> serão chamados apenas quando precisamos. O segundo parâmetro pode ser utilizado para dizer quando nosso efeito vai rodar. Abaixo, um exemplo:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="constructor">Status(<span class="params">props</span>)</span> &#123;</span><br><span class="line">  const <span class="literal">[<span class="identifier">isOnline</span>, <span class="identifier">setIsOnline</span>]</span> = use<span class="constructor">State(<span class="params">null</span>)</span>;</span><br><span class="line"> </span><br><span class="line">  use<span class="constructor">Effect(()</span> =&gt; &#123;</span><br><span class="line">    const handleStatusChange =<span class="function"> <span class="params">status</span> =&gt;</span> set<span class="constructor">IsOnline(<span class="params">status</span>.<span class="params">isOnline</span>)</span></span><br><span class="line"> </span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">API</span>.</span></span>subscribe<span class="constructor">ToUserStatus(<span class="params">props</span>.<span class="params">user</span>.<span class="params">id</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line"> </span><br><span class="line">    return<span class="function"> <span class="params">()</span> =&gt;</span> <span class="module-access"><span class="module"><span class="identifier">API</span>.</span></span>unsubscribe<span class="constructor">FromUserStatus(<span class="params">props</span>.<span class="params">user</span>.<span class="params">id</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line"> </span><br><span class="line">  &#125;, <span class="literal">[<span class="identifier">props</span>.<span class="identifier">user</span>.<span class="identifier">id</span>]</span>) <span class="comment">// apenas se desinscreve caso props.friend.id mude</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Quando friend.id for alterado, iremos chamar o <strong>unsubscribeFromUserStatus</strong> com id anterior e depois chamar o <strong>subscribeToUserStatus</strong> com id atual, assim temos consistência na limpeza dos recursos de forma simples.</p><h2 id="Hook-customizado"><a href="#Hook-customizado" class="headerlink" title="Hook customizado"></a>Hook customizado</h2><p>Os Hooks são totalmente desacoplados de componentes, o que nos permite combiná-los para criar novos hooks mais específicos e compartilhar lógica entre nossos componentes.</p><p>Começaremos com o exemplo abaixo:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Status</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [isOnline, setIsOnline] = useState(<span class="literal">null</span>);</span><br><span class="line"> </span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> handleStatusChange = <span class="function"><span class="params">status</span> =&gt;</span> status.isOnline</span><br><span class="line">     </span><br><span class="line">    API.subscribeToUSerStatus(props.user.id, handleStatusChange)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> API.unsubscribeFromUSerStatus(props.user.id, handleStatusChange)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (isOnline === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">'Loading...'</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> isOnline ? <span class="string">'Online'</span> : <span class="string">'Offline'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Também vamos precisar de uma lista de contatos e exibir seus respectivos status.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; useState, useEffect &#125; from 'react';</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="constructor">UserListItem(<span class="params">props</span>)</span> &#123;</span><br><span class="line">  const <span class="literal">[<span class="identifier">isOnline</span>, <span class="identifier">setIsOnline</span>]</span> = use<span class="constructor">State(<span class="params">null</span>)</span>;</span><br><span class="line"> </span><br><span class="line">  use<span class="constructor">Effect(()</span> =&gt; &#123;</span><br><span class="line">    const handleStatusChange =<span class="function"> <span class="params">status</span> =&gt;</span> status.isOnline</span><br><span class="line"> </span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">ChatAPI</span>.</span></span>subscribe<span class="constructor">ToUserStatus(<span class="params">props</span>.<span class="params">user</span>.<span class="params">id</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line">    return<span class="function"> <span class="params">()</span> =&gt;</span>  <span class="module-access"><span class="module"><span class="identifier">API</span>.</span></span>unsubscribe<span class="constructor">FromUserStatus(<span class="params">props</span>.<span class="params">user</span>.<span class="params">id</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">  return &lt;li style=&#123;&#123; color: isOnline ? 'green' : 'black' &#125;&#125;&gt;&#123;props.user.name&#125;&lt;/li&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Com isso, temos uma repetição de código. Resolveremos isso, ao extrair a lógica repetida em um hook customizado.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; useState, useEffect &#125; from 'react';</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> use<span class="constructor">UserStatus(<span class="params">userID</span>)</span> &#123;</span><br><span class="line">  const <span class="literal">[<span class="identifier">isOnline</span>, <span class="identifier">setIsOnline</span>]</span> = use<span class="constructor">State(<span class="params">null</span>)</span>;</span><br><span class="line"> </span><br><span class="line">  use<span class="constructor">Effect(()</span> =&gt; &#123;</span><br><span class="line">    const handleStatusChange =<span class="function"> <span class="params">status</span> =&gt;</span> status.isOnline</span><br><span class="line"> </span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">API</span>.</span></span>subscribe<span class="constructor">ToUserStatus(<span class="params">userID</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line">    return<span class="function"> <span class="params">()</span> =&gt;</span>  <span class="module-access"><span class="module"><span class="identifier">API</span>.</span></span>unsubscribe<span class="constructor">FromUserStatus(<span class="params">userID</span>, <span class="params">handleStatusChange</span>)</span></span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">  return isOnline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Agora a lógica que tínhamos em nossos componentes, está em uma função separada (um padrão: que os hooks tenham o prefixo <strong>use</strong>). Abaixo, exemplo da utilização:</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UserStatus</span><span class="params">(props)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> isOnline = useUserStatus(props.user.id)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (isOnline === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">'Loading...'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> isOnline ? <span class="string">'Online'</span> : <span class="string">'Offline'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UserListItem</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> isOnline = useUserStatus(props.user.id)</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">isOnline</span> ? '<span class="attr">green</span>' <span class="attr">:</span> '<span class="attr">black</span>' &#125;&#125;&gt;</span>&#123;props.user.name&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Agora temos uma lógica simplificada. Também é possível criar hooks para lidar com bibliotecas externas:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> useObservable = <span class="function">(<span class="params">observable, initialValue</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = useState(initialValue)</span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> subscription = observable.subscribe(&#123;<span class="attr">next</span>: setValue&#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> subscription.unsubscribe()</span><br><span class="line">  &#125;, [observable])</span><br><span class="line">  <span class="keyword">return</span> value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Acima, a cada novo evento no <strong>stream</strong> do <strong>observable</strong> temos uma atualização no estado. Abaixo, um exemplo usando a bilbioteca <strong>RxJS</strong>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; fromEvent &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map &#125;  <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useObservable &#125; <span class="keyword">from</span> <span class="string">'./observableHook'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> mouseTest = fromEvent(<span class="built_in">document</span>, <span class="string">'mousemove'</span>).pipe( map(<span class="function"><span class="params">e</span> =&gt;</span> [e.clientX, e.clientY]) );</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">const</span> [x,y] = useObservable(mouseTest, [<span class="number">0</span>,<span class="number">0</span>]);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Mouse x:&#123;x&#125; y:&#123;y&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Não foi falado muito sobre os <strong>Outros Hooks</strong>, mas podemos ver a listagem no ínício deste artigo. Mais sobre os <strong>Hooks</strong>, podem ser vistos na <a href="https://pt-br.reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener">documentação oficial</a> e em próximos artigos.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A versão &lt;a href=&quot;https://github.com/facebook/react/releases/tag/v16.8.0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;16.8.0&lt;/a&gt;, é o primeiro &lt;strong
      
    
    </summary>
    
      <category term="react" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/"/>
    
    
  </entry>
  
  <entry>
    <title>React - Ciclo de vida e context API</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-ciclo-de-vida-e-context-api/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-ciclo-de-vida-e-context-api/</id>
    <published>2019-06-03T18:20:00.000Z</published>
    <updated>2019-06-03T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Na versão <a href="https://github.com/facebook/react/releases/tag/v16.3.0" target="_blank" rel="noopener">16.3.0</a>, que foi lançada em 29 de março de 2018, teve a adição de novos métodos para o ciclo de vida dos componentes e nova API.</p><h2 id="Metodos-de-ciclo-de-vida"><a href="#Metodos-de-ciclo-de-vida" class="headerlink" title="Métodos de ciclo de vida"></a>Métodos de ciclo de vida</h2><p>No ciclo de vida dos componentes existem métodos para controlarmos o fluxo de montar, atualizar e desmontar cada elemento. E com essa versão do <strong>React</strong>, três métodos estão sendo depreciados: <strong>componentWillMount</strong>, <strong>componentWillReceiveProps</strong>, e <strong>componentWillUpdate</strong>. E foram adicionados dois novos métodos:</p><ul><li><strong>getDerivedStateFromProps</strong> – adicionado como uma alternativa mais segura do método <strong>componentWillReceiveProps</strong>. Executado tanto na inicialização do componente quanto na sua atualização de propriedades e deve retornar as alterações no estado do componente baseada nas propriedades ou nulo.</li><li><strong>getSnapshotBeforeUpdate</strong> – adicionado para oferecer suporte à leitura segura de propriedades. Todo valor retornado por esse método é enviado ao <strong>componentDidUpdate</strong> que é o ciclo executado posteriormente.</li></ul><h2 id="Context-API"><a href="#Context-API" class="headerlink" title="Context API"></a>Context API</h2><p>Sempre existiu uma <strong>Context API</strong>, mas era instável e com diversos problemas relacionados à performance. Eu particularmente já usava para uma questão de tema e gostei muito da estabilide que veio nessa versão.</p><p>Ao compartilhar informações entre componentes totalmente desconexos você terá que utilizar a arquitetura flux com <strong>Redux</strong>. Com a nova <strong>Context API</strong> conseguimos facilmente repassar informações de qualquer tipo entre diversos componentes do <strong>React</strong>.</p><p>Precisaremos ver 3 coisas: <strong>React.createContext</strong>, <strong>Provider</strong> e <strong>Consumer</strong>.</p><p>Abaixo, temos o componente filho <strong>Title</strong> e ainda não estamos usando a nova API de contexto.</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    ttile: <span class="symbol">'Esse</span> é um título'</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; title &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &#123;tenant &amp;&amp; </span><br><span class="line">        &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">          &lt;<span class="type">Title</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Vamos começar criando uma variável de contexto com o comando <strong>React.createContext</strong> passando como parâmetro o valor padrão quando nenhum valor existir nessa variável.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const ExampleContext = <span class="module-access"><span class="module"><span class="identifier">React</span>.</span></span>create<span class="constructor">Context('<span class="params">example</span>')</span>;</span><br></pre></td></tr></table></figure><p>A variável <strong>ExampleContext</strong> já pode ser considerada uma variável de contexto. Para alterar o seu valor, precisamos utilizar um componente chamado <strong>Provider</strong> que pertence à essa variável:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; title &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ExampleContext.Provider value=&#123;title&#125;&gt;</span><br><span class="line">      &#123;title &amp;&amp; </span><br><span class="line">        &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">          &lt;Title /&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>ExampleContext.Provider&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Assim, criamos um <strong>ExampleContext.Provider</strong> com uma única propriedade chamada value que é responsável por prover o valor da variável de contexto.</p><p>Agora o componente <strong>Title</strong>, consome o <strong>ExampleContext</strong>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Title</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ExampleContext.Consumer&gt;</span><br><span class="line">      &#123;title =&gt; (</span><br><span class="line">        &lt;h1&gt;&#123;title&#125;&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">      )&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>ExampleContext.Consumer&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Com o <strong>ThemeContext.Consumer</strong> podemos utilizar esses dados e trabalhar com uma técnica chamada <a href="https://reactjs.org/docs/render-props.html" target="_blank" rel="noopener">render props</a>.</p><p>Sendo assim, você não vai mais precisar utilizar o <strong>Redux</strong> sempre que precisar compartilhar informações entre componentes, mas vale lembrar que a arquitetura <strong>Flux</strong> é muito mais do que simplesmente compartilhamento de dados, tem a ver com estrutura, com fluxo de informações e arquitetura dos dados da aplicação.</p><p>Para retornar o valor padrão que informamos na criação da variável <strong>ExampleContext</strong>, o componente não deverá possuir um <strong>Provedor</strong> correspondente acima dele na árvore. Isso pode ser útil para testar componentes isoladamente sem envolvê-los.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; title &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">      &lt;Title /&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ Saída: example</span></span><br></pre></td></tr></table></figure><p>Mais pode ser visto na <a href="https://reactjs.org/docs/context.html" target="_blank" rel="noopener">documentação oficial</a>.</p><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Então vamos continuar precisando de um gerenciamento de estado mais complexo como o <strong>Redux</strong> e temos a API de contexto quando for necessário compartilhar algumas informações entre componentes.</p><p>Agora é ficar ligado nos novos métodos e prestar atenção nos que foram depreciados. A biblioteca está evoluindo muito bem e vamos botar a mão na massa.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Na versão &lt;a href=&quot;https://github.com/facebook/react/releases/tag/v16.3.0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;16.3.0&lt;/a&gt;, que foi lançada em 
      
    
    </summary>
    
      <category term="react" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/"/>
    
    
  </entry>
  
  <entry>
    <title>React - Mudanças na versão 16</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-mudancas-na-versao-16-/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react/react-mudancas-na-versao-16-/</id>
    <published>2019-06-01T18:20:00.000Z</published>
    <updated>2019-06-01T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>A versão <a href="https://github.com/facebook/react/releases/tag/v16.0.0" target="_blank" rel="noopener">16.0.0</a>, foi lançado em 26 de setembro de 2017, e trouxe mudanças significativas até o momento.</p><h2 id="Polemica-com-a-licenca"><a href="#Polemica-com-a-licenca" class="headerlink" title="Polêmica com a licença"></a>Polêmica com a licença</h2><p>Por um período os desenvolvedores ficaram preocupados com a ideia da biblioteca ter adotado a licença BSD+Patents. Tudo ficou na paz, quando o <strong>React 16</strong> foi disponível sob a licença MIT. A versão 15.6.2 também foi publicado com essa licença, para que não fosse preciso que as aplicações fossem atualizadas imediatamente.</p><h2 id="Novo-tamanho"><a href="#Novo-tamanho" class="headerlink" title="Novo tamanho"></a>Novo tamanho</h2><p>Agora mesmo com novas funcionalidades, o tamanho diminuiu cerca de 32%, se comparado com a versão 15.6.1.</p><p><strong>Versão 15</strong></p><ul><li>react - 20.7kb (6.9kb com gzip)</li><li>react-dom - 141kb (42.9kb com gzip)</li><li>react + react-dom - 161.7 kb (49.8 kb com gzip)</li></ul><p><strong>Versão 16</strong></p><ul><li>react - 5.3kb (2.2kb com gzip)</li><li>react-dom - 103.7kb (32.6kb com gzip)</li><li>react + react-dom - 109 kb (34.8 kb com gzip)</li></ul><h2 id="Tratamento-de-erros"><a href="#Tratamento-de-erros" class="headerlink" title="Tratamento de erros"></a>Tratamento de erros</h2><p>Antes tínhamos o problema que ao ter um erro durante a renderização, toda a árvore de componentes era desmontada. Agora é possível capturar os erros e substituir o componente. Quem não gosta de um try-catch? :)</p><p>Temos então, o novo método <strong>componentDidCatch</strong>, que irá informar o erro para que possamos tratar com facilidade. Identificando um erro, podemos tratar no método <strong>render</strong>.</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">componentDidCatch(error, info) &#123;</span><br><span class="line">  this.<span class="built_in">set</span>State(&#123; ...<span class="keyword">state</span>, hasError: true &#125;);</span><br><span class="line">  // E você também tem <span class="number">2</span> paramêtros para utilizar</span><br><span class="line">  console.<span class="keyword">log</span>(error); // o erro em si</span><br><span class="line">  console.<span class="keyword">log</span>(info); // contém o Component Stack</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line">  if (this.<span class="keyword">state</span>.hasError) &#123;</span><br><span class="line">    return <span class="variable">&lt;h1&gt;</span>Deu algo errado&lt;/h1&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    // retornando o componente</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Para mais detalhes, confira o artigo oficial sobre o <a href="https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html" target="_blank" rel="noopener">tratamento de erros no React 16</a>.</p><h2 id="Novos-tipos-de-retorno-de-renderizacao"><a href="#Novos-tipos-de-retorno-de-renderizacao" class="headerlink" title="Novos tipos de retorno de renderização"></a>Novos tipos de retorno de renderização</h2><p>Ao trabalhar com <strong>React</strong>, o método <strong>render</strong> sempre deve retornar um único elemento. Querendo retonar uma lista de elementos, você deve criar um <strong>container</strong> para eles.</p><p>Agora você pode retornar um <strong>Array</strong> de elementos. Por ser um Array, você ainda precisará adicionar o atributo <strong>key</strong> aos elementos.</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">  <span class="built_in">return</span> [</span><br><span class="line">    &lt;<span class="built_in">li</span> <span class="built_in">key</span>=<span class="string">"item1"</span>&gt;item <span class="number">1</span>&lt;/<span class="built_in">li</span>&gt;,</span><br><span class="line">    &lt;<span class="built_in">li</span> <span class="built_in">key</span>=<span class="string">"item2"</span>&gt;item <span class="number">2</span>&lt;/<span class="built_in">li</span>&gt;,</span><br><span class="line">    &lt;<span class="built_in">li</span> <span class="built_in">key</span>=<span class="string">"item3"</span>&gt;item <span class="number">3</span>&lt;/<span class="built_in">li</span>&gt;,</span><br><span class="line">  ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>E também é possível retornar uma simples <strong>String</strong>:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Meu nome é Hemerson'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Portals"><a href="#Portals" class="headerlink" title="Portals"></a>Portals</h2><p>Agora é possível inserir um elemento filho em um local diferente no DOM, fora da sua árvore principal.</p><p>Exemplo:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"main"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"modal"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;body&gt;</span><br></pre></td></tr></table></figure><p>Com <strong>Portals</strong>, tendo um componente na div <strong>main</strong>, será possivel pegar este componente e renderizá-lo na div <strong>modal</strong>.</p><p>Tendo um elemento que irá aparecer na página e reaparecer ao abrir uma modal, seria necessário chamar o componente em dois lugares (na página e na modal) e passar as propriedades para ele. Com <strong>Portals</strong> basta indicar o elemento que quer usar e onde quer exibí-lo. Querendo alterar alguma propriedade passada para o componente, só será preciso alterar em um lugar.</p><p>Mais detalhes na <a href="https://reactjs.org/docs/portals.html" target="_blank" rel="noopener">documentação</a>;</p><h2 id="Renderizacao-no-lado-do-servidor"><a href="#Renderizacao-no-lado-do-servidor" class="headerlink" title="Renderização no lado do servidor"></a>Renderização no lado do servidor</h2><p>Graças a reescrita, a renderização no lado do servidor ficou muito mais rápida. E agora com suporte a <strong>streaming</strong>, sendo possível enviar os dados de forma melhor e mais ágil para o navegador.</p><p>Nesse artigo, pode ser visto as <a href="https://hackernoon.com/whats-new-with-server-side-rendering-in-react-16-9b0d78585d67" target="_blank" rel="noopener">melhorias no SSR</a>.</p><h2 id="Atributos-personalizados"><a href="#Atributos-personalizados" class="headerlink" title="Atributos personalizados"></a>Atributos personalizados</h2><p>Atributos informados no HTML ou SVG que não fossem reconhecidos eram ignorados. Agora os mesmos são mantidos.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- nosso código --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">example</span>=<span class="string">"test"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- React 15 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- React 16 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">example</span>=<span class="string">"test"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Nova-arquitetura"><a href="#Nova-arquitetura" class="headerlink" title="Nova arquitetura"></a>Nova arquitetura</h2><p>Agora temos uma reescrita na arquitetura central da biblioteca, sendo conhecida como <strong>Fiber</strong>. O mesmo é responsável pela maioria dos novos recursos do React 16.</p><p>Uma área que está tendo um bom foco é a renderização assíncrona, tendo uma estratégia para programar cooperativamente a renderização, entregando periodicamente a execução ao navegador. Com a renderização assíncrona, as aplicações são mais responsivas porque o React evita o bloqueio da árvore principal. Nessa versão 16.0.0 não foi ativado nenhum recurso assíncrono, para facilitar a migração para essa versão.</p><p>Confira um exemplo de problema de <a href="https://twitter.com/acdlite/status/909926793536094209?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E909926793536094209&ref_url=https%253A%252F%252Freactjs.org%252Fblog%252F2017%252F09%252F26%252Freact-v16.0.html" target="_blank" rel="noopener">renderização assíncrona</a>.</p><h2 id="Depreciacoes-mudancas-empacotamento-e-requisitos"><a href="#Depreciacoes-mudancas-empacotamento-e-requisitos" class="headerlink" title="Depreciações, mudanças, empacotamento e requisitos"></a>Depreciações, mudanças, empacotamento e requisitos</h2><h3 id="Depreciacoes"><a href="#Depreciacoes" class="headerlink" title="Depreciações"></a>Depreciações</h3><p>Para hidratar um container renderizado pelo servidor agora tem uma API explicita. Renderizando o HTML pelo servidor, use <strong>ReactDOM.hydrate</strong> ao invés de <strong>ReactDOM.render</strong>. Use <strong>ReactDOM.render</strong> se renderizar pelo lado do cliente.</p><p>O suporte ao <strong>React Addons</strong> foi descontinuado e com exceção do <strong>react-addons-perf</strong> que terá uma versão nova, os outros addons não serão atualizados. <strong>react-addons-perf</strong> não funciona no React 16, e é encorajado usar as <a href="https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab" target="_blank" rel="noopener">ferramentas do navegador para medir performance</a>.</p><h3 id="Mudancas"><a href="#Mudancas" class="headerlink" title="Mudanças"></a>Mudanças</h3><p>O React 16 depende dos tipos de coleção <strong>Map</strong> e <strong>Set</strong>. Se você precisa dar suporte para navegadores e dispositivos antigos que não suportam nativamente (por exemplo, IE &lt;11) ou que tenham implementações não compatíveis (por exemplo, IE 11), será necessário incluir um polyfill na aplicação, como <strong>core-js</strong> ou <strong>babel-polyfill</strong>. Confira mais <a href="https://reactjs.org/docs/javascript-environment-requirements.html" target="_blank" rel="noopener">sobre o assunto</a>.</p><p>Algumas mudanças que podem causar quebras em relação às versões anteriores:</p><ul><li><strong>ReactDOM.render</strong> e <strong>ReactDOM.unstable_renderIntoContainer</strong> agora retornam <strong>null</strong> se forem chamados de dentro de um método do ciclo de vida do componente. Para contornar isso, você pode usar <strong>portals</strong> ou <strong>refs</strong>.</li><li>Chamar <strong>setState</strong> com <strong>null</strong> não dispara mais atualizações</li><li>Chamar <strong>setState</strong> diretamente dentro de <strong>render</strong> sempre causa atualizações.</li><li><strong>Callbacks</strong> de <strong>setState</strong> agora são disparados após <strong>componentDidMount</strong> ou <strong>componentDidUpdate</strong>.</li><li>Ao trocar <strong><a></strong>por <strong><b></strong>, <strong>B.componentWillMount</strong> agora vai sempre acontecer antes de <strong>A.componentWillUnmount</strong>. Antes, <strong>A.componentWillUnmount</strong> podia inicializar primeiro em certos casos.</li><li>Antes, mudar a referência de um componente sempre iria desmontar a referência antes que o renderização do componente fosse chamada. Agora, a referência é alterada depois, quando aplicadas as mudanças no DOM.</li><li><strong>componentDidUpdate</strong> não recebe mais o parâmetro <strong>prevContext</strong>.</li><li>O renderizador superficial não é mais chamado no <strong>componentDidUpdate</strong> porque as referências DOM não estão disponíveis. Isso também o torna consistente com <strong>componentDidMount</strong>(que também não é chamado nas versões anteriores).</li></ul><h2 id="Empacotamento"><a href="#Empacotamento" class="headerlink" title="Empacotamento"></a>Empacotamento</h2><p>Agora não existe mais <strong>react/lib/</strong> e <strong>react-dom/lib/</strong>. Os nomes/caminhos mudaram para enfatizar a diferença entre os <strong>builds</strong> de produção e desenvolvimento:</p><ul><li>react/dist/react.js → react/umd/react.development.js</li><li>react/dist/react.min.js → react/umd/react.production.min.js</li><li>react-dom/dist/react-dom.js → react-dom/umd/react-dom.development.js</li><li>react-dom/dist/react-dom.min.js → react-dom/umd/react-dom.production.min.js</li></ul><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Muitas mudanças boas vieram e o React continua sendo muito usado nas aplicações. Pode conferir o artigo completo no blog oficial sobre a versão <a href="https://reactjs.org/blog/2017/09/26/react-v16.0.html" target="_blank" rel="noopener">16.0.0</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A versão &lt;a href=&quot;https://github.com/facebook/react/releases/tag/v16.0.0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;16.0.0&lt;/a&gt;, foi lançado em 26 de
      
    
    </summary>
    
      <category term="react" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com React</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/comecando-com-react/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react/comecando-com-react/</id>
    <published>2019-05-29T18:20:00.000Z</published>
    <updated>2019-05-29T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>A biblioteca que é largamente usada no desenvolvimento front-end já está na versão <a href="https://github.com/facebook/react/releases/tag/v16.8.6" target="_blank" rel="noopener">16.8.6</a>, que foi lançada em 27 de março deste ano.</p><p>Para quem está começando com o <strong>React</strong>, vale saber que teve algumas mudanças significativas a partir da versão <a href="https://github.com/facebook/react/releases/tag/v16.0.0" target="_blank" rel="noopener">16.0.0</a>, lançada em 26 de setembro de 2017 (veremos sobre isso no próximo artigo).</p><p>Antes de tudo, vale saber da linha do tempo.</p><h2 id="A-Linha-do-tempo"><a href="#A-Linha-do-tempo" class="headerlink" title="A Linha do tempo"></a>A Linha do tempo</h2><p>Há exatos seis anos (29 de maio de 2013), uma biblioteca JavaScript de código aberto, que foi desenvolvida pelo <strong>Facebook</strong>, era lançada. Sendo óbvio, estou falando da biblioteca <strong>React</strong>. Para ser mais preciso, a pessoa que está por trás dessa criação é <a href="https://twitter.com/jordwalke" target="_blank" rel="noopener">Jordan Walke</a> (Engenheiro de software na empresa Facebook).</p><p>Tivemos o lançamento do <a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener">React Native</a>, em 26 de março de 2015.</p><p>Em 18 de abril de 2017, o Facebook anunciou o <a href="https://github.com/acdlite/react-fiber-architecture" target="_blank" rel="noopener">React Fiber</a>, um novo algoritmo <code>core</code> da biblioteca. Com o propósito de se tornar a base de qualquer melhoria futura e desenvolvimento de recursos da biblioteca <strong>React</strong>.</p><p>No dia seguinte (19 de abril de 2017), foi lançado o <a href="https://facebook.github.io/react-360/" target="_blank" rel="noopener">React 360</a>, para o público. Isso permitiu aos desenvolvedores que utilizam React, saltassem para o desenvolvimento de VR (Realidade Virtual).</p><p>Por fim, temos a versão 16 e 16.8.6 da biblioteca, como mencionado no início desse artigo. Sem esquecer que na versão 16.8, temos o suporte estável na utilização de Hooks, que veremos nos próximos artigos.</p><h2 id="A-Biblioteca"><a href="#A-Biblioteca" class="headerlink" title="A Biblioteca"></a>A Biblioteca</h2><p>A biblioteca ganhou grande popularidade por ter o foco na criação de componentes de interface, ter uma grande empresa por trás, usar uma técnica que agradou à todos (Virtual-Dom) e ter uma pequena curva de aprendizado para quem já está acostumando com <strong>JavaScript</strong>.</p><p>Abaixo, também veremos sobre a especificação JSX e micro bibliotecas que auxiliam o desenvolvimento com <strong>React</strong>.</p><h3 id="Virtual-DOM"><a href="#Virtual-DOM" class="headerlink" title="Virtual-DOM"></a>Virtual-DOM</h3><p>É uma representação em JavaScript puro do DOM. Sendo assim, você manipula esse objeto e não o DOM de verdade. Quando o objeto virtual é atualizado, um algoritmo calcula a diferença entre o virtual-dom e o DOM real, alterando então os trechos do DOM.</p><p>É mais produtivo criar os elementos DOM no JavaScript, processar eles e aplicá-los de uma só vez na arvore DOM do navegador. A biblioteca veio para facilitar isso, entre outras coisas.</p><h3 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h3><p>JSX é uma especificação de sintaxe para escrever JavaScript como se estivéssemos escrevendo XML.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cont Example = React.createClass(&#123;</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Olá, &#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Example name=<span class="string">"Hemerson"</span> /&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'main'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Sem JSX:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Example = React.createClass(&#123;</span><br><span class="line">  displayName: <span class="string">'Hello'</span>,</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> React.createElement(<span class="string">"div"</span>, <span class="literal">null</span>, <span class="string">"Olá, "</span>, <span class="keyword">this</span>.props.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  React.createElement(Example, &#123;<span class="attr">name</span>: <span class="string">"Hemerson"</span>&#125;),</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'main'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="Micro-bibliotecas"><a href="#Micro-bibliotecas" class="headerlink" title="Micro-bibliotecas"></a>Micro-bibliotecas</h3><p>Sendo apenas uma biblioteca, não seria possível criar aplicações complexas, apenas com <strong>React</strong>. Por isso, vamos falar um pouco nas micro-bibliotecas que ajudam muito no desenvolvimento.</p><p>As mais utilizadas nos projetos são <a href="https://reacttraining.com/react-router/" target="_blank" rel="noopener">react-router</a> e <a href="https://react-redux.js.org/" target="_blank" rel="noopener">react-redux</a>. Com elas, já é capaz de criar uma projeto SPA complexo.</p><p>Cada vez mais o caminho tem sido separar as responsabilidades, por uma questão de manutenção, peso e mais.</p><p>Nesse <a href="https://github.com/enaqx/awesome-react" target="_blank" rel="noopener">link</a>, temos muitas micro-bibliotecas para nos ajudar.</p><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>Tenho gostado de utilizar o <strong>React</strong>, pela liberdade no desenvolvimento de componentes e pela estabilidade e flexibilidade da ferramenta. Nos dias de hoje, podemos usar no navegador, servidor e aplicativos móveis. A comunidade está empenhada no crescimento e melhorias. A cada ano temos evoluções consideráveis da biblioteca e ferramentas que utilizamos como suporte no desenvolvimento das aplicações.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A biblioteca que é largamente usada no desenvolvimento front-end já está na versão &lt;a href=&quot;https://github.com/facebook/react/releases/ta
      
    
    </summary>
    
      <category term="react" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react/"/>
    
    
  </entry>
  
  <entry>
    <title>React Native - Criando layouts - Parte 2</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-2/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-2/</id>
    <published>2018-02-07T18:20:00.000Z</published>
    <updated>2018-02-07T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Dando continuidade ao artigo <strong>Criando Layouts</strong>. Na <a href="/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-1/">parte 1</a>, vimos o <strong>Stack layout</strong> e agora vamos continuar vendo os tipos de layout que conseguimos criar no <strong>React native</strong>.</p><h2 id="Grid-Layout"><a href="#Grid-Layout" class="headerlink" title="Grid Layout"></a>Grid Layout</h2><p>O <strong>React Native</strong> não vem com um sistema de layout de grade, mas o <strong>flexbox</strong> é flexível o suficiente para criar um. Ao utilizar o que já vimos até agora, podemos recriar um <strong>grid layout</strong> usando o <strong>flexbox</strong>. Ex:</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-grid-layout.png" alt="Stack Layout Vertical"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  StyleSheet,</span><br><span class="line">  View</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">GridLayout</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;styles.row&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.two]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line">          </span><br><span class="line">        &lt;View style=&#123;styles.row&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.two]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line"></span><br><span class="line">        &lt;View style=&#123;styles.row&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box, styles.two]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line"></span><br><span class="line">        &lt;View style=&#123;styles.row&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line"></span><br><span class="line">        &lt;View style=&#123;styles.row&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">        &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;View style=&#123;styles.row&#125;&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">        &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>View&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123; <span class="attr">flex</span>: <span class="number">1</span> &#125;,</span><br><span class="line">  row: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    flexDirection: <span class="string">'row'</span>,</span><br><span class="line">    justifyContent: <span class="string">'space-between'</span>,</span><br><span class="line">    marginBottom: <span class="number">10</span></span><br><span class="line">  &#125;,</span><br><span class="line">  box: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    height: <span class="number">100</span>,</span><br><span class="line">    backgroundColor: <span class="string">'#333'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  box2: &#123; <span class="attr">backgroundColor</span>: <span class="string">'green'</span> &#125;,</span><br><span class="line">  box3: &#123; <span class="attr">backgroundColor</span>: <span class="string">'orange'</span> &#125;,</span><br><span class="line">  two: &#123; <span class="attr">flex</span>: <span class="number">2</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>No código acima, você pode ver que estamos simulando o que costumamos fazer em uma estrutura de grade no <strong>CSS</strong>. Cada linha com uma exibição separada e os itens da grade estão dentro dela. O valor 1 na propriedade <code>flex</code> é aplicado a cada item para que eles compartilhem igualmente o espaço disponível em cada linha. Mas para itens que precisam ocupar um espaço maior, um valor <code>flex</code> maior é aplicado. Isso ajusta automaticamente a largura dos outros itens para acomodar todos os itens.</p><p>Se você quiser adicionar espaços entre cada item de uma linha, você pode adicionar um preenchimento a cada um deles e criar uma caixa dentro de cada um. Ex:</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-grid-layout-with-space-between.png" alt="Stack Layout Vertical"></p><h2 id="Absolute-Layout"><a href="#Absolute-Layout" class="headerlink" title="Absolute Layout"></a>Absolute Layout</h2><p>O <strong>React Native</strong> só suporta os valores <code>absolute</code>e <code>relative</code>, para a propriedade <code>position</code>. Isso não limita muito, porque sempre podemos combiná-los com o <strong>flexbox</strong> para posicionar os diferentes elementos em qualquer lugar que desejarmos. Ex:</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-positioning.png" alt="Stack Layout Vertical"></p><p>Podemos conseguir isso facilmente se tivermos um comando total sobre os valores de posicionamento disponíveis no navegador. Mas, como estamos no <strong>React Native</strong>, precisamos pensar primeiro no modo <strong>flexbox</strong> e usar o posicionamento <strong>CSS</strong> para as caixas.</p><p>Usando o <strong>flexbox</strong>, isso pode ser conseguido de duas maneiras. Você pode usar <code>row</code> ou <code>column</code>para a propriedade <code>flexDirection</code> no elemento pai. Usando o valor <code>row</code> no <code>flexDirection</code>, a tela seja dividida em três colunas. A primeira coluna conterá a caixa vermelha, a segunda coluna conterá as caixas azul, cinza e verde e a terceira conterá as caixas amarela e roxa.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; StyleSheet, View &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Positioning</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;styles.left&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.bigRedBox]&#125;&gt;</span><br><span class="line">          &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line">        &lt;View style=&#123;styles.middle&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.bigBlueBox]&#125;&gt;</span><br><span class="line">            &lt;View style=&#123;[styles.innerBox, styles.blackBox]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.bigGrayBox]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;View style=&#123;[styles.box, styles.bigGreenBox]&#125;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;View style=&#123;[styles.innerBox, styles.blackBox]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">          &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line">        &lt;View style=&#123;styles.right&#125;&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.box, styles.bigYellowBox]&#125;&gt;</span><br><span class="line">            &lt;View style=&#123;[styles.innerBox, styles.blackBox]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>View&gt;</span><br><span class="line">          &lt;View style=&#123;[styles.innerBox, styles.purpleBox]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>View&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><p>A primeira coluna tem apenas a caixa vermelha, basta definir a propriedade <code>justifyContent</code> com <code>center</code> no elemento pai que define a coluna. Como já vimos, o o valor <code>default</code> do <code>flexDirection</code> é <code>column</code>. Isto significa que se você definir <code>justifyContent</code> como <code>center</code>, os elementos filhos serão alinhados no centro do eixo Y.</p><p>A segunda coluna tem basicamente a mesma ideia que a primeira, só que desta vez não queremos alinhar todas as caixas ao centro. O que queremos é que eles tenham espaços iguais entre eles. A propriedade <code>justifyContent</code> com valor <code>space-between</code>, resolve isso. Mas ao mesmo tempo, também queremos centralizar os elementos filhos no eixo x, então nós usamos <code>alignItems</code> com valor <code>center</code>.</p><p>A única parte complicada aqui é que você não deve aplicar nenhuma propriedade <code>width</code> a caixa cinza porque queremos que ele ocupe todo o espaço do elemento pai. Uma vez que não aplicamos a propriedade <code>width</code>, devemos usar a propriedade <code>alignSelf</code> com valor <code>stretch</code>, para que a caixa cinza ocupe a largura total do seu elemento pai.</p><p>Em seguida, para posicionar a pequena caixa preta um pouco longe de sua posição relativa, usamos <code>position</code> com o valor <code>relative</code> e depois acrescentamos as propriedades <code>top</code> e <code>left</code> com os valores que queremos, porque sua posição relativa está em torno do canto superior esquerdo de seu pai.</p><p>Na pequena caixa roxa, colocamos a propriedade <code>position</code> com o valor <code>absolute</code> e as propriedades <code>bottom</code> e <code>right</code>, para alinhá-la ao canto inferior direito de seu pai. Isso funciona porque elementos posicionados com <code>position: absolute</code> no <strong>React Native</strong> estão vinculados aos seus pais.</p><p>A terceira coluna basicamente aplica a mesma ideia.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">const</span> <span class="string">styles</span> <span class="string">=</span> <span class="string">StyleSheet.create(&#123;</span></span><br><span class="line">  <span class="attr">container:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">flex:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">    <span class="attr">flexDirection:</span> <span class="string">'row'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">left:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">flex:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">    <span class="attr">justifyContent:</span> <span class="string">'center'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">middle:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">flex:</span> <span class="number">5</span><span class="string">,</span></span><br><span class="line">    <span class="attr">justifyContent:</span> <span class="string">'space-between'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">alignItems:</span> <span class="string">'center'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">right:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">flex:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">    <span class="attr">justifyContent:</span> <span class="string">'center'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">alignItems:</span> <span class="string">'flex-end'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">box:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'#f2f2f2'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">bigGreenBox:</span> <span class="string">&#123;</span> <span class="attr">backgroundColor:</span> <span class="string">'green'</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">bigRedBox:</span> <span class="string">&#123;</span> <span class="attr">backgroundColor:</span> <span class="string">'red'</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">bigYellowBox:</span> <span class="string">&#123;</span> <span class="attr">backgroundColor:</span> <span class="string">'yellow'</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">bigGrayBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">    <span class="attr">alignSelf:</span> <span class="string">'stretch'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'#ccc'</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">innerBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">20</span><span class="string">,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">20</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">redBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">'relative'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'red'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">top:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">    <span class="attr">left:</span> <span class="number">10</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">blueBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">'absolute'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'blue'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">top:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">    <span class="attr">right:</span> <span class="number">10</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">purpleBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">'absolute'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'purple'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">bottom:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">    <span class="attr">right:</span> <span class="number">10</span></span><br><span class="line">  <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">blackBox:</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">'relative'</span><span class="string">,</span></span><br><span class="line">    <span class="attr">backgroundColor:</span> <span class="string">'black'</span><span class="string">,</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><h2 id="Header-e-footer-fixos"><a href="#Header-e-footer-fixos" class="headerlink" title="Header e footer fixos."></a>Header e footer fixos.</h2><p>Para isso, precisamos usar o componente de <code>ScrollView</code>, se o conteúdo for maior que a altura do elemento, o <strong>React Native</strong> gerará automaticamente uma barra de rolagem vertical. Isso nos permite adicionar <code>marginTop</code> e <code>marginBottom</code> no elemento com o conteúdo principal, para que o <code>header</code> e o <code>footer</code> fixos não obstruam o conteúdo principal. Os valores de <code>left</code> e <code>right</code> do <code>header</code> e <code>footer</code> estão configurados com 0, para que eles ocupem a largura total do dispositivo.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; StyleSheet, <span class="keyword">View</span>, ScrollView &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"> </span><br><span class="line">export <span class="keyword">default</span> <span class="keyword">class</span> FixedHeaderFooter extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">      <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="keyword">View</span> style=&#123;styles.container&#125;&gt;</span><br><span class="line">        &lt;<span class="keyword">View</span> style=&#123;[styles.<span class="keyword">header</span>]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">        &lt;ScrollView&gt;</span><br><span class="line">          &lt;<span class="keyword">View</span> style=&#123;[styles.content]&#125;&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">          &lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">        &lt;/ScrollView&gt;</span><br><span class="line">        &lt;<span class="keyword">View</span> style=&#123;[styles.footer]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">      &lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">const styles = StyleSheet.<span class="keyword">create</span>(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    flexDirection: <span class="string">'column'</span>,</span><br><span class="line">    justifyContent: <span class="string">'center'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">header</span>: &#123;</span><br><span class="line">    height: <span class="number">40</span>,</span><br><span class="line">    position: <span class="string">'absolute'</span>,</span><br><span class="line">    left: <span class="number">0</span>,</span><br><span class="line">    right: <span class="number">0</span>,</span><br><span class="line">    top: <span class="number">0</span>,</span><br><span class="line">    backgroundColor: <span class="string">'red,</span></span><br><span class="line"><span class="string">    zIndex: 10</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  content: &#123;</span></span><br><span class="line"><span class="string">    alignItems: '</span>center<span class="string">',</span></span><br><span class="line"><span class="string">    marginTop: 50,</span></span><br><span class="line"><span class="string">    marginBottom: 40</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  footer: &#123;</span></span><br><span class="line"><span class="string">    height: 40,</span></span><br><span class="line"><span class="string">    position: '</span>absolut<span class="string">e',</span></span><br><span class="line"><span class="string">    left: 0,</span></span><br><span class="line"><span class="string">    right: 0,</span></span><br><span class="line"><span class="string">    bottom: 0,</span></span><br><span class="line"><span class="string">    backgroundColor: '</span>blu<span class="string">e'</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  box: &#123;</span></span><br><span class="line"><span class="string">    width: 100,</span></span><br><span class="line"><span class="string">    height: 100,</span></span><br><span class="line"><span class="string">    backgroundColor: '</span>gray<span class="string">',</span></span><br><span class="line"><span class="string">    marginBottom: 10</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Vimos como usar o <strong>Flexbox</strong> do <strong>React Native</strong> para posicionar os elementos e criarmos os layouts. Espero que essas duas partes consigam te ajudar na tarefa de criação de layouts e que tenha ajudado a conhecer as propriedades mencionadas.</p><p>O repositório <a href="https://github.com/descco-tools/nexus-react-native/blob/master/04-how-to-create-layouts/App.js" target="_blank" rel="noopener">nexus-react-native/04-how-to-create-layouts</a>, está a disposição para praticar. :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Dando continuidade ao artigo &lt;strong&gt;Criando Layouts&lt;/strong&gt;. Na &lt;a href=&quot;/hemersonvianna/artigos/react-native/react-native-criando-layo
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>React Native - Criando layouts - Parte 1</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-1/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-1/</id>
    <published>2018-02-06T18:20:00.000Z</published>
    <updated>2018-02-06T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Para criar um layout no <strong>React Native</strong> vamos usar o <strong>Flexbox</strong>, mas nem todos os recursos que estão na <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener">especificação do Flexbox</a>, estão incluídos. :/</p><h2 id="Stack-Layout"><a href="#Stack-Layout" class="headerlink" title="Stack Layout"></a>Stack Layout</h2><p>Esse layout na orientação vertical empilha elementos em cima uns dos outros, enquanto que para a orientação horizontal, os elementos são colocados lado a lado. Vejamos a orientação vertical:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; StyleSheet, View, Dimensions &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> &#123; height &#125; = Dimensions.get(<span class="string">'window'</span>);</span><br><span class="line"><span class="keyword">const</span> boxCount = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> boxHeight = height / boxCount;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">VerticalStackLayout</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;[styles.box, styles.box1]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">        &lt;View style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;/</span>View&gt;</span><br><span class="line">        &lt;View style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>View&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    flexDirection: <span class="string">'column'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  box: &#123; <span class="attr">height</span>: boxHeight &#125;,</span><br><span class="line">  box1: &#123; <span class="attr">backgroundColor</span>: <span class="string">'red'</span> &#125;,</span><br><span class="line">  box2: &#123; <span class="attr">backgroundColor</span>: <span class="string">'blue'</span> &#125;,</span><br><span class="line">  box3: &#123; <span class="attr">backgroundColor</span>: <span class="string">'green'</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>No elemento pai(container), usaremos a propriedade <code>flex</code>. O valor é a quantidade de espaço que ele ocupará. Sendo 1, isso significa que ele ocupará todo o espaço disponível, desde que o elemento não tenha irmãos.</p><p>A propriedade <code>flexDirection</code> permite que você especifique o eixo principal do layout. Por padrão, isso é definido como <code>column</code>. O valor de <code>flexDirection</code> sendo <code>column</code>, significa que os elementos filhos serão dispostos verticalmente (empilhados uns sobre os outros). Se o valor for <code>row</code>, significa que os filhos serão dispostos horizontalmente (lado a lado).</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-manual.png" alt="Stack Layout Vertical"></p><p>O exemplo acima mostra a maneira manual. O uso de <code>Dimensions</code> para calcular a largura ou a altura dos elementos falhará se o seu aplicativo suportar a orientação do dispositivo retrato e paisagem. Isso ocorre porque assim que o usuário virar seu dispositivo, a largura ou a altura que você calculou não serão atualizadas. Exemplo mudando a orientação:</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-manual-h.png" alt="Stack Layout Vertical"></p><p>O <strong>Flexbox</strong> faz a computação para você, se você fornecer os valores corretos. Para alcançar o mesmo layout acima, sem usar o <code>Dimensions</code>, tudo o que você precisa fazer é especificar <code>flex: 1</code> para todas as caixas, em vez de especificar o valor para a propriedade <code>height</code>:</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-flex.png" alt="Stack Layout Vertical"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-flex-h.png" alt="Stack Layout Vertical"></p><p>Agora podemos evoluir esse layout com o uso do <code>flex</code> nos elementos irmãos.</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//header</span></span><br><span class="line"><span class="attribute">box1</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attribute">backgroundColor</span>: <span class="string">'red'</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//content</span></span><br><span class="line"><span class="attribute">box2</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attribute">backgroundColor</span>: <span class="string">'blue'</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//footer</span></span><br><span class="line"><span class="attribute">box3</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: .<span class="number">5</span>,</span><br><span class="line">  <span class="attribute">backgroundColor</span>: <span class="string">'green'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-header-content-footer.png" alt="Stack Layout Vertical"></p><p>Tenha em mente que se conteúdo interno for maior do que a altura máxima disponível, o resto do seu conteúdo será oculto. Se você espera que seu conteúdo ultrapasse esse limite, você pode usar o componente de <code>ScrollView</code>, incorporado para gerar automaticamente uma barra de rolagem vertical, como em uma página da web.</p><h3 id="Horizontal"><a href="#Horizontal" class="headerlink" title="Horizontal"></a>Horizontal</h3><p>Para implementar a orientação horizontal, basta mudar o <code>flexDirection</code> para <code>row</code>. Colocando o valor de <code>flex</code> do box novamente para 1, isso resulta em que 3 colunas ocuparam toda a tela.</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-horizontal-stack-layout.png" alt="Stack Layout Vertical"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">container</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>,</span><br><span class="line">  flexDirection: <span class="string">'row'</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="selector-tag">box</span>: &#123; <span class="attribute">flex</span>: <span class="number">1</span> &#125;,</span><br><span class="line"><span class="selector-tag">box1</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'red'</span> &#125;,</span><br><span class="line"><span class="selector-tag">box2</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'blue'</span> &#125;,</span><br><span class="line"><span class="selector-tag">box3</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'green'</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="Justificando-o-conteudo"><a href="#Justificando-o-conteudo" class="headerlink" title="Justificando o conteúdo"></a>Justificando o conteúdo</h2><p>Se você deseja controlar a distribuição dos elementos filhos, é necessário utilizar a propriedade <code>justifyContent</code> no elemento pai.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">container</span>: &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>,</span><br><span class="line">  flexDirection: <span class="string">'column'</span>,</span><br><span class="line">  justifyContent: <span class="string">'flex-start'</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="selector-tag">box</span>: &#123; <span class="attribute">height</span>: boxHeight &#125;,</span><br><span class="line"><span class="selector-tag">box1</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'red'</span> &#125;,</span><br><span class="line"><span class="selector-tag">box2</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'blue'</span> &#125;,</span><br><span class="line"><span class="selector-tag">box3</span>: &#123; <span class="attribute">backgroundColor</span>: <span class="string">'green'</span> &#125;</span><br></pre></td></tr></table></figure><p><img src="/hemersonvianna/assets/img/site/articles/layout-justify-content.png" alt="Stack Layout Vertical"></p><p>Abaixo vamos ver os 5 valores possíveis que podem ser usados ​​com essa propriedade. Você não conseguirá ver nenhuma diferença se o valor da propriedade <code>flex</code> for 1, para cada um dos elementos filhos, porque eles ocupariam todo o espaço disponível.</p><ul><li><code>flex-start</code>: os elementos filhos são alinhados em direção ao ponto de partida. Observe o fundo branco logo abaixo do último filho. É assim que você sabe que isso está sendo usado o <strong>flex-start</strong>.</li><li><code>flex-end</code>: os elementos filhos são alinhados em direção à linha final. Desta vez o espaço vazio estará no ponto de partida.</li><li><code>center</code>: os elementos filhos são colocados em direção ao centro. Desta vez, o espaço vazio é dividido igualmente entre o ponto inicial e final.</li><li><code>space-around</code>: os elementos filhos são distribuídos de modo que haveria espaço igual em cada um deles. Isso significa que os elementos na parte externa teriam menos espaço no lado externo e o espaço entre os dois filhos é duplicado.</li><li><code>space-between</code>: os elementos filhos são distribuídos de modo que haveria uma quantidade igual de espaço entre cada um deles.</li></ul><p>Como você pode ter notado, cada um desses valores de estilo dependem da altura ou largura dos elementos filhos. Depende da largura, se <code>flexDirection</code> for <code>row</code> e na altura se <code>flexDirection</code> for <code>column</code>.</p><p>Por exemplo, <code>space-between</code> realmente não terá qualquer efeito em um <strong>Stack layout vertical</strong> se cada um dos elementos filhos estiver usando <code>flex</code> para controlar a altura. Isso ocorre porque não haverá mais espaço entre cada elemento para ocupar.</p><h2 id="Alinhando-os-itens"><a href="#Alinhando-os-itens" class="headerlink" title="Alinhando os itens"></a>Alinhando os itens</h2><p><code>justifyContent</code> e <code>alignItems</code> podem parecer como se estivessem fazendo o mesmo. Eles também compartilham três valores possíveis: <code>flex-start</code>, <code>flex-end</code> e <code>center</code>, com a adição do valor <code>stretch</code> na propriedade <code>alignItems</code>.</p><p><img src="/hemersonvianna/assets/img/site/articles/layout-align-items-stretch.png" alt="Stack Layout Vertical"></p><p>A principal diferença entre <code>justifyContent</code> e <code>alignItems</code> é o eixo em que os elementos filhos são distribuídos. Como você vimos anteriormente, <code>justifyContent</code> sempre usa o eixo primário ao distribuir elementos filhos. Mas <code>alignItems</code> usa o eixo oposto ao primário.</p><p>Nós já sabemos que o eixo é determinado pelo <code>flexDirection</code> que foi definido. Então, se <code>flexDirection</code> for <code>row</code>, o eixo primário flui da esquerda para a direita. Isso significa que o eixo transversal irá fluir de cima para baixo. Por outro lado, se <code>flexDirection</code> é <code>column</code> que o eixo transversal irá fluir da esquerda para a direita.</p><p>Abaixo vamos ver alguns exemplos com <code>justifyContent</code> e <code>alignItems</code> implementados lado a lado com o <code>flexDirection</code> de <code>row</code>. O primeiro usa <code>justifyContent</code> enquanto o segundo usa <code>alignItems</code>.</p><ul><li><code>flex-start</code>: o posicionamento dos elementos é o mesmo, por isso que a implementação de <strong>alignItems</strong> e <strong>justifyContent</strong>, são iguais.</li><li><code>flex-end</code>: agora começamos a ver uma diferença. Com <strong>justifyContent</strong>, os elementos filhos irão para o final da primeira linha, enquanto com <strong>alignItems</strong> os elementos filhos irão estar no início da última linha.</li><li><code>center</code>: tem a mesma ideia do resto dos valores que usamos até agora. Com <strong>justifyContent</strong>, os itens são centrados no eixo x enquanto com <strong>alignItems</strong>, os itens estão centrados no eixo y.</li><li><code>stretch</code>: use para que os elementos filhos se estendam para preencher o elemento pai. Este é o valor padrão para <code>alignItems</code>, portanto, especificar esse valor é opcional.</li></ul><p><img src="/hemersonvianna/assets/img/site/articles/layout-align-items.png" alt="Stack Layout Vertical"></p><p>Abaixo temos o trecho de código usado nos exemplos acima. Basta alterar os valores para o <code>flexDirection</code>, <code>justifyContent</code> e <code>alignItems</code>:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  StyleSheet,</span><br><span class="line">  <span class="keyword">View</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"> </span><br><span class="line">export <span class="keyword">default</span> <span class="keyword">class</span> AlignItems extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="keyword">View</span> style=&#123;styles.<span class="keyword">wrapper</span>&#125;&gt;</span><br><span class="line">        &lt;<span class="keyword">View</span> style=&#123;styles.container&#125;&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box1]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">        &lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">View</span> style=&#123;styles.container2&#125;&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box1]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box2]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">View</span> style=&#123;[styles.box, styles.box3]&#125;&gt;&lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">        &lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">      &lt;/<span class="keyword">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">const styles = StyleSheet.<span class="keyword">create</span>(&#123;</span><br><span class="line">  <span class="keyword">wrapper</span>: &#123;</span><br><span class="line">    flex: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">.5</span>,</span><br><span class="line">    flexDirection: <span class="string">'row'</span>,</span><br><span class="line">    justifyContent: <span class="string">'flex-start'</span>,</span><br><span class="line">    borderBottomWidth: <span class="number">1</span>,</span><br><span class="line">    borderBottomColor: <span class="string">'#000'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  container2: &#123;</span><br><span class="line">    flex: <span class="number">.5</span>,</span><br><span class="line">    flexDirection: <span class="string">'row'</span>,</span><br><span class="line">    alignItems: <span class="string">'flex-start'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="type">box</span>: &#123;</span><br><span class="line">    width: <span class="number">100</span>,</span><br><span class="line">    height: <span class="number">100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  box1: &#123; backgroundColor: <span class="string">'#2196F3'</span> &#125;,</span><br><span class="line">  box2: &#123; backgroundColor: <span class="string">'#8BC34A'</span> &#125;,</span><br><span class="line">  box3: &#123; backgroundColor: <span class="string">'#e3aa1a'</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Se você quiser especificar o alinhamento de elementos filhos dentro de um elemento pai, você pode usar a propriedade <code>alignSelf</code>. Todos os valores possíveis de <code>alignItems</code> são aplicáveis ​​a esta propriedade. Então, por exemplo, você pode alinhar um único elemento à direita do seu elemento pai, enquanto todos os restantes estão alinhados à esquerda.</p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Nessa primeira parte, implementamos o <strong>Stack layout</strong>. E na <a href="/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-2/">segunda parte</a>, vamos continuar vendo outros tipos de layout que podemos fazer.</p><p>O repositório <a href="https://github.com/descco-tools/nexus-react-native/blob/master/04-how-to-create-layouts/App.js" target="_blank" rel="noopener">nexus-react-native/04-how-to-create-layouts</a>, está a disposição para praticar. :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Para criar um layout no &lt;strong&gt;React Native&lt;/strong&gt; vamos usar o &lt;strong&gt;Flexbox&lt;/strong&gt;, mas nem todos os recursos que estão na &lt;a hr
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>React Native - Estilização</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-estilizacao/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-estilizacao/</id>
    <published>2018-02-05T18:20:00.000Z</published>
    <updated>2018-02-05T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>A grande vantagem que o <strong>React native</strong> nos traz, é tornar único o código tanto para <strong>Android</strong>, quanto para <strong>IOS</strong>. Não só pensando nos dispositivos móveis, graças ao <strong>React</strong>, o código pode ser utilizado no desenvolvimento web. Mas quando chegamos na parte de estilização, podemos ter que nos acostumar e perceber que nessa parte a diferença do que estamos acostumados a ver no desenvolvimento web, é maior que o esperado.</p><h2 id="Cascading-Style-Sheets-CSS"><a href="#Cascading-Style-Sheets-CSS" class="headerlink" title="Cascading Style Sheets (CSS)"></a>Cascading Style Sheets (CSS)</h2><p>A princípio mexer com estilo no <strong>React native</strong>, parece ser bem simples. Podemos ver as regras de CSS e que diferente da web, onde as as mesmas são escritas em <a href="https://en.wikipedia.org/wiki/Letter_case#Special_case_styles" target="_blank" rel="noopener">kebab-case</a>, utilizaremos a sintaxe com <strong>CamelCase</strong>.</p><p>O <strong>React Native</strong> utiliza o mecanismo de layout de <a href="https://yogalayout.com/" target="_blank" rel="noopener">Yoga</a>, que implementa as especificações do flexbox e empresta nomes de regras CSS. Ex:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Arial;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Que ficaria assim no <strong>React native</strong>:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const styles = StyleSheet.create(&#123;</span><br><span class="line"><span class="symbol">  text:</span> &#123;</span><br><span class="line"><span class="symbol">    fontFamily:</span> <span class="string">"Arial"</span>,</span><br><span class="line"><span class="symbol">    fontSize:</span> <span class="number">12</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Isso faz com que a escrita do estilo seja muito familiar. Mas depois fica claro que o estilo no <strong>React Native</strong> é muito diferente do estilo na web. Nomes de regras e flexbox são as únicas coisas que o <strong>CSS</strong> e o estilo no <strong>React Native</strong> tem em comum.</p><h2 id="Escopo-por-componente"><a href="#Escopo-por-componente" class="headerlink" title="Escopo por componente"></a>Escopo por componente</h2><p>No navegador, o <strong>CSS</strong> tem o escopo a nível da página. Para uma aplicação web de uma única página, isso significa que cada folha de estilo afeta a aplicação inteira. As regras de estilos individuais são aplicadas aos elementos no <strong>DOM</strong>, sendo definidos dentro dos blocos dos seletores. Existem muitas maneiras diferentes de selecionar os elementos <strong>DOM</strong>.</p><p>Com o <strong>React Native</strong>, os estilos não tem efeito em seu aplicação, a menos que você os passe especificamente aos seus componentes. Não existe um conceito de <code>seletor</code> porque os componentes e os estilos estão bem acoplados. Isso significa que você pode usar o mesmo nome para estilos em várias folhas de estilo sem causar efeitos colaterais:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> headerStyles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    backgroundColor: <span class="string">'red'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> footerStyles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    backgroundColor: <span class="string">'red'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;Header style=&#123;headerStyles.container&#125; /&gt;</span><br><span class="line">&lt;Footer style=&#123;footerStyles.container&#125; /&gt;</span><br></pre></td></tr></table></figure><h2 id="Heranca"><a href="#Heranca" class="headerlink" title="Herança"></a>Herança</h2><p>Os estilos não são herdados por padrão. Na web, os elementos <strong>DOM</strong> herdam alguns dos estilos dos pais por padrão. Estes são principalmente estilos relacionados a texto, e isso significa que você pode fazer:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">    font-family: Arial;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Test with <span class="tag">&lt;<span class="name">strong</span>&gt;</span>text<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Que é equivalente a:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    fontFamily: <span class="string">'Arial'</span>,</span><br><span class="line">    fontSize: <span class="number">12</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  bold: &#123;</span><br><span class="line">    fontWeight: <span class="string">'700'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;View&gt;</span><br><span class="line">  &lt;Text style=&#123;styles.container&#125;&gt;Title&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">  &lt;View&gt;</span></span><br><span class="line"><span class="regexp">    &lt;Text style=&#123;styles.container&#125;&gt;Test with &lt;Text style=&#123;styles.bold&#125;&gt;text&lt;/</span>Text&gt;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>View&gt;</span><br><span class="line">&lt;<span class="regexp">/View&gt;</span></span><br></pre></td></tr></table></figure><p>Os componentes podem para passar propriedades de estilo para os componentes filho. É o caso do <code>&lt;Text /&gt;</code> do <strong>React Native</strong>. Um componente <code>&lt;Text /&gt;</code> que é filho de outro componente <code>&lt;Text /&gt;,</code> herdará seus estilos:</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">Text</span> style=&#123;styles.<span class="built_in">text</span>&#125;&gt;</span><br><span class="line">  <span class="built_in">Text</span></span><br><span class="line">  &lt;<span class="built_in">Text</span> style=&#123;&#123;fontWeight: bold&#125;&#125;&gt;<span class="built_in">Text</span>&lt;/<span class="built_in">Text</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">Text</span>&gt;</span><br></pre></td></tr></table></figure><p>O compartilhamento de estilos de texto com <code>&lt;Text /&gt;</code> tem uso limitado, pois <code>&lt;Text /&gt;</code> não permite que a maioria dos outros componentes <strong>React Native</strong> sejam seus filhos.</p><h2 id="Logica-no-estilo"><a href="#Logica-no-estilo" class="headerlink" title="Lógica no estilo"></a>Lógica no estilo</h2><p>O <strong>CSS</strong> é muito limitado na sua capacidade de calcular valores. Existem algumas funções que você pode usar, como <code>calc()</code> e as variáveis <strong>CSS</strong> são suportadas em navegadores modernos. Além disso, a lógica para calcular estilos dinamicamente precisa ocorrer em outros lugares, sendo compilado com pré-processadores (como SASS).</p><p>No <strong>React Native</strong>, os estilos são definidos em <strong>JavaScript</strong>. Tendo uma linguagem de programação nos dá uma série de possibilidades.</p><p>Assim, temos novos padrões de estilo. Esse é um <a href="https://github.com/MicheleBertoli/css-in-js" target="_blank" rel="noopener">repositório que vale a pena ver</a>.</p><h2 id="Style-e-StyleSheet"><a href="#Style-e-StyleSheet" class="headerlink" title="Style e StyleSheet"></a>Style e StyleSheet</h2><p>Os estilos só podem ser transmitidos diretamente para um componente, da mesma forma que você passaria estilos para elementos <strong>DOM</strong> através do atributo <code>style</code>:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: blue;"</span>&gt;</span>text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Achou que iria se livrar do estilo <code>inline</code>? XD</p><p>A documentação do <strong>React native</strong> nos informar mais sobre o <a href="https://facebook.github.io/react-native/docs/style.html" target="_blank" rel="noopener">style</a>.</p><p>O que pode ser novo para você é o <a href="https://facebook.github.io/react-native/docs/stylesheet.html" target="_blank" rel="noopener">StyleSheet</a>, que cria uma folha de estilo a partir de um objeto de estilo, tornando possível se referir a ele por <strong>ID</strong> ao invés de criar um novo objeto de estilo sempre.</p><h2 id="Gerenciando-estilos"><a href="#Gerenciando-estilos" class="headerlink" title="Gerenciando estilos"></a>Gerenciando estilos</h2><p>Pra mim, essa é a parte mais critica. Antes de recorrer a módulos de terceiros, uma escolha minha e um conselho é explorar as possibilidades ao utilizar o <strong>React native</strong>, principalmente se a ideia é ir para a linha <strong>universal</strong> (nativo e web).</p><h3 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h3><p>Como utilizamos no pré-processador <strong>SASS</strong> (meu preferido.. :D), os mixins são uma boa saída para reaproveitamento de código e organização:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> errorText = &#123;</span><br><span class="line">  fontWeight: <span class="string">"700"</span>,</span><br><span class="line">  color: <span class="string">"red"</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import &#123; errorText &#125; <span class="keyword">from</span> <span class="string">"textMixins"</span>;</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span><span class="built_in"> default </span>StyleSheet.create(&#123;</span><br><span class="line">  formErrorMessage: &#123;</span><br><span class="line">    <span class="built_in">..</span>.errorText,</span><br><span class="line">    fontSize: 22,</span><br><span class="line">  &#125;,</span><br><span class="line">  fieldErrorMessage: &#123;</span><br><span class="line">    <span class="built_in">..</span>.errorText,</span><br><span class="line">    fontSize: 18,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Estilo-global"><a href="#Estilo-global" class="headerlink" title="Estilo global"></a>Estilo global</h3><p>Como em muitas metodologias de <strong>CSS</strong>, temos uma boa organização definido o estilo primitivo e o reutilizando em suas folhas de estilo. Ex:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">export</span> <span class="string">const</span> <span class="string">COLOR_BLUE</span> <span class="string">=</span> <span class="string">"blue"</span><span class="string">;</span></span><br><span class="line"><span class="string">export</span> <span class="string">const</span> <span class="string">COLOR_RED</span> <span class="string">=</span> <span class="string">"red"</span><span class="string">;</span></span><br><span class="line"><span class="string">//</span> <span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="string">export</span> <span class="string">default</span> <span class="string">StyleSheet.create(&#123;</span></span><br><span class="line">  <span class="attr">blue:</span> <span class="string">&#123;</span> <span class="attr">color:</span> <span class="string">COLOR_BLUE</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">red:</span> <span class="string">&#123;</span> <span class="attr">color:</span> <span class="string">COLOR_RED</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="string">//</span> <span class="string">...</span></span><br><span class="line">  <span class="attr">bg_blue:</span> <span class="string">&#123;</span> <span class="attr">backgroundColor:</span> <span class="string">COLOR_BLUE</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">bg_red:</span> <span class="string">&#123;</span> <span class="attr">backgroundColor:</span> <span class="string">COLOR_RED</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="string">//</span> <span class="string">...</span></span><br><span class="line">  <span class="attr">o_100:</span> <span class="string">&#123;</span> <span class="attr">opacity:</span> <span class="number">1</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">o_90:</span> <span class="string">&#123;</span> <span class="attr">opacity:</span> <span class="number">0.9</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="attr">o_80:</span> <span class="string">&#123;</span> <span class="attr">opacity:</span> <span class="number">0.8</span> <span class="string">&#125;,</span></span><br><span class="line">  <span class="string">//</span> <span class="string">...</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>Podendo ser usado assim:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styles from <span class="string">"styles"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;styles.bg_red&#125;&gt;</span><br><span class="line">        &lt;<span class="type">Text</span> style=&#123;[styles.blue, styles.o_90]&#125;&gt;<span class="type">Text</span>&lt;/<span class="type">Text</span>&gt;</span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ou assim:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="type">COLOR_BLUE</span>, <span class="type">COLOR_RED</span> &#125; from <span class="string">"styles"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;styles.container&#125;&gt;</span><br><span class="line">        &lt;<span class="type">Text</span> style=&#123;styles.text&#125;&gt;<span class="type">Text</span>&lt;/<span class="type">Text</span>&gt;</span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = &#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    backgroundColor: <span class="type">COLOR_BLUE</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  text: &#123;</span><br><span class="line">    color: <span class="type">COLOR_RED</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Teste e busque a melhor solução para o seu projeto. Aqui veremos só algumas possibilidades. Então descubra o seu problema e comece a pensar na solução para a arquitetura.</p><p>Muitas vezes, mesmo uma pequena mudança na forma como um componente funciona, significa que os nomes dos estilos não se encaixam. E os problemas podem aparecer e prejudicar o projeto. Então gaste um tempo, testando a necessidade do projeto e a melhor solução de organização e utilização.</p><h2 id="Funcoes-auxiliares"><a href="#Funcoes-auxiliares" class="headerlink" title="Funções auxiliares"></a>Funções auxiliares</h2><p>Estilos em JavaScript significa que você obtém o poder de uma linguagem de programação em vez de uma linguagem de estilo simples.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// font https://gist.github.com/samueljmurray/eeb9495146ef0aad24f534cecd17487c</span></span><br><span class="line"><span class="keyword">import</span> &#123; Dimensions &#125; <span class="keyword">from</span> <span class="string">"react-native"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Height</span></span><br><span class="line"><span class="keyword">const</span> screenSizes = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"xs"</span>,</span><br><span class="line">    height: <span class="number">568</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">"s"</span>,</span><br><span class="line">    height: <span class="number">667</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Example usage:</span></span><br><span class="line"><span class="comment">// screenSize(&#123;xs: 8, s: 12&#125;, 16)</span></span><br><span class="line"><span class="comment">// screenSize(&#123;s: 12&#125;, 16)</span></span><br><span class="line"><span class="comment">// screenSize(&#123;xs: 8&#125;, 16)</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">screenSize</span>(<span class="params">screenSizeOptions, defaultValue</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> matchedScreenSizes = screenSizes.filter(<span class="function">(<span class="params">screenSize</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Dimensions.get(<span class="string">"window"</span>).height &lt; screenSize.height;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> value;</span><br><span class="line">  <span class="keyword">const</span> hasScreenSizeOption = matchedScreenSizes.some(<span class="function">(<span class="params">matchedScreenSize</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (screenSizeOptions.hasOwnProperty(matchedScreenSize.name)) &#123;</span><br><span class="line">      value = screenSizeOptions[matchedScreenSize.name];</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!hasScreenSizeOption) &#123;</span><br><span class="line">    value = defaultValue;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> value;</span><br></pre></td></tr></table></figure><h2 id="Passando-contexto-para-o-estilo"><a href="#Passando-contexto-para-o-estilo" class="headerlink" title="Passando contexto para o estilo"></a>Passando contexto para o estilo</h2><p>Um componente <code>&lt;Button /&gt;</code>, por exemplo, pode aceitar uma propriedade de cor (string) e estilo quando estiver desabilitado (booleano), que afetam o seu estilo:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span><span class="built_in"> default </span>StyleSheet.create(&#123;</span><br><span class="line">  button: &#123;</span><br><span class="line">    backgroundColor: <span class="string">"red"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  buttonDisabled: &#123;</span><br><span class="line">    backgroundColor: <span class="string">"gray"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styles from <span class="string">"buttonStyles"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;[</span><br><span class="line">        styles.button,</span><br><span class="line">        <span class="keyword">this</span>.props.color &amp;&amp; &#123;</span><br><span class="line">          backgroundColor: <span class="keyword">this</span>.props.color</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">this</span>.props.disabled &amp;&amp; styles.buttonDisabled,</span><br><span class="line">       ]&#125;&gt;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>O problema do exemplo acima, que pode ficar muita lógica misturada (estilo e funcionalidade do componente). Então, vamos deixar a lógica de estilo no seu devido lugar.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span><span class="built_in"> default </span>(props) =&gt; StyleSheet.create(&#123;</span><br><span class="line">  button: StyleSheet.flatten([</span><br><span class="line">    &#123;</span><br><span class="line">      backgroundColor: <span class="string">"red"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    props.color &amp;&amp; &#123;</span><br><span class="line">      backgroundColor: props.color,</span><br><span class="line">    &#125;,</span><br><span class="line">    props.disabled &amp;&amp; &#123;</span><br><span class="line">      backgroundColor: <span class="string">"gray"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ]),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styles from <span class="string">"buttonStyles"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const s = styles(<span class="keyword">this</span>.props);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;s.button&#125;&gt;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mais um exemplo, sem <strong>StyleSheet</strong>:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const s = styles(<span class="keyword">this</span>.props);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;s.button&#125;&gt;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = props =&gt; (&#123;</span><br><span class="line">  button: &#123;</span><br><span class="line">    backgroundColor: props.disabled ? <span class="string">"gray"</span>: (props.color ? props.color : <span class="string">"red"</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Ficou mais complexo. Simplificando ficaria assim:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; color, disabled &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    const buttonStyle = disabled ? styles.button(&#123; color &#125;) : styles.buttonDisabled;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">View</span> style=&#123;buttonStyle&#125;&gt;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &lt;/<span class="type">View</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = &#123;</span><br><span class="line">  button: props =&gt; (&#123;</span><br><span class="line">    backgroundColor: props.color ? props.color : <span class="string">"red"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  buttonDisabled: &#123;</span><br><span class="line">    backgroundColor: <span class="string">"gray"</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Esses foram exemplos que seguirmos uma linha antes de avaliar bem o projeto, pode ficar muito complexo, independente do caminho escolhido. O melhor caminho é ver na prática e testar as possibilidades que conseguir.</p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Testando as abordagens ao estilo no <strong>React native</strong>, podemos ver a flexibilidade e também muda a forma como pensamos sobre como os estilos podem ser definidos em aplicações baseadas em componentes <strong>JavaScript</strong>, não apenas no <strong>React Native</strong>, mas também na web.</p><p>Tem muitas bibliotecas para testar:</p><ul><li><a href="https://github.com/styled-components/styled-components" target="_blank" rel="noopener">Styled components</a></li><li><a href="https://github.com/vitalets/react-native-extended-stylesheet" target="_blank" rel="noopener">Extended StyleSheets for React Native</a></li><li><a href="https://github.com/jongold/further" target="_blank" rel="noopener">Further - algebraic style composition for functional UIs</a></li></ul><p>Então, vamos testar!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;A grande vantagem que o &lt;strong&gt;React native&lt;/strong&gt; nos traz, é tornar único o código tanto para &lt;strong&gt;Android&lt;/strong&gt;, quanto para 
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>React Native - Tela de abertura e ícone</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-tela-de-abertura-e-icone/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-tela-de-abertura-e-icone/</id>
    <published>2018-02-04T18:20:00.000Z</published>
    <updated>2018-02-04T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Se está desenvolvendo uma aplicação com <strong>React native</strong>, você vai querer personalizar o mesmo. Então, vamos ver como colocar a tela inicial e os ícones do aplicativo como queremos.</p><p>Primeiro temos que criar o nosso projeto.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-<span class="keyword">native</span> <span class="keyword">init</span> helloworld</span><br></pre></td></tr></table></figure><h2 id="Criando-as-images"><a href="#Criando-as-images" class="headerlink" title="Criando as images"></a>Criando as images</h2><p>Existem dispositivos de todas as formas e tamanhos, portanto, nossas imagens de tela inicial também precisam ter uma variedade de tamanhos. O Phonegap tem um guia dos tamanhos de <a href="https://github.com/phonegap/phonegap/wiki/App-Splash-Screen-Sizes" target="_blank" rel="noopener">telas</a> e <a href="https://github.com/phonegap/phonegap/wiki/App-Icon-Sizes" target="_blank" rel="noopener">ícones</a> que o seu aplicativo deve ter.</p><p>Usaremos o <a href="https://apetools.webprofusion.com/#/tools/imagegorilla" target="_blank" rel="noopener">Image Gorilla da Ape Tools</a> para gerar todos os tamanhos necessários para a nossa tela inicial. Na ferramenta use uma imagem PNG sem transparência de 2048x2048 para a tela de abertura e uma imagem PNG de 1024x1024 para o ícone.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen.jpg" alt="Tela de abertura"> <img src="/hemersonvianna/assets/img/site/articles/icon-app.jpg" alt="Ícone"></p><p>Assim que o processo do Image Gorilla seja concluído, baixe o zio e extraia. Você verá vários diretórios, só estamos interessados ​​nos diretórios Android e IOS.</p><h3 id="Adicionando-no-IOS"><a href="#Adicionando-no-IOS" class="headerlink" title="Adicionando no IOS"></a>Adicionando no IOS</h3><p>Abra o arquivo <code>ios/helloworld.xcodeproj</code>, com o <strong>XCode</strong>.</p><p>Após o processo de indexação, selecione o projeto no menu esquerdo, que será mostrado o conteúdo para a edição. Role para baixo até achar a opção <code>Launch Images Source</code> e clique em <code>Use Asset Catalog...</code>.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-01.jpg" alt="Tela XCode"></p><p>Na caixa de diálogo que aparece clique em <code>Migrate</code>. Em seguida, no campo <strong>Launch Screen File</strong>, exclua <strong>LaunchScreen</strong> e deixe o campo em branco. Você também pode excluir o <strong>LaunchScreen.xib</strong> do navegador à esquerda.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-02.jpg" alt="Tela XCode"></p><p>Dentro da pasta <code>Imagens.xcassets</code>, existe agora uma opção <strong>LaunchImage</strong> dentro dela. Aqui é onde vamos arrastar e soltar as imagens IOS geradas.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-03.jpg" alt="Tela XCode"></p><p>Agora, executando <code>react-native run-ios</code>, já é possível ver a nossa tela de abertura nova e o ícone.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-04.jpg" alt="Tela XCode"> <img src="/hemersonvianna/assets/img/site/articles/splash-screen-05.jpg" alt="Tela XCode"></p><h3 id="Adicionando-no-Android"><a href="#Adicionando-no-Android" class="headerlink" title="Adicionando no Android"></a>Adicionando no Android</h3><p>As próximas dicas tem como base o artigo <a href="https://www.bignerdranch.com/blog/splash-screens-the-right-way/" target="_blank" rel="noopener">Splash Screens the Right Way</a>.</p><p>No Android, primeiro copie os seguintes diretórios das imagens geradas:</p><ul><li>drawable-hdpi</li><li>drawable-mdpi</li><li>drawable-xhdpi</li><li>drawable-xxhdpi</li></ul><p>e cole no diretório <code>android/app/src/main/res</code>.</p><p>Abra o projeto no Android Studio (sempre abro o arquivo <code>android/build.gradle</code>, que assim ele já verifica as configurações do gradle). Em <code>app/res/drawable</code>, crie um novo <code>Drawable resource file</code>. Nomeie esse arquivo <code>project_splash</code>.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-06.jpg" alt="Tela Android Studio"></p><p>Dentro do arquivo cole o seguinte:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// project_splash.xml</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bitmap</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:gravity</span>=<span class="string">"fill"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:src</span>=<span class="string">"@drawable/screen"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>A exibição da tela de abertura deve estar pronta imediatamente, mesmo antes de poder inflar um arquivo de layout em sua atividade de <code>splash</code>.</p><p>Então você não usará um arquivo de layout. Em vez disso, especifique o plano de fundo da tela inicial como o fundo do tema da atividade.</p><p>Agora precisamos adicionar um novo estilo no arquivo <code>android/app/res/values/styles.xml</code>, resultando no seguinte arquivo.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// styles.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"SplashTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.NoActionBar"</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowBackground"</span>&gt;</span>@drawable/project_splash<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Agora precisamos fazer algumas atualizações <strong>AndroidManifest.xml</strong>. Vamos criar uma nova atividade com o nome de <strong>.SplashActivity</strong>.</p><p>Basicamente, mude o nome da atividade existente e adicione <code>android:theme=&quot;@style/SplashTheme</code>. Em seguida, crie uma atividade vazia com o nome de <strong>.MainActivity</strong>. Isso resulta em um arquivo como este.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.helloworld"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionCode</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SYSTEM_ALERT_WINDOW"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minSdkVersion</span>=<span class="string">"16"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">"22"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">".MainApplication"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">".SplashActivity"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/SplashTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">"com.facebook.react.devsupport.DevSettingsActivity"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Observe que movemos todas as configurações de <strong>MainActivity</strong> para <strong>SplashActivity</strong>.</p><p>Agora precisamos dizer ao <strong>SplashActivity</strong> que vá para o <strong>MainActivity</strong>, o que representa a nossa aplicação real. Para fazer isso você precisa criar uma nova classe Java chamada <strong>SplashActivity</strong>.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-07.jpg" alt="Tela Android Studio"></p><p>E coloque o seguinte código nesse arquivo. Certifique-se de manter a primeira linha o mesmo que o que for criado para o seu aplicativo, é específico do aplicativo.</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SplashActivity.java</span></span><br><span class="line"><span class="keyword">package</span> com.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Intent</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.<span class="type">AppCompatActivity</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SplashActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="type">Intent</span> intent = <span class="keyword">new</span> <span class="type">Intent</span>(<span class="keyword">this</span>, <span class="type">MainActivity</span><span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        startActivity(intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Pronto! Temos as telas de abertura no Android. Para o ícone, basta substituir a imagen <code>ic_launcher.png</code> de cada pasta <code>android/app/src/main/res/mipmap-*</code>, com as imagens <code>icon.png</code> que estão nos diretórios respectivos <code>drawable-*</code>, mantendo o nome <code>ic_launcher.png</code>. Ou se preferir altere o arquivo <code>AndroidManifest.xml</code>, o valor de <code>android:icon</code>. Ex: <code>android:icon=&quot;@drawable/icon&quot;</code>.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-08.jpg" alt="Tela Android Studio"></p><p>Com tudo isso concluído, você deve ver o seguinte (extremamente brevemente) ao criar o aplicativo.</p><p><img src="/hemersonvianna/assets/img/site/articles/splash-screen-09.jpg" alt="Tela Android Studio"> <img src="/hemersonvianna/assets/img/site/articles/splash-screen-10.jpg" alt="Tela Android Studio"></p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Depois da configuração dos ambientes e a implementação dos ícones e telas de abertura, agora é só focar na aplicação que pretende desenvolver.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Se está desenvolvendo uma aplicação com &lt;strong&gt;React native&lt;/strong&gt;, você vai querer personalizar o mesmo. Então, vamos ver como coloca
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>React Native - Hello World</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-hello-world/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/react-native-hello-world/</id>
    <published>2018-02-03T18:20:00.000Z</published>
    <updated>2018-02-03T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Para ver na prática o <strong>React native</strong>, vamos para o nosso <strong>Hello world</strong>. A documentação(<a href="https://facebook.github.io/react-native/docs/getting-started.html" target="_blank" rel="noopener">Getting Started</a>) explica bem os passos de instalação e para rodar os projetos, mas você também pode ver aqui abaixo e conferir um exemplo em <a href="https://github.com/descco-tools/nexus-react-native/tree/master/01-hello-world" target="_blank" rel="noopener">nexus-react-native - hello-world</a>.</p><h2 id="Pre-requisitos"><a href="#Pre-requisitos" class="headerlink" title="Pré-requisitos"></a>Pré-requisitos</h2><ul><li><strong>Node</strong> - Interpretador de código JavaScript que funciona do lado do servidor.</li><li><strong>Watchman</strong> - Ferramenta do Facebook para observar as alterações no sistema de arquivos. É altamente recomendável que você o instale para um melhor desempenho.</li><li><strong>Xcode</strong> - Ambiente de desenvolvimento integrado e software livre da Apple Inc.</li><li><strong>JDK</strong> - Significa Kit de Desenvolvimento Java, e é um conjunto de utilitários que permitem criar sistemas de software para a plataforma Java.</li><li><strong>Android Studio</strong> - Ambiente de desenvolvimento integrado para desenvolver para a plataforma Android.</li><li><strong>react-native-cli</strong> - Permite instalar a interface do React Native via linha de comando.</li></ul><h3 id="IOS-Mac"><a href="#IOS-Mac" class="headerlink" title="IOS (Mac)"></a>IOS (Mac)</h3><ul><li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node</a></li><li><a href="https://facebook.github.io/watchman/" target="_blank" rel="noopener">Watchman</a></li><li><a href="https://itunes.apple.com/br/app/xcode/id497799835" target="_blank" rel="noopener">Xcode</a></li></ul><h3 id="Android-Windows-Linux-Mac"><a href="#Android-Windows-Linux-Mac" class="headerlink" title="Android (Windows/Linux/Mac)"></a>Android (Windows/Linux/Mac)</h3><ul><li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node</a></li><li><a href="https://facebook.github.io/watchman/" target="_blank" rel="noopener">Watchman</a></li><li><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">Java SE Development Kit (JDK)</a></li><li><a href="https://developer.android.com/studio/index.html" target="_blank" rel="noopener">Android Studio</a></li></ul><h2 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h2><h3 id="Instalacao"><a href="#Instalacao" class="headerlink" title="Instalação"></a>Instalação</h3><p>Escolha uma configuração <code>custom</code> quando solicitado ao selecionar o tipo de instalação. Certifique-se de que esses itens estejam marcados:</p><ul><li><code>Android SDK</code></li><li><code>Android SDK Platform</code></li><li><code>Performance (Intel ® HAXM)</code></li><li><code>Android Virtual Device</code></li></ul><h3 id="Instalando-o-Android-SDK"><a href="#Instalando-o-Android-SDK" class="headerlink" title="Instalando o Android SDK"></a>Instalando o Android SDK</h3><p>O Android Studio instala o último SDK do Android por padrão. Uma aplicação <strong>React Native</strong>, no entanto, requer o SDK do Android 6.0 (Marshmallow) em particular. SDKs Android adicionais podem ser instalados através do SDK Manager no Android Studio.</p><p>O SDK Manager pode ser acessado em <code>Appearance &amp; Behavior → System Settings → Android SDK</code>.</p><p>Selecione a guia <code>Plataformas SDK</code> dentro do SDK Manager, em seguida marque a caixa ao lado de <code>Show Package Details</code> no canto inferior direito. Procure e expanda a entrada do Android 6.0 (Marshmallow), então verifique se os seguintes itens estão marcados:</p><ul><li><code>Google APIs</code></li><li><code>Android SDK Platform 23</code></li><li><code>Intel x86 Atom_64 System Image</code></li><li><code>Google APIs Intel x86 Atom_64 System Image</code></li></ul><p>Em seguida, selecione a guia <code>SDK Tools</code> e marque a caixa ao lado de <code>Show Package Details</code> aqui também. Procure e expanda a entrada <code>Android SDK Build-Tools</code>, então verifique se o <strong>23.0.1</strong> está selecionado.</p><h2 id="Variaveis-de-ambiente-Android"><a href="#Variaveis-de-ambiente-Android" class="headerlink" title="Variáveis de ambiente (Android)"></a>Variáveis de ambiente (Android)</h2><p>Se vai utilizar a plataforma <strong>Android</strong>, precisa ter algumas variáveis de sistema.</p><p>No caso do <strong>Mac</strong> e <strong>Linux</strong> basta adicionar no arquivo <code>$HOME/.bash_profile</code>:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANDROID_HOME</span>=<span class="variable">$HOME</span>/Library/Android/sdk</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$ANDROID_HOME/tools</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$ANDROID_HOME/platform-tools</span><br></pre></td></tr></table></figure><p>ou se for no <strong>Windows</strong>, configure a variavel <code>ANDROID_HOME</code>. <a href="https://www.java.com/pt_BR/download/help/path.xml" target="_blank" rel="noopener">Veja aqui como configurar</a> uma variavel de ambiente no windows.</p><h2 id="Criando-a-aplicacao"><a href="#Criando-a-aplicacao" class="headerlink" title="Criando a aplicação"></a>Criando a aplicação</h2><p>Tendo os pré-requisitos instalados e no caso do <strong>Android</strong>, as variáveis de ambiente configuradas. Agora podemos criar o nosso <strong>hello world</strong> com o <code>cli</code> do <strong>React native</strong>.</p><p>Se ainda não tem o <code>cli</code> instalado, basta instalar pelo <code>npm</code>.</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> install -g react-<span class="keyword">native</span>-cli</span><br></pre></td></tr></table></figure><p>Agora basta executar o comando <code>init</code>, com o nome do projeto.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-<span class="keyword">native</span> <span class="keyword">init</span> helloworld</span><br></pre></td></tr></table></figure><h2 id="Rodando-a-aplicacao"><a href="#Rodando-a-aplicacao" class="headerlink" title="Rodando a aplicação"></a>Rodando a aplicação</h2><h3 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h3><p>No <strong>IOS</strong> é bem simples, basta entrar na pasta do projeto e executar <code>run-ios</code>.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd helloworld</span><br><span class="line">react-native <span class="keyword">run</span><span class="bash">-ios</span></span><br></pre></td></tr></table></figure><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>No caso do <strong>Android</strong>, teremos que iniciar um dispositivo Android antes de executar <code>run-android</code>. Podendo ser um dispositivo físico ou você pode usar um dispositivo virtual que permite que você simule um dispositivo Android em seu computador.</p><p><strong>Usando um dispositivo físico</strong> - Se você tem um dispositivo físico, você pode usá-lo para o desenvolvimento no lugar de um AVD conectando-o ao seu computador usando um cabo USB e seguindo as <a href="https://facebook.github.io/react-native/docs/running-on-device.html" target="_blank" rel="noopener">instruções aqui</a>.</p><p><strong>Usando um dispositivo virtual</strong> - Você pode ver a lista de dispositivos virtuais de Android (AVDs) disponíveis abrindo o <code>AVD Manager</code> no Android Studio. Procure um ícone que se pareça com isto: <img src="/hemersonvianna/assets/img/site/articles/icon-avd.png" alt="ícone AVD"></p><p><strong>Android Studio AVD Manager</strong> - Se você acabou de instalar o Android Studio, provavelmente será necessário criar um novo <strong>AVD</strong>. Selecione <code>Create Virtual Device</code>, depois escolha qualquer telefone na lista e clique em <code>Next</code>.</p><p>Com o dispositivo pronto, podemos continuar.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd helloworld</span><br><span class="line">react-native <span class="keyword">run</span><span class="bash">-android</span></span><br></pre></td></tr></table></figure><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Pode parecer complicado no começo (me refiro ao Android :D). Mas tem uma solução mais rápida com o <code>Create React Native App</code>.</p><p>É a maneira mais fácil de começar a criar um novo aplicativo <strong>React Native</strong>. Ele permite que você inicie um projeto sem instalar ou configurar ferramentas - não é necessária nenhuma instalação <strong>Xcode</strong> ou <strong>Android Studio</strong>.</p><p>Precisará do <strong>Node</strong> instalado e instalar:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g <span class="keyword">create</span>-react-<span class="keyword">native</span>-app</span><br></pre></td></tr></table></figure><p>E depois:</p><pre><code>create-react-native-app helloworldcd helloworldnpm start</code></pre><p>Instale o aplicativo do <a href="https://expo.io/" target="_blank" rel="noopener">Expo client</a> no seu telefone <a href="https://itunes.apple.com/us/app/expo-client/id982107779?mt=8" target="_blank" rel="noopener">iOS</a> ou <a href="https://play.google.com/store/apps/details?id=host.exp.exponent&hl=pt_BR" target="_blank" rel="noopener">Android</a> e conecte-se à mesma rede sem fio que o seu computador. Usando o aplicativo <strong>Expo</strong>, analise o código QR do seu terminal para abrir seu projeto.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Para ver na prática o &lt;strong&gt;React native&lt;/strong&gt;, vamos para o nosso &lt;strong&gt;Hello world&lt;/strong&gt;. A documentação(&lt;a href=&quot;https://fac
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com React Native</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/comecando-com-react-native/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/comecando-com-react-native/</id>
    <published>2018-02-02T18:20:00.000Z</published>
    <updated>2018-02-02T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Na <a href="http://conf2015.reactjs.org/" target="_blank" rel="noopener">ReactConf 2015</a>, que rolou nos dias 28 e 29 de janeiro de 2015, foi feito o anúncio do <strong>React Native</strong>. Tendo o seu <a href="https://github.com/facebook/react-native/releases/tag/v0.1.0" target="_blank" rel="noopener">primeiro release no Github</a> no dia 27 de Março de 2015.</p><h2 id="Desenvolvimento-movel-nativo"><a href="#Desenvolvimento-movel-nativo" class="headerlink" title="Desenvolvimento móvel nativo"></a>Desenvolvimento móvel nativo</h2><p>Antes de tudo, precisamos escolher uma plataforma.</p><p>A plataforma Android, por ter ferramentas gratuitas já oferece para muitos desenvolvedores que tem pouco dinheiro para investir, uma grande oportunidade.</p><p>Mesmo que apps android contém 85% do mercado de usuários do planeta. Quando você cria apps iOS baseado-se em compras por meio no aplicativo, você tem como benefício a chance de gerar lucros de até 4 vezes maior do que Android.</p><p>Temos que olhar as características de cada um..</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ul><li>Utiliza a linguagem Java.</li><li>Apps Android são baixados com maior frequência e números do que outras plataformas.</li><li>Para Publicar seu trabalho, é cobrado uma taxa fixa de apenas US$ 25 dólares.</li><li>Muitos países emergentes estão adotando a desenvolvimento Android como Brasil, índia, África, China dentre outros.</li><li>Por se tratar de código aberto, você corre risco de sofrer com problemas de Malware.</li><li>Taxas altas de fragmentação da indústria por conta da grande quantidade de fornecedores e quantidade de aparelhos no mercado.</li><li>Lucratividade da loja Google Play menor em comparação ao iOS.</li></ul><h3 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h3><ul><li>Utiliza linguagens de programação como Objective-C e Swift.</li><li>Usuários iOS são normalmente muito leais, significa uma base de usuários ativa e constante.</li><li>Usuários mais dispostos a gastar dinheiro.</li><li>Para publicar seu trabalho na plataforma, você terá que gastar cerca de US$ 99 dólares.</li><li>Seu app passará por um processo rigoroso que pode levar um bom tempo antes de ser aprovado.</li><li>A concentração desses usuários são de maioria dos EUA, um pouco na China e na Europa.</li></ul><h3 id="Resultado"><a href="#Resultado" class="headerlink" title="Resultado"></a>Resultado</h3><p>Simplesmente a nível de desenvolvimento com uma pessoa, teríamos que escolher um. Pois seria um trabalho dobrado que demandaria muito tempo de aprendizado e desenvolvimento.</p><p>E a nível de empresa, comparando com um desenvolvimento móvel web, os custos são mais altos no desenvolvimento e manutenção, demandando mais pessoal e tempo para manter os códigos iOS e Android separadamente. E consequentemente, linguagens diferentes em plataformas distintas geram comportamentos.</p><h2 id="A-solucao"><a href="#A-solucao" class="headerlink" title="A solução(?)"></a>A solução(?)</h2><p>Surgiram os frameworks para desenvolvimento híbrido (ex: <a href="https://cordova.apache.org/" target="_blank" rel="noopener">Cordova</a>, <a href="https://www.xamarin.com/" target="_blank" rel="noopener">Xamarin</a>, <a href="http://phonegap.com/" target="_blank" rel="noopener">PhoneGap</a>, <a href="https://software.intel.com/en-us/intel-xdk" target="_blank" rel="noopener">Intel XDK</a>, <a href="https://ionicframework.com/" target="_blank" rel="noopener">Ionic</a> e <a href="https://www.sencha.com/products/touch" target="_blank" rel="noopener">Sencha Touch</a>). Eles permitem compilar o mesmo projeto em ambas as plataformas.</p><p>Esses frameworks utilizam HTML, CSS e JavaScript. Eles operam em cima de uma <strong>WebView</strong> (página Web simulando uma aplicação nativa).</p><p>Dessa forma, o desempenho é inferior e a interação gráfica com o usuário pode não ser satisfatória.</p><h2 id="Arquitetura"><a href="#Arquitetura" class="headerlink" title="Arquitetura"></a>Arquitetura</h2><table style="display:inline-table"><tbody><tr><td style="vertical-align:top;width:33%;border:0;padding:4px;background:#fbfbfd"><table style="display:inline-table;margin-bottom:0;background:#fff"><thead><tr><th style="text-align:center">Nativo</th></tr></thead><tbody style="font-size:14px;text-align:center"><tr><td style="vertical-align:top;padding:0"><table style="display:inline-table;margin-bottom:0"><tbody style="font-size:14px;text-align:center"><tr><td style="text-align:center;padding:0;border:0"><table style="display:inline-table;margin-bottom:0"><tbody style="font-size:14px;text-align:center"><tr><td style="text-align:center;border:0">Aplicação</td><td style="border:0">&nbsp;</td><td style="border:0">&nbsp;</td></tr><tr><td style="text-align:center">Bibliotecas de terceiros</td><td style="border:0">&nbsp;</td><td style="border:0">&nbsp;</td></tr><tr><td colspan="2" style="text-align:center">SDK de desenvolvedores, bibliotecas padrão</td><td style="border:0">&nbsp;</td></tr></tbody></table></td></tr><tr><td style="text-align:center">Sistema operacional móvel (IOS, Android, etc...)</td></tr></tbody></table></td></tr></tbody></table></td><td style="vertical-align:top;width:33%;border:0;padding:4px;background:#fbfbfd"><table style="display:inline-table;margin-bottom:0;background:#fff"><thead><tr><th colspan="2" style="text-align:center">Híbrido</th></tr></thead><tbody style="font-size:14px;text-align:center"><tr><td colspan="2" style="text-align:center">Aplicação</td></tr><tr><td colspan="2" style="text-align:center">Framework para desenvolvimento móvel (ex: Cordova)</td></tr><tr><td colspan="2" style="text-align:center">Bibliotecas compatíveis com os Frameworks</td></tr><tr><td colspan="2" style="text-align:center">WebView API</td></tr><tr><td style="text-align:center">IOS SDKs</td><td style="text-align:center">Android SDKs</td></tr><tr><td style="text-align:center">IOS</td><td style="text-align:center">Android</td></tr></tbody></table></td><td style="vertical-align:top;width:33%;border:0;padding:4px;background:#fbfbfd"><table style="display:inline-table;margin-bottom:0;background:#fff"><thead><tr><th colspan="2" style="text-align:center">React native</th></tr></thead><tbody style="font-size:14px;text-align:center"><tr><td colspan="2" style="text-align:center;border-bottom:0">Aplicação</td></tr><tr><td style="vertical-align:bottom;padding:0;border-top:0"><table style="display:inline-table;margin-bottom:0"><tbody style="font-size:14px;text-align:center"><tr><td colspan="2" style="text-align:center;border:0">&nbsp;</td></tr><tr><td style="border:0">&nbsp;</td><td style="text-align:center">Bibliotecas de terceiros</td></tr></tbody></table></td><td style="text-align:center;padding:0"><table style="display:inline-table;margin-bottom:0"><tbody style="font-size:14px;text-align:center"><tr><td style="border:0">&nbsp;</td><td colspan="2" style="text-align:center;border:0">Pacotes NPM (ex: React)</td></tr><tr><td style="border:0">&nbsp;</td><td style="border:0">&nbsp;</td><td style="text-align:center">Componentes RN de terceiros</td></tr><tr><td style="border:0">&nbsp;</td><td colspan="2" style="text-align:center">React native</td></tr></tbody></table></td></tr><tr><td style="text-align:center">IOS / Android SDKs</td><td style="text-align:center">JS Runtime</td></tr><tr><td colspan="2" style="text-align:center">IOS / Android</td></tr></tbody></table></td></tr></tbody></table><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>O <strong>React native</strong> revolucionou, já que o código gerado pelo <strong>React</strong> pode ser reaproveitado em até 100% entre as plataformas, fazendo com que o custo e duração do projeto caia pela metade.</p><p>Ele compila o projeto nativamente, aproveitando 100% dos recursos do dispositivo e sistema operacional. O desenvolvedor tem acesso nativamente a toda API.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Na &lt;a href=&quot;http://conf2015.reactjs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ReactConf 2015&lt;/a&gt;, que rolou nos dias 28 e 29 de janeiro de 201
      
    
    </summary>
    
      <category term="react-native" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/react-native/"/>
    
    
  </entry>
  
  <entry>
    <title>Fluxo e versionamento semântico com Git</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/git/fluxo-e-versionamento-semantico-com-git/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/git/fluxo-e-versionamento-semantico-com-git/</id>
    <published>2016-11-21T18:20:00.000Z</published>
    <updated>2016-11-21T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hoje vou falar sobre algo bem interessante, que deixa o versionamento do nosso código bem organizado. Estão em dia com os assuntos <code>Semantic Version</code> e <code>Git flow</code>? Aposto que já utilizou essas regras, mas não tinha um conhecimento mais profundo sobre o assunto, ou já sempre utilizou seguindo à risca.</p><p>Já conheço e sigo o <code>Git flow</code>, a um bom tempo. Inclusive um dos meus projetos no <a href="https://github.com/doc-solutions/documentation-gitflow" target="_blank" rel="noopener">github</a> é sobre a documentação do mesmo. Não reinventei a roda, é mais para ter um registro de fácil acesso, para futuras explicações ou consultas.</p><p>Sobre <code>Semantic Version</code>, o <a href="http://semver.org/lang/pt-BR/" target="_blank" rel="noopener">site oficial</a> que está na versão <code>2.0.0</code>, explica com detalhes as regras.</p><p>Estudando os conteúdos acima, basta ter uma disciplina inicial para os processos e regras.</p><h2 id="Tomada-de-decisoes"><a href="#Tomada-de-decisoes" class="headerlink" title="Tomada de decisões"></a>Tomada de decisões</h2><p>Muitas perguntas podem surgir na cabeça com algumas situações. Vou ilustrar algumas.</p><p>1) Digamos que estamos na versão 2.2.0 na branch <code>master</code>. Estamos planejando um novo recurso (feature), então a próxima versão deve se tornar 2.3.0. Em seguida, o cliente relata um bug crítico, forçando-nos a preparar um <code>hotfix</code>. Nós corrigimos o bug e colidimos a versão para 2.2.1. Mas, dados os ‘insights’ obtidos com a correção do bug, agora percebemos que talvez precisamos quebrar a API pública para que a feature funcione da maneira que queremos. E se fizermos isso, não devemos mais colidir com a versão 2.3.0. Em vez disso, devemos mover para a versão 3.0.0.</p><blockquote><p><strong>Regra:</strong> A alteração de versão ocorre quando nós nos ramificamos do desenvolvimento para o release, ou quando nos ramificamos do master para a branch de hotfix.</p></blockquote><p>2) Convenção de nomenclatura na branch de <code>dev</code>. Uma vez que todas as mudanças nas outras branchs devem ser mescladas de volta para <code>dev</code>, acho que a nomeação deve refletir que <code>dev</code> é praticamente sempre a versão mais recente do produto. Por isso, é interessante usar a convenção <code>a.b.c-wip.d</code>, onde <code>wip</code> (work-in-progress) significa trabalho em andamento e <code>d</code> é o número da compilação (build).</p><blockquote><p><strong>Regra:</strong> Sempre certifique-se de que o número de versão na branch de dev está em sincronia com o número mais recente em qualquer branch de hotfix ou release.</p></blockquote><p>Exemplo:</p><p>A branch de <code>dev</code> estava em 1.2.0-wip.123 quando criamos a branch <code>hotfix</code> (hotfix/1.2.1). Seguindo a última regra, quando nós juntamos de volta a branch de <code>dev</code>, ele é será 1.2.1-wip.x.</p><p>Esta regra pode ficar complicada quando estamos trabalhando em um <code>hotfix</code> e uma branch de <code>release</code> simultaneamente. Na maioria dos casos, o número de versão da branch de <code>release</code> deve superar a de <code>hotfix</code>. Especialmente porque provavelmente queremos mesclar alterações da <code>hotfix</code> de volta para a branch de <code>release</code> antes de envolvê-lo.</p><p>3) Convenções de nomenclatura nas branches de <code>release</code>. Eu não espero que os <code>releases</code> permaneçam nesta branch por muito tempo, então o ciclo de vida completo de alpha/beta/rc1/rc2 parece um exagero. No final, podemos usar o rc-prefixo, o que leva à seguinte notação: <code>a.b.c-rc.d</code>. Novamente, <code>d</code> é o número de compilação (build).</p><p>Vamos continuar com o exemplo. Nós decidimos quebrar a API, então criamos uma nova branch de <code>release</code> (release/2.0.0). A primeira marca nesta branch deve então ser <code>2.0.0-rc.x</code>, onde <code>x</code> é o número de compilação. Mas o que deveria ser <code>x</code> neste caso? Isso traz a questão sobre quando o contador deve ser redefinido, se alguma vez.</p><p>Vamos examinar uma alternativa:</p><blockquote><p><strong>Alternativa:</strong> Redefinir o contador de compilação sempre que o número de versão for colidido</p></blockquote><p>Juntamente com o número de versão, isso garante exclusividade. Também parece muito mais agradável, já que o número de compilação raramente atingirá além de três dígitos.</p><p>No entanto, ele introduz um outro problema: lembrar de redefinir o contador sempre que você alterar o número da versão. Ou, se vamos para a automação completa, como detectar quando o número da versão mudou.</p><blockquote><p><strong>Regra:</strong> Assegure-se de que cada tag de controle de versão seja exclusivo no repositório.</p></blockquote><h2 id="Exemplo-passo-a-passo"><a href="#Exemplo-passo-a-passo" class="headerlink" title="Exemplo passo a passo"></a>Exemplo passo a passo</h2><table><thead><tr><th>Atividade do projeto</th><th>Tag</th></tr></thead><tbody><tr><td>O projeto começa, o master está vazio e estamos fazendo o commit do nosso primeiro recurso no desenvolvimento</td><td>0.0.0-wip.1</td></tr><tr><td>É feito o commit da tarefa <code>A</code> na branch <code>develop</code> de uma branch <code>feature</code></td><td>0.0.0-wip.2</td></tr><tr><td>Correção rápida de erros diretamente no desenvolvimento</td><td>0.0.0-wip.3</td></tr><tr><td>É feito o merge da tarefa <code>B</code> em <code>develop</code> de uma branch <code>feature</code></td><td>0.0.0-wip.4</td></tr><tr><td>Primeiro ‘minor release’! Uma Branch é criada a partir de <code>develop</code> (release/0.1.0) e reseta o contador da compilação</td><td>0.1.0-rc.1</td></tr><tr><td>Mais um commit foi necessário</td><td>0.1.0-rc.2</td></tr><tr><td>Para manter o desenvolvimento sincronizado, fizemos o merge da branch ‘release’ de volta, criando um commit de mesclagem</td><td>0.1.0-wip.3</td></tr><tr><td>Um membro da equipe faz um commit de um recurso <code>C</code> em <code>develop</code></td><td>0.1.0-wip.4</td></tr><tr><td>Release em produção: fizemos o merge de release/0.1.0 em <code>master</code> e <code>develop</code></td><td>0.1.0-release.5 0.1.0-wip.6</td></tr><tr><td>É feito um commit de uma pequena refatoração em <code>develop</code></td><td>0.1.0-wip.7</td></tr><tr><td>Um bug crítico é relatado na produção; Criar uma branch <code>hotfix</code></td><td>hotfix/0.1.1 0.1.1-hotfix.1</td></tr><tr><td>É feito o merge da versão atualizada de volta para <code>develop</code> e assim evitar duplicação de tags (uma vez que o contador tem que ser redefinido)</td><td>0.1.1-wip.2</td></tr><tr><td>Enquanto isso, outro commit de refatoração em <code>develop</code></td><td>0.1.1-wip.3</td></tr><tr><td>O <code>hotfix</code> é finalizado</td><td>0.1.1-hotfix.4</td></tr><tr><td>A ser feito o merge para <code>master</code> e <code>develop</code></td><td>0.1.1-release.5 0.1.1-wip.6</td></tr><tr><td>É feito o merge de outra branch de <code>feature</code> em <code>develop</code></td><td>0.1.1-wip.7</td></tr><tr><td>Outra <code>minor release</code>. Criaremos a branch <code>release/0.2.0</code> de <code>develop</code> e resetamos o contador da compilação (build)</td><td>0.2.0-rc.1</td></tr></tbody></table><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Pode ficar confuso de início, se não estiver familiarizado com o processo. Mas nada melhor que a prática. Então, crie o seu repositório de testes e comece a praticar. Tendo mais exemplos para ilustrar, estarei atualizando esse artigo ou criando um novo sobre o assunto. Feedbacks e novos cenários, são bem-vindos.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hoje vou falar sobre algo bem interessante, que deixa o versionamento do nosso código bem organizado. Estão em dia com os assuntos &lt;code&gt;
      
    
    </summary>
    
      <category term="git" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/git/"/>
    
    
  </entry>
  
  <entry>
    <title>O ano que mudou a minha vida</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/</id>
    <published>2016-07-01T18:20:00.000Z</published>
    <updated>2018-02-02T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Há exatamente 1 ano, eu estava partindo para a carreira solo, saindo da empresa que eu estava, para me dedicar aos planos pessoais. Depois de 11 anos de trabalho em algumas áreas e empresas sem férias, estava na hora de tirá-las.</p><p>Para o artigo não ficar muito extenso, serei o mais direto possível, para explicar o tema desse texto. Então, vamos aos tópicos.</p><h2 id="Os-males-do-estresse"><a href="#Os-males-do-estresse" class="headerlink" title="Os males do estresse"></a>Os males do estresse</h2><p>Um grande defeito de algumas pessoas que são <strong>Workaholics</strong>, como eu, está em se preocupar demais. Se por um lado, algo é muito importante para você, sendo natural que a preocupação seja grande, por outro, precisamos entender que na vida é necessário se ter um equilíbrio e dosagem.</p><p>Principalmente no trabalho, com prazos curtos, trajeto complicado e falta de harmonia de pensamentos na elaboração de projetos, podem provocar um grande estresse.</p><p>Tem o artigo <a href="http://imasters.com.br/desenvolvimento/lidando-com-o-estresse-de-programadores/" target="_blank" rel="noopener">lidando com o estresse de programadores</a>, bem legal, que fala sobre estresse e dá algumas dicas para lidar com o assunto.</p><p>Infelizmente, as vezes só aprendemos, errando. O erro que eu dexei acontecer, foi consentir que o estresse ultrapassasse o limite. Com isso, a qualidade de vida e a motivação foram para o espaço.</p><h2 id="Cirurgia-e-recuperacao"><a href="#Cirurgia-e-recuperacao" class="headerlink" title="Cirurgia e recuperação"></a>Cirurgia e recuperação</h2><p>No dia 16 de junho de 2015, dei entrada no hospital com fortes dores nos rins. Espero que niguém sinta as dores de se ter cálculos renais(Pedras nos rins). Assim, sendo submetido ao procedimento de <a href="http://urologiamoderna.com.br/features/ureterolitotripsia-com-duplo-j/" target="_blank" rel="noopener">Ureterorrenolitotripsia</a>. Chega de lembrar, né? :/</p><p>Tive que conviver com o catéter duplo J, por alguns longos dias. Conseguindo me livrar dele, por volta do dia 15 de julho. Basicamente, o primeiro mês de carreira solo, não foi muito glamuroso. :/</p><p>Portanto, beba bastante água, não fique só no café. Acredite, estou sendo muito seu amigo, para que não conheça essa dor.</p><h2 id="Teoria-do-caos"><a href="#Teoria-do-caos" class="headerlink" title="Teoria do caos"></a>Teoria do caos</h2><p>Com base na lei da <a href="http://mundoestranho.abril.com.br/materia/o-que-e-a-teoria-do-caos" target="_blank" rel="noopener">Teoria do caos</a>, devemos ter cuidado até com os pequenos detalhes. E quando vemos pequenas ou grandes situações, que preferimos ignorar?</p><p>Muitos meses com o estresse elevado, poucas horas de sono, não bebendo água e mais alguns fatores. O que isso pode resultar?</p><p>A teoria é simples, mas na prática, nem sempre tratamos como se deveria, o nosso corpo ou mente.</p><p>Então em julho de 2015, estava no meu pior estado psicológico. No mesmo período estava acontecendo aqueles assaltos com facas no centro da cidade, que foi bem noticiado na TV. Mais um fator que se somou.</p><p>O resultado foi ter um príncipio(chamo assim, porque não busquei ajuda médica) de <a href="http://www.minhavida.com.br/saude/temas/sindrome-do-panico" target="_blank" rel="noopener">síndrome do pânico</a>. Felizmente, só tive uma vez a crise, mas suficiente para repensar algumas opiniões. As vezes não vemos a gravidade desses assuntos que envolvem nossa mente.</p><p>Após esse evento, foi difícil sair de casa, demorou algumas semanas e até meses para isso. Você não ter controle do que quer fazer, é <strong>punk</strong>. Não façam como eu fiz, nessas situações, procurem ajuda.</p><h2 id="Momento-decisivo"><a href="#Momento-decisivo" class="headerlink" title="Momento decisivo"></a>Momento decisivo</h2><p>O que eu amo fazer se tornou algo muito estressante, que é mexer com o desenvolvimento web. Então, tomei a decisão de largar isso e começar a pensar em outra área. Não via outra saída, já que continuar na mesma área, despertava um estresse por acumulação.</p><p>Alguns amigos tentaram fazer com que eu mudasse de ideia. Em todo esse período só fiz um freelance, usando AngulaJS, a convite do meu amigo <strong>Allan Batista</strong>. Ao final do mesmo, vi que não conseguia separar estresse de desenvolvimento. Assim, saindo de algumas sociedades e recusando trabalhos.</p><p>Esse foi o <strong>ponto zero</strong>, se não me engano, foi no meio do mês de setembro. Assim, depois de muito refletir, tinha que tomar uma decisão. Decidi que iria continuar na área, mas tinha que resolver a questão do estresse.</p><h2 id="Um-novo-capitulo"><a href="#Um-novo-capitulo" class="headerlink" title="Um novo capítulo"></a>Um novo capítulo</h2><p>Decidido a continuar fazendo o que gosto, comecei a me dedicar aos projetos de código aberto e a escrever mais artigos para o meu blog.</p><p>Em outubro, viajei para <strong>Argentina</strong> e <strong>Foz do Iguaçu</strong>. Como ainda estava no início do processo de equilíbrio, não aproveitei 100%, mas foi bem bacana, conheci as <strong>Cataratas</strong> dos dois lados e outros lugares.</p><p>Para me ajudar também, fiz alguns projetos para ajudar amigos. Fazendo desde layouts no photoshop(tenho um pé no design) até a programação.</p><p>Como tinha um dinheiro guardado, pude me dar ao “luxo” de tirar todo esse tempo para mim, não fazendo freelas ou trabalhando.</p><p>Outra coisa que me ajudou bastante, foi começar a reforma da minha casa. Assim, com todos esses objetivos, começou um novo capítulo na minha vida.</p><h2 id="Projetos"><a href="#Projetos" class="headerlink" title="Projetos"></a>Projetos</h2><p>Até o final de 2015, o estresse ainda estava muito presente, mas seguia com os meus planos. A reforma da casa, teve o seu fim de fato, no começo de abril desse ano. Já posso colocar no curriculo: Pedreiro, pintor e decorador . :) :p</p><p>Algumas dezenas de artigos escritos, dezenas de repositórios criados, ajudei alguns amigos, muito estudo e código desenvolvido. Acredito que isso resume o que foi feito no meu último ano.</p><p>Coloquei a Descco(atual nerdcalistenico.github.io), como o meu site principal. Sendo uma ideia que tive em 2011, que significa <strong>Desenvolvimento Estratégico e Criativo da Comunicação</strong>. Não é uma empresa ou algo que tenha fins lucrativos. Simplesmente, queria criar um grupo, pois gosto de falar e mexer com outras coisas que não são da área web. Então, não fazia sentido colocar no meu blog, senão iria ficar muito confuso.</p><p>Além desse blog, também tenho o <a href="/imhomovies">IMHO Movies</a>, que dou a minha opinião sobre filmes que vejo, principalmente no cinema. Gosto muito de filmes e <strong>IMHO(In My Humble Opinion)</strong>, traduzindo seria <strong>Em minha humilde opinião</strong>.</p><p>Tenho outros blogs, mas esses são os principais que dou mais atenção. E a <strong>Descco</strong>, só existe para reunir meus blogs e projetos de código aberto. Nenhuma pretensão de virar empresa ou algo do tipo.</p><p>Digamos que sou bem ligado em organização, por isso criei toda essa estrutura. No <a href="http://nerdcalistenico.github.io/projetos/">link</a>, você pode ver a minha separação para os meus repositórios no <a href="https://github.com/hemersonvianna" target="_blank" rel="noopener">Github</a>, com uma breve descrição. Gosto de seguir o estilo de cada coisa em seu lugar. #organizacao</p><h2 id="Qual-foi-a-mudanca"><a href="#Qual-foi-a-mudanca" class="headerlink" title="Qual foi a mudança?"></a>Qual foi a mudança?</h2><p>Primeiramente, na forma de pensar e ter mais certeza de dosar as coisas. Acredito que a maioria das pessoas conhecem a teoria da qualidade de vida, mas praticar é outra história. Principalmente quem é muito novo, nem pensa nisso. Mas devemos nos preocupar. Desenvolvedor gosta de café? Sim, mas também deixe uma garrafa de água do lado e beba. :)</p><p>O trabalho está corrido e prazos complicados? Se isso for constante e não há mudanças, comece a criar novas opções.</p><p>Você gosta muito de trabalhar com o que gosta? Se sim, por mais que seja bom, é preciso ter equilíbrio. Tenha boas noites de sono, se desligue do trabalho nos momentos de lazer. Isso te ajuda a ser eficaz e até mais eficiente no trabalho, do que o contrário.</p><p>Fora a forma de pensar e experiência adquirida, ter o meu <strong>Dojo particular</strong>(Github), me trouxe muita satisfação.</p><p>Você trabalha em uma empresa por alguns anos, e por N motivos você sai da empresa. E seu código e experiência em alguns casos, só ficam em sua memória. Isso era uma insatisfação que eu tinha. Olhar para trás e só ter lembranças, mas nada registrado em algum lugar ou algo do tipo. É claro, sendo feito dentro da empresa, tem que ficar só dentro da empresa.</p><p>Porque não comecei com esses projetos paralelos antes? Por falta de cultura para fazer o mesmo. As vezes mesmo sabendo que é uma boa prática, acabamos deixando de lado por outras prioridades. E em sua maioria, o motivo é o trabalho principal.</p><h2 id="A-analogia"><a href="#A-analogia" class="headerlink" title="A analogia"></a>A analogia</h2><p>O que é uma empresa para você? O que é uma mãe para você? Apenas refletindo sobre essas duas perguntas, você terá uma analogia muito boa.</p><p>Uma boa mãe te cria para o mundo, e uma boa empresa faz o mesmo. Em ambos os casos, existe o apoio e o fornecimento de recursos para o seu crescimento, tanto no pessoal, quanto no profissional.</p><p>Então, ter projetos paralelos ou um lugar que não seja ligado a sua empresa atual, não quer dizer que está querendo se desligar ou algo do tipo.</p><p>Temos em várias empresas, o <strong>Hackathon</strong>, que é um evento onde os programadores se reúnem, para passar horas direto programando e trazendo novas ideias. Que é uma coisa muito legal e os projetos podem ou não, serem utilizados pela empresa que organiza.</p><p>Nem todas as ideias que os desenvolvedores tem, chega no nível de um evento desses ou ainda não estão maduras o suficiente na cabeça. Para isso temos o Github, onde podemos ter colaborações ou apenas criar um projeto e manter sozinho(a).</p><p>Voltando a analogia, um funcionário ou um filho, normalmente tem uma sede de conhecimento e tem aquela vontade de mudar o mundo. Então, você tem uma pessoa que cria várias coisas, estuda e ainda faz bem os seus deveres. Que mal tem?</p><p>Acredito que a única questão na analogia, é que uma hora você não vai morar mais com a sua mãe e em uma empresa você pode ficar até se aposentar. Nessas situações, cada caso é um caso, não precisamos entrar nesse detalhe.</p><p>As demais semelhanças vou deixar que você pense e reflita, para o tópico não ficar muito extenso. Mas só queria dizer que é uma via de mão dupla. A empresa apoia e dá recursos para o funcionário, e o mesmo evolui e entrega um bom trabalho. Assim, os dois crescem juntos. Se a parceria não for para sempre, mesmo assim os papéis foram cumpridos.</p><h2 id="Consideracoes-finais"><a href="#Consideracoes-finais" class="headerlink" title="Considerações finais"></a>Considerações finais</h2><p>As vezes em uma empresa, ficamos meses em um projeto. Se não tivermos o pensamento de pequenos projetos paralelos, que podem ser estudos ou até mesmo escrever um artigo, podemos ficar bem desatualizados.</p><p>A organização que fiz no meu Github e os blogs, me trouxeram uma grande satisfação. Pra sempre terei os meus registros. Estando em uma empresa, posso levar essa experiência dos estudos que fiz e faço. Ao mesmo tempo que estarei focado nos projetos da empresa, poderei continuar atualizado e praticando. E isso é bom para a empresa e para mim. Imagina que você fica 1 ano só em um projeto grande que só usa <strong>AngularJS</strong> e foca 100% nisso. No próximo projeto, você precisa usar só <strong>ReactJS</strong>. E aí? Você pode dizer, que pelo menos ficou especialista em AngularJS? Respondo com esse <a href="http://nomadev.com.br/ideia-javascript-isomorfico-universal/" target="_blank" rel="noopener">link</a> e cito uma conversa do <a href="https://twitter.com/osuissa?lang=pt" target="_blank" rel="noopener">Suissa</a>:</p><blockquote><p>Suissa qual framework eu devo estudar agora: Angular ou React? (só lembrando que React, é uma biblioteca) <cite>– Desconhecido</cite></p></blockquote><blockquote><p>Todos. <cite>– Suissa</cite></p></blockquote><blockquote><p>Mas assim eu não vou ser especialista em nenhum! <cite>– Desconhecido</cite></p></blockquote><blockquote><p>QUE ÓTIMO! Ninguém deveria ser especialista de framework, frameworks são todos iguais: entregam uma arquitetura pronta, por mais “livre” que seja. <cite>– Suissa</cite></p></blockquote><p>Vou deixar alguns links que talvez não tenha relação direta com o artigo, mas são bem interessantes:</p><ul><li><a href="https://www.linkedin.com/pulse/voc%C3%AA-conhece-par%C3%A1bola-da-demiss%C3%A3o-formiga-desmotivada-%C3%A1tila-honori" target="_blank" rel="noopener">Você Conhece A Parábola Da Demissão Da Formiga Desmotivada?</a></li><li><a href="http://incrivel.club/inspiracao-psicologia/nao-vale-a-pena-contar-pra-ninguem-os-seus-planos-50705/" target="_blank" rel="noopener">Não vale a pena contar pra ninguém os seus planos</a></li></ul><p>E esse vídeo com o <strong>Filipe</strong>, que faz uma analogia bem legal, fala sobre código limpo e o que fazer quando as coisas não vão bem:</p><ul><li><a href="https://youtu.be/ZVtGbO_CnfA?t=3m19s" target="_blank" rel="noopener">Clean Code: 2 O que é código limpo?</a></li></ul><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Um ano passa rápido, acredito só ter dedicado menos da metade desse tempo, para os projetos do Github e blogs.</p><p>Estamos iniciando o mês de julho, desde o mês passado comecei a buscar uma vaga para me realocar no mercado. Não vou dizer em que pé estou, mas espero ter boas notícias em breve.</p><p>Posso dizer que o amor voltou, e depois de todo esse processo. Desenvolvimento web, será a minha paixão pra sempre. Quem quiser me ajudar em projetos ou quiser que eu ajude, pode falar. Vamos trocar conhecimento, que isso é o mais importante.</p><p>Recentemente pediram para me definir em uma palavra, e me veio o verbo <strong>aprender</strong>. Se está desmotivado(a), busque aquela criança que está dentro de você, que quer mudar o mundo. Sei que estou motivado, quando a primeira palavra que vem a minha cabeça é <strong>aprender</strong>.</p><p>Para finalizar, a dica que deixo é se mostre. Crie seu portfólio, participe de eventos, ajude os seus companheiros dos grupos, crie seus projetos e busque fazer o melhor na sua empresa ou onde estiver. Fazer algumas dessas coisas, não quer dizer que está buscando uma nova empresa.</p><p>Você aprende se mostrando, trocando ideias e ensinando. E na maioria das empresas, se tem o contrato de confidencialidade ou dezenas de pessoas mexendo no mesmo projeto. Assim, você não pode ter ajuda ou trocar ideias com um pessoal do Japão por exemplo, sobre um módulo sensacional que criou e nem disponibilizar para ajudar outras pessoas. (só um exemplo exagerado, mas você entendeu..) :)</p><p>Agora, vamos programar!!! :) :p</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Há exatamente 1 ano, eu estava partindo para a carreira solo, saindo da empresa que eu estava, para me dedicar aos planos pessoais. Depoi
      
    
    </summary>
    
      <category term="personal" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/personal/"/>
    
    
  </entry>
  
  <entry>
    <title>Criando um guia de estilo para a interface</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/ui/criando-um-guia-de-estilo-para-a-interface/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/ui/criando-um-guia-de-estilo-para-a-interface/</id>
    <published>2016-04-20T18:20:00.000Z</published>
    <updated>2016-04-20T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Independente da área de atuação, é muito importante a organização. E na área web, mais especificamente no setor de design, a criação do <code>guia de estilo</code> é muito importante. Infelizmente, mesmo com os benefícios, muitos não começam ou cumprem essa etapa.</p><p>Vamos nos colocar no cenário em que temos um projeto web, independente do tamanho do mesmo. Existindo um guia de estilo, além de facilitar o trabalho posterior do designer, já deixa um padrão pronto para o desenvolvedor front-end.</p><p>Partiremos de dois pontos de vista, simples.</p><ul><li><strong>Primeiro caso:</strong> O designer entrega 30 telas para o desenvolvedor front-end. O mesmo tem que olhar todas as telas, achar padrões, descobrir todas as cores, tamanhos e avaliar o que é específico ou não.</li><li><strong>Segundo caso:</strong> O designer entrega 30 telas e 1 guia de estilo para o desenvolvedor front-end. O mesmo só precisa olhar as telas por questão de conferência e precisa apenas seguir o guia de estilo, com os padrões do projeto.</li></ul><p>De início, você pode pensar que todo o trabalho e a responsabilidade vai ficar com o designer, e o desenvolvedor front-end não terá trabalho. Errado, ele terá menos trabalho desnecessário. Afinal, quando você vai no restaurante e vai pedir um prato, você diz: - Me vê o terceiro prato da lista de almoço executivo. (E o garçom tem que olhar o cardápio para ver qual é) … Não !!!</p><p>Essa prática é necessária para que se tenha padrões na etapa de desenvolvimento. Agilizando o processo de atualização e manutenção do projeto. O designer terá o projeto centralizado, de fácil visualização e consulta. Assim, tendo menos trabalho na etapa de alterações e mudança completa do projeto, tendo padrões estabelecidos.</p><p>Para a etapa do desenvolvimento front-end, o trabalho desnecessário não existirá mais. O foco poderá ser dado para a criação dos padrões na área de desenvolvimento, que trará os mesmos benefícios citados acima com relação a área de design.</p><h2 id="Exemplo-pratico"><a href="#Exemplo-pratico" class="headerlink" title="Exemplo prático"></a>Exemplo prático</h2><p>Vamos supor que o designer inseriu um padrão para o título de cada página no guia de estilo. Vou exemplificar com a etapa do front-end.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Utilizando o pré-processador SASS, com a sintaxe SCSS</span></span><br><span class="line"><span class="variable">$base-font-family</span>: Arial;</span><br><span class="line"><span class="variable">$font-size-large</span>: <span class="number">24px</span>;</span><br><span class="line"><span class="variable">$font-size-regular</span>: <span class="number">18px</span>;</span><br><span class="line"><span class="variable">$color-typography-primary</span>: <span class="number">#1c1e36</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$color-typography-primary</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$base-font-family</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-size-large</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$color-typography-primary</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$base-font-family</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-size-large</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$color-typography-primary</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$base-font-family</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-size-regular</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Um exemplo bem simples, mas é para demonstrar que um guia de estilo bem estruturado, influência nos padrões criados na etapa de desenvolvimento. Não é preciso saber o que acontece no código acima e a princípio não vou entrar nesse assunto. Apenas compare com o código abaixo:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1c1e36</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.widget-title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1f213a</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1c1e35</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Calma!! Peço desculpas. Os pontos principais, não ficaram claros.</p><p>A diferença mais notável é que antes usava variáveis, para centralizar o código e a manutenção ser mais prática. E o uso das mesmas vem do planejamento do desenvolvedor, as regras de negócio do projeto e o guia de estilo.</p><p>O ponto que quis mostrar, é que mesmo centralizando o código, se não tem um guia de estilo, não faz efeito. As cores acima, tem um tom bem próximo um do outro. Será necessário ser criado uma variável para cada, então por isso na definição do guia de estilo, algumas coisas tem que ter uma avaliação se são viáveis. Como é o caso da fonte, onde se tem a diferença de 1 pixel. Isso vendo em pequena escala, parece ser uma coisa que se contorna facilmente, mas em grande escala, pode ser um grande problema. Principalmente, se não há muita comunicação entre a equipe de design e front-end.</p><p>Teremos mais casos na sequência de artigos, que irão ilustrar melhor. Um caso em que se torna indispensável o uso de um guia de estilo é em um projeto que trabalha com mais de 1 tema. Mesmo para mim, sendo sempre indispensável.</p><p>O maior problema já é resolvido na etapa de design. Com o designer criando padrões, não veremos layout como base em números <code>12.233</code> ou <code>201.17</code>, por exemplo. Você pode chegar para o desenvovledor, falar para desconsiderar e que pode arredondar. Acredite, pode dar problema. #pixelPerfect</p><p>Vamos pensar em um projeto com boxes idênticos visualmente, mas com medidas diferentes e você não tem contato com o designer. Com o tempo de desenvolvimento curto e o layout já foi aprovado. Levanta a mão quem já pegou um projeto assim? \o/</p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Essa foi uma pequena introdução para alertar sobre um dos problemas que dificultam o processo de um projeto web. Padrões salvam vidas. :) …</p><p>Pode parecer que é algo óbvio, mas vejo em muitos lugares que essa etapa não tem o seu valor reconhecido. E tenho uma opinião radical, de que se começa errado, termina da mesma forma. Afinal, refazer é mais fácil que fazer? Isso sim, tem uma resposta óbvia.</p><p>Nos próximos artigos sobre o assunto, será mais trabalhado os detalhes sobre a importância e como compor um guia de estilo.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Independente da área de atuação, é muito importante a organização. E na área web, mais especificamente no setor de design, a criação do &lt;
      
    
    </summary>
    
      <category term="ui" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/ui/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com SASS</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/css/comecando-com-sass/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/css/comecando-com-sass/</id>
    <published>2016-03-16T18:20:00.000Z</published>
    <updated>2016-03-16T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Sass (Syntactically Awesome Stylesheets) é um pré-prcessador de CSS, onde podemos definir variáveis ​​e reutilizá-las para um projeto inteiro. Você também pode gerar classes e reutilizar trechos de código com “mixins” ou “estender” suas classes com propriedades usadas anteriormente. Todos estes são análogos às funções em linguagens de programação, pois podemos aplicar os conceitos de programação orientada a objetos.</p><p>Sass consiste em duas sintaxes. A sintaxe original (.sass), chamado de sintaxe de indentação, usa uma sintaxe semelhante ao <code>Haml</code>. Ele usa indentação para bloco de código separados e caracteres de nova linha para separar regras. A sintaxe (.scss), usa bloco de formatação CSS, usando chaves para denotar blocos de código e ponto e vírgula após os valores das propriedades.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line"><span class="variable">$font-stack</span>:    Helvetica, sans-serif</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#333</span></span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">  font: <span class="number">100%</span> <span class="variable">$font-stack</span></span><br><span class="line">  color: <span class="variable">$primary-color</span></span><br><span class="line"></span><br><span class="line">// SCSS</span><br><span class="line"><span class="variable">$font-stack</span>:    Helvetica, sans-serif;</span><br><span class="line"><span class="variable">$primary-color</span>: <span class="number">#333</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">100%</span> <span class="variable">$font-stack</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$primary-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Particularmente eu prefiro a sintaxe (.scss), por ser mais próximo da sintaxe CSS.</p><h2 id="Instalacao"><a href="#Instalacao" class="headerlink" title="Instalação"></a>Instalação</h2><p>Para utilizar o SASS, você precisa ter o <a href="https://www.ruby-lang.org/pt/downloads/" target="_blank" rel="noopener">Ruby</a>, instalado na máquina. O <a href="http://sass-lang.com/install" target="_blank" rel="noopener">site do SASS</a>, mostra 2 formas de instalação do mesmo.</p><p>Praticamente sempre uso a forma, utilizando o terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install sass</span><br></pre></td></tr></table></figure><p>Para verificarmos se o mesmo está instalando, podemos conferir com o comando:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass -v</span><br></pre></td></tr></table></figure><h2 id="Utilizacao"><a href="#Utilizacao" class="headerlink" title="Utilização"></a>Utilização</h2><p>Após a instalação, se tem várias formas para rodar o pré-processador. Você pode usar um software como o <a href="http://koala-app.com/" target="_blank" rel="noopener">Koala</a>, usar um automatizador de tarefas como <a href="http://gruntjs.com/" target="_blank" rel="noopener">Grunt</a> (<a href="https://github.com/sindresorhus/grunt-sass" target="_blank" rel="noopener">grunt-sass</a>) ou <a href="http://gulpjs.com/" target="_blank" rel="noopener">Gulp</a> (<a href="https://github.com/dlmanning/gulp-sass" target="_blank" rel="noopener">gulp-sass</a>), ou o próprio terminal.</p><p>Como exemplo, podemos usar o terminal:</p><ul><li>*<em>watch *</em> - flag para que sempre quando tenha alteração dos arquivos .scss que estão sendo observados, seja gerado o css</li><li><strong>style.scss</strong> - [caminho da pasta dos arquivos scss ou caminho + nome especifico do arquivo a ser observado]</li><li><strong>style.css</strong> - [caminho da pasta de destino ou caminho + nome especifico do arquivo a ser gerado]</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// sass --watch <span class="built_in">source</span>/</span><br><span class="line">// sass --watch <span class="built_in">source</span>/style.scss</span><br><span class="line">// sass --watch <span class="built_in">source</span>/:dist/ </span><br><span class="line">sass --watch style.scss:style.css</span><br></pre></td></tr></table></figure><p>Um ponto importante ao se observar uma pasta, é com relação aos arquivos que serão gerados. Digamos que na pasta <code>source/</code>, temos 3 arquivos e queremos que apenas 2 sejam gerados. Resolvemos isso com o prefixo <code>_</code>(undescore).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// _variables.scss</span><br><span class="line">// styleguide.scss</span><br><span class="line">// style.scss</span><br></pre></td></tr></table></figure><p>Nos arquivos que estão sendo observados, importamos o arquivo de variáveis.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// styleguide.scss</span></span><br><span class="line"><span class="comment">// style.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">"_variables"</span>;</span><br></pre></td></tr></table></figure><h2 id="Variaveis"><a href="#Variaveis" class="headerlink" title="Variáveis"></a>Variáveis</h2><p>Todas as variáveis devem ser definidas usando um prefixo <code>$</code>.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line"><span class="variable">$color-alpha</span>: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.8</span>)</span><br><span class="line"><span class="variable">$color-typography-primary</span>: <span class="number">#ffffff</span></span><br><span class="line"><span class="variable">$font-size-large</span>: <span class="number">32px</span></span><br><span class="line"></span><br><span class="line">.title</span><br><span class="line">  background: <span class="variable">$color-alpha</span></span><br><span class="line">  color: <span class="variable">$color-typography-primary</span></span><br><span class="line">  font-size: <span class="variable">$font-size-large</span></span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="variable">$color-alpha</span>: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.8</span>);</span><br><span class="line"><span class="variable">$color-typography-primary</span>: <span class="number">#ffffff</span>;</span><br><span class="line"><span class="variable">$font-size-large</span>: <span class="number">32px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$color-alpha</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$color-typography-primary</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-size-large</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Seletores-aninhados"><a href="#Seletores-aninhados" class="headerlink" title="Seletores aninhados"></a>Seletores aninhados</h2><p>Com o Sass, você pode aninhar os seus seletores CSS, evitando a repetição de escrita. Mas cuidado, não podemos exagerar nos níveis, senão a manutenção fica inviável.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="comment">// Não faça isso !!!!</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="selector-class">.link</span> &#123;</span><br><span class="line">      <span class="selector-class">.text</span> &#123;</span><br><span class="line">        <span class="attribute">color</span> : red;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// CSS</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.link</span> <span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Vamos para a boa prática e também utilizar o caractere <code>&amp;</code>, que representa o seletor pai.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="selector-class">.link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">10px</span> solid <span class="number">#f00</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>; </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.widget</span> &#123;</span><br><span class="line">  <span class="selector-class">.link</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#a1a1a1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line"><span class="selector-class">.link</span></span><br><span class="line">  <span class="attribute">color</span>: blue</span><br><span class="line"></span><br><span class="line">  &amp;:hover</span><br><span class="line">    color: yellow</span><br><span class="line"></span><br><span class="line">  &amp;:before</span><br><span class="line">    border-left: <span class="number">10px</span> solid transparent</span><br><span class="line">    border-right: <span class="number">10px</span> solid transparent</span><br><span class="line">    border-top: <span class="number">10px</span> solid <span class="number">#f00</span></span><br><span class="line">    content: <span class="string">""</span></span><br><span class="line">    display: inline-block</span><br><span class="line">    height: <span class="number">0</span></span><br><span class="line">    width: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">.widget</span><br><span class="line">  .link</span><br><span class="line">    background: <span class="number">#a1a1a1</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.link</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.link</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">10px</span> solid <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.widget</span> <span class="selector-class">.link</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#a1a1a1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h2><p>Os mixins permitem que você reutilize propriedades CSS e seletores. No SCSS, precisamos definir o <code>@mixin</code> e atribuir um nome. Depois, podemos acrescentar algumas propriedades, criar uma classe ou elemento e utilizar com <code>@include</code>. Na sintaxe original, é um pouco diferente e podemos comparar abaixo:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line">=border-radius($radius)</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="variable">$radius</span></span><br><span class="line">  -moz-border-radius:    <span class="variable">$radius</span></span><br><span class="line">  -ms-border-radius:     <span class="variable">$radius</span></span><br><span class="line">  border-radius:         <span class="variable">$radius</span></span><br><span class="line"></span><br><span class="line">.box</span><br><span class="line">  +border-radius(<span class="number">10px</span>)</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="keyword">@mixin</span> border-radius(<span class="variable">$radius</span>) &#123;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">     -moz-<span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">      -ms-<span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123; <span class="keyword">@include</span> border-radius(<span class="number">10px</span>); &#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">-ms-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Funcoes"><a href="#Funcoes" class="headerlink" title="Funções"></a>Funções</h2><p>Semelhante a um <code>mixin</code>, as funções permitem parâmetros, mas não retornam trechos de código e sim um valor.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="variable">$total-width</span> : <span class="number">100%</span>;</span><br><span class="line"><span class="variable">$total-columns</span> : <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@function</span> x-gridsystem-width(<span class="variable">$columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@return</span> (<span class="variable">$total-width</span> / <span class="variable">$total-columns</span>) * <span class="variable">$columns</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: x-gridsystem-width(<span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line"><span class="variable">$total-width</span>: <span class="number">100%</span></span><br><span class="line"><span class="variable">$total-columns</span>: <span class="number">12</span></span><br><span class="line"></span><br><span class="line">@function x-gridsystem-width(<span class="variable">$columns</span>)</span><br><span class="line">  @return (<span class="variable">$total-width</span> / <span class="variable">$total-columns</span>) * <span class="variable">$columns</span></span><br><span class="line"></span><br><span class="line">.box</span><br><span class="line">  width: x-gridsystem-width(<span class="number">6</span>)</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Extend"><a href="#Extend" class="headerlink" title="Extend"></a>Extend</h2><p>Com SASS você pode fazer com que um selector herde os estilos de outro, sem duplicar as propriedades CSS. Tenha em mente que se você tem muitas propriedades duplicadas, você poderá enfrentar problemas de desempenho. Este recurso permite que você herde qualquer estilo já utilizado em qualquer classe anterior.</p><p>Vamos dizer que eu quero usar as propriedades de “.message” em “.success” e “.error”. Para atingir este objetivo é necessário criar “.success” , “.error” e acrescentar “@extend .message”.</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line"><span class="selector-class">.message</span></span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span></span><br><span class="line">  padding: <span class="number">10px</span></span><br><span class="line">  color: <span class="number">#333</span></span><br><span class="line"></span><br><span class="line">.success</span><br><span class="line">  @extend .message</span><br><span class="line">  border-color: green</span><br><span class="line"></span><br><span class="line">.error</span><br><span class="line">  @extend .message</span><br><span class="line">  border-color: red</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line"><span class="selector-class">.message</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .message;</span><br><span class="line">  <span class="attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .message;</span><br><span class="line">  <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.message</span>, <span class="selector-class">.success</span>, <span class="selector-class">.error</span>, &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Placeholders"><a href="#Placeholders" class="headerlink" title="Placeholders"></a>Placeholders</h2><p>O placeholder é semelhante ao <code>@extend</code>, com a diferença que ele funciona como uma variável (Se não for utilizado, não aparece no CSS final).</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SASS</span></span><br><span class="line">%message</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span></span><br><span class="line">  padding: <span class="number">10px</span></span><br><span class="line">  color: <span class="number">#333</span></span><br><span class="line"></span><br><span class="line">.success</span><br><span class="line">  @extend %message</span><br><span class="line">  border-color: green</span><br><span class="line"></span><br><span class="line">.error</span><br><span class="line">  @extend %message</span><br><span class="line">  border-color: red</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SCSS</span></span><br><span class="line">%message &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %message;</span><br><span class="line">  <span class="attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %message;</span><br><span class="line">  <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line"><span class="selector-class">.success</span>, <span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>O CSS é muito importante para um projeto web. E é muito importante ter um pré-processador para organizar, reutilizar código e facilitar muito na manutenção. O SASS oferece muitos recursos e não vejo desvantagens, sendo comparado ao se escrever com apenas em CSS puro. Temos outros pré-processadores no mercado, e veremos em outros artigos.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sass (Syntactically Awesome Stylesheets) é um pré-prcessador de CSS, onde podemos definir variáveis ​​e reutilizá-las para um projeto int
      
    
    </summary>
    
      <category term="css" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/css/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com Wordpress</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/php/comecando-com-wordpress/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/php/comecando-com-wordpress/</id>
    <published>2016-02-22T18:20:00.000Z</published>
    <updated>2016-02-22T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>O WordPress é um CMS(Content Management System), open source escrito em PHP e utiliza o banco de dados MySQL. O mesmo é o sucessor do <strong>b2/cafelog</strong>, criado por Michel Valdrighi, que foi lançado em 2001. Em 2002, o desenvolvimento do b2, se encerrou. E em 2003, um calouro universitário decidiu criar um <code>fork</code> do projeto. Matthew Mullenweg Charles, juntamente com Mike Little, começaram a criar o WordPress a partir do código do b2.</p><h2 id="Pre-requisitos"><a href="#Pre-requisitos" class="headerlink" title="Pré-requisitos"></a>Pré-requisitos</h2><ul><li>PHP 5.6 ou superior</li><li>MySQL 5.6 ou superior</li><li>Módulo Apache mod_rewrite, ativo</li></ul><h2 id="Instalacao"><a href="#Instalacao" class="headerlink" title="Instalação"></a>Instalação</h2><p>O <a href="https://wordpress.org/download/" target="_blank" rel="noopener">download</a> da versão estável pode ser feito no site oficial. Apos o download, basta extrair o <code>.zip</code> no seu servidor.</p><h2 id="Configuracao"><a href="#Configuracao" class="headerlink" title="Configuração"></a>Configuração</h2><p>Primeiramente, você precisa criar um banco de dados <strong>Mysql</strong> e atribuir a um usuário as permissões necessárias. Agora é hora de navegar para o seu site para começar com o processo de instalação.</p><p>Você precisará informar algumas informações, como :</p><ul><li>Nome do banco de dados</li><li>Nome do usuário do banco</li><li>Senha do banco</li><li>Servidor do banco de dados</li><li>Prefixo utilizado na criação das tabelas</li></ul><p>O nome do banco de dados, usuário e senha, você já saberá se fez o primeiro passo informado para a configuração. O servidor, dificilmente precisará ser alterado, podendo manter o valor <code>localhost</code>. Quanto aos prefixos das tabelas, só terá a necessidade de ser alterado, caso tenha múltiplas instalações com o Wordpress no mesmo banco de dados.</p><p>Após preencher essas informações no formulário apresentado, basta submeter. Esses dados serão armazenados no arquivo <code>wp-config.php</code>, que estará na raiz do projeto. Caso queira fazer esse passo manualmente, basta renomear ou duplicar o arquivo <code>wp-config-sample.php</code>, que se encontra na raiz do projeto. Dentro do arquivo encontraremos:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'DB_NAME'</span>, <span class="string">'[nome_do_banco_de_dados]'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Usuário do banco de dados MySQL */</span></span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'[nome_de_usuario]'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Senha do banco de dados MySQL */</span></span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'[senha]'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** nome do host do MySQL */</span></span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">$table_prefix  = <span class="string">'wp_'</span>;</span><br></pre></td></tr></table></figure><p>O importante é que se tenha o arquivo <code>wp-config</code>, preenchido na raiz do projeto, para que seja identificado a instalação.</p><p>Preenchendo as informações do banco de dados pelo navegador ou manualmente, logo após teremos o passo de preencher as informações básicas para o painel de controle. Esse passo, será feito pelo navegador. Informaremos o nome do site e os dados para a criação de um usuário para acessar o painel de controle do WordPress.</p><p>Assim, temos uma instalação completa. Podemos fazer o login, para acessar o painel ou ver o site carregado com o tema padrão.s</p><h2 id="Estrutura-de-pastas"><a href="#Estrutura-de-pastas" class="headerlink" title="Estrutura de pastas"></a>Estrutura de pastas</h2><ul><li><strong>wp-admin./</strong> - Contém os arquivos(PHP) do paindel de controle e normalmente não são alterados por usuários ou desenvolvedores</li><li><strong>wp-content/</strong> - Contém os seus temas, plugins e conteúdo carregados e alterados quando você adicionar mídia, plugins e temas<ul><li>languages/</li><li>plugins/</li><li>themes/</li><li>upgrade/</li><li>uploads/</li></ul></li><li><strong>wp-includes/</strong> - Contém arquivos(PHP) do núcleo do WordPress e normalmente também não são alterados por usuários ou desenvolvedores</li><li>…</li></ul><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>O WordPress é uma boa ferramenta para criação de blogs, para usuários sem muito conhecimento de desenvolvimento web e desenvolvedores experientes. Poupando tempo para criação de um painel de controle. Nos próximos artigos veremos mais sobre seus recursos.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;O WordPress é um CMS(Content Management System), open source escrito em PHP e utiliza o banco de dados MySQL. O mesmo é o sucessor do &lt;st
      
    
    </summary>
    
      <category term="php" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/php/"/>
    
    
  </entry>
  
  <entry>
    <title>Começando com MongoDB</title>
    <link href="https://nerdcalistenico.github.io/hemersonvianna/artigos/database/comecando-com-mongodb/"/>
    <id>https://nerdcalistenico.github.io/hemersonvianna/artigos/database/comecando-com-mongodb/</id>
    <published>2016-02-15T18:20:00.000Z</published>
    <updated>2016-02-15T18:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>O MongoDB é um tipo de banco de dados orientado a documentos, em vez de registros estritamente definidos e relacionamentos. Esse tipo de banco de dados foi apelidado de <code>NoSQL</code>(Not Only SQL). Um documento no MongoDb, agrupa objetos em coleções. Você pode pensar em uma coleção como uma tabela como você criaria em um banco relacional, mas a diferença é que não será forçado a definir um esquema para que possa armazenar alguma coisa.</p><p>Você pode incorporar um documento dentro de outro, o que é muito útil para os casos em que há uma relação de um para um. Em um típico banco de dados relacional, você precisa criar duas tabelas e ligá-los em conjunto com uma chave estrangeira para conseguir o mesmo resultado. NoSQL não suporta <code>joins</code>, mas se você organizar os dados corretamente, então você vai achar que você não precisa de um <code>join</code>.</p><p>Vale a pena mencionar o objetivo do MongoDB e do NoSQL não é acabar com o banco relacional. Bancos relacionais ainda são uma solução muito boa para a maioria das necessidades do mundo do desenvolvimento. Mas eles tem os seus pontos fracos, mais notadamente a necessidade de definir um esquema rígido para os seus dados, que o <code>NoSQL</code> tenta resolver.</p><p>O MongoDB tem como característica ser open source, possuir alta performance, não possuir esquemas, ser escrito em C++, multiplataforma e ser formado por um conjunto de aplicativos JSON. O mesmo foi concluído em 2009 lançando assim a primeira versão do MongoDB.</p><p>Comparação dos conceitos em SQL e MongoDB:</p><table><thead><tr><th>SQL</th><th>MongoDB</th></tr></thead><tbody><tr><td>Banco de dados (database)</td><td>Banco de dados (database)</td></tr><tr><td>Tabela (table)</td><td>Coleção (colection)</td></tr><tr><td>Linha (row)</td><td>documento ou documento BSON</td></tr><tr><td>Coluna (column)</td><td>Campo (field)</td></tr><tr><td>índice (index)</td><td>índice (index)</td></tr><tr><td>Table joins</td><td>documentos embutidos e linkados</td></tr><tr><td>Chave Primária (primary key)</td><td>Chave Primária (primary key)</td></tr></tbody></table><h2 id="Instalacao"><a href="#Instalacao" class="headerlink" title="Instalação"></a>Instalação</h2><p>Para instalar o MongoDB precisamos fazer o <a href="http://www.mongodb.org/downloads" target="_blank" rel="noopener">download</a> no site oficial.</p><p>Para mais detalhes sobre a instalação para as plaaformas, você pode ver nos links abaixo:</p><ul><li><a href="https://docs.mongodb.org/master/tutorial/install-mongodb-on-windows/" target="_blank" rel="noopener">Windows</a></li><li><a href="https://docs.mongodb.org/master/tutorial/install-mongodb-on-os-x/" target="_blank" rel="noopener">OS X</a></li><li><a href="https://docs.mongodb.org/master/administration/install-on-linux/" target="_blank" rel="noopener">Linux</a></li></ul><p>É necessário que esteja adicionado o caminho da pasta <code>bin</code> do mesmo no <strong>Path</strong> do sistema. Se não já estiver adicionado, pode fazê-lo pela interface do sistema operacional ou pelo comando:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ex: C:\Program Files\MongoDB\Server\3.2\bin no windows</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:[caminho onde foi instalado]/bin"</span></span><br></pre></td></tr></table></figure><p>Com isso, podemos usar o comando <code>mongod</code> de qualquer lugar. O mesmo é usado para iniciar o servidor do MongoDB. Por default o MongoDB armazena seus bancos de dados no diretório <code>/data/db</code> (Linux e OS X) e <code>C:\data\db</code> (Windows). No Windows, <code>C:</code> é a unidade onde está executando o comando, se estiver por exemplo usando uma outra unidade como <code>E:</code>, a pasta deverá estar na mesma. Portanto, se iniciar o servidor do MongoDB e não tiver essa pasta, terá um erro no terminal.</p><p>Se você quiser usar outra pasta, basta usar a flag <code>dbpath</code>, ao inciar o servidor:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ex: mongod -dbpath=/home/hemersonvianna/mongodb</span></span><br><span class="line">mongod -dbpath=[caminho da pasta]</span><br></pre></td></tr></table></figure><h2 id="Utilizacao"><a href="#Utilizacao" class="headerlink" title="Utilização"></a>Utilização</h2><p>Além de iniciar o servidor como o comando <code>mongod</code>, também temos o comando <code>mongo</code>, para termos acesso ao shell. Ao iniciar o servidor, por padrão o mongo procura por uma base de dados na porta 27107, no seu localhost.</p><p>Ao iniciar o shell, por padrão ele utilizará o banco <code>test</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">MongoDB shell version: 3.2.4</span><br><span class="line">connecting to: <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>Para selecionar ou criar uma base de dados, basta usar o comando <code>use [nome_da_base]</code>. Sempre que precisar checar em qual base está trabalhando, basta usar o comando <code>db</code>. Já para checar quais são as bases existentes, utilize o comando <code>show dbs</code> ou <code>show databases</code>.</p><h2 id="Inserindo"><a href="#Inserindo" class="headerlink" title="Inserindo"></a>Inserindo</h2><p>Para que a base seja criada com o comando <code>use</code>, é necessário utilizar o comando <code>INSERT</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use myTest</span><br><span class="line"><span class="comment">#switched to db myTest</span></span><br><span class="line">user = &#123; name : <span class="string">'Hemerson Vianna'</span>, description: <span class="string">'Testando'</span> &#125;</span><br><span class="line">db.users.insert(user)</span><br><span class="line"><span class="comment">#WriteResult(&#123; "nInserted" : 1 &#125;)</span></span><br></pre></td></tr></table></figure><p>O mesmo também pode ser feito com o comando <code>SAVE</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use myTest</span><br><span class="line"><span class="comment">#switched to db myTest</span></span><br><span class="line">user = &#123; name : <span class="string">'Hemerson Vianna'</span>, description: <span class="string">'Testando'</span> &#125;</span><br><span class="line">db.users.save(user)</span><br><span class="line"><span class="comment">#WriteResult(&#123; "nInserted" : 1 &#125;)</span></span><br></pre></td></tr></table></figure><p>Usamos o objeto <code>db</code>, que aponta para o banco de dados atualmente selecionado. Incluindo o documento <code>user</code> dentro da coleção <code>users</code></p><h3 id="A-diferenca-entre-insert-e-save"><a href="#A-diferenca-entre-insert-e-save" class="headerlink" title="A diferença entre insert e save."></a>A diferença entre <code>insert</code> e <code>save</code>.</h3><p>O comando <code>insert</code> apenas insere um documento. O comando <code>save</code> insere um documento, mas se o registro já tiver um <code>_id</code>, o comando faz a função de atualização.</p><h2 id="Consultando"><a href="#Consultando" class="headerlink" title="Consultando"></a>Consultando</h2><p>Podemos consultar o que foi inserido com o comando <code>find</code> e podemos usar um filtro com o mesmo.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># O mesmo que SELECT * FROM list</span></span><br><span class="line">db.list.find()</span><br><span class="line"><span class="comment"># &#123; "_id" : ObjectId("571f6bdd891bf653d4cc709d"), "name" : "Hemerson Vianna", "description" : "Testando" &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Com filtro</span></span><br><span class="line"><span class="comment"># O mesmo que SELECT * FROM list WHERE name="Hemerson Vianna"</span></span><br><span class="line">db.list.find(&#123;<span class="string">"name"</span>: <span class="string">"Hemerson Vianna"</span>&#125;)</span><br><span class="line"><span class="comment"># &#123; "_id" : ObjectId("571f6bdd891bf653d4cc709d"), "name" : "Hemerson Vianna", "description" : "Testando" &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Especificando os campos</span></span><br><span class="line"><span class="comment"># O campo _id vem por padrão</span></span><br><span class="line"><span class="comment"># O mesmo que SELECT _id, name FROM list</span></span><br><span class="line">db.list.find(&#123;&#125;,&#123;<span class="string">"name"</span>: 1&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Removendo o campo _id</span></span><br><span class="line"><span class="comment"># O mesmo que SELECT name FROM list</span></span><br><span class="line">db.list.find(&#123;&#125;,&#123;<span class="string">"name"</span>: 1, <span class="string">"_id"</span>: 0&#125;)</span><br></pre></td></tr></table></figure><p>Acrescentando o método <code>pretty()</code>, podemos exibir os resultados de um modo mais apresentável.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.list.find().pretty()</span><br></pre></td></tr></table></figure><p>Além do método <code>find()</code> há também o método <code>findOne()</code>, que retorna apenas o primeiro resultado da consulta.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.list.findOne(&#123;<span class="string">"description"</span>: <span class="string">"Testando"</span>&#125;)</span><br></pre></td></tr></table></figure><p>Operadores de comparação:</p><ul><li><strong>equal</strong> - <code>$eq</code> é o mesmo que <code>==</code></li><li><strong>greather</strong> - <code>$gt</code> é o mesmo que <code>&gt;</code></li><li><strong>greather than equal</strong> - <code>$gte</code> é o mesmo que <code>&gt;=</code></li><li><strong>less than</strong> - <code>$lt</code> é o mesmo que <code>&lt;</code></li><li><strong>less than equal</strong> - <code>$lte</code> é o mesmo que <code>&lt;=</code></li><li><strong>not equal</strong> - <code>$ne</code> é o mesmo que <code>!=</code></li><li><strong>in</strong> - <code>$in</code> é o mesmo que <code>IN()</code></li><li><strong>not in</strong> - <code>$nin</code> é o mesmo que <code>NOT IN()</code></li></ul><p>Operadores lógicos:</p><ul><li><strong>or</strong> - <code>$or</code> é o mesmo que <code>OR</code></li><li><strong>and</strong> - <code>$and</code> é o mesmo que <code>AND</code></li><li><strong>not</strong> - <code>$not</code> é o mesmo que <code>NOT</code></li><li><strong>nor</strong> - <code>$nor</code> é o mesmo que <code>NOR</code></li></ul><p>Exemplos:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;<span class="string">"age"</span>:&#123;<span class="string">"gte"</span>:29, <span class="string">"lte"</span>:31&#125;&#125;);</span><br><span class="line"></span><br><span class="line">db.users.find(&#123;<span class="string">"name"</span>:&#123;<span class="string">"ne"</span>:<span class="string">"Hemerson Vianna"</span>&#125;&#125;);</span><br></pre></td></tr></table></figure><h2 id="Atualizando"><a href="#Atualizando" class="headerlink" title="Atualizando"></a>Atualizando</h2><p>Você pode usar os métodos <code>update()</code> e <code>save()</code> para atualizar documentos dentro da coleção. Sendo que, o método <code>update()</code> atualiza valores em um documento existente, enquanto o método <code>save()</code> substitui o documento existente em si pelo documento passado dentro do método <code>save()</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Update</span></span><br><span class="line">db.list.update(&#123;name: <span class="string">"Hemerson Vianna"</span>&#125;, &#123;<span class="variable">$set</span>: &#123;description: <span class="string">"Testando 2"</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>Se não utilizar o <code>$set</code> todos os dados do usuário como, nome e descrição, serão substituidos pela descrição “Testando 2”, ou seja, o <code>$set</code> faz com que seja mantido todos os dados, e alterado apenas a descrição.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># save</span></span><br><span class="line">db.list.save(&#123;<span class="string">"_id"</span> : ObjectId(<span class="string">"571f6bdd891bf653d4cc709d"</span>), description: <span class="string">"Testando 2"</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="Removendo"><a href="#Removendo" class="headerlink" title="Removendo"></a>Removendo</h2><p>O método <code>remove()</code> é usado para remover um documento da coleção. Este método permite 2 parâmetros. O primeiro é o critério de exclusão e o segundo é a flag <code>justOne</code>. Se a flag estiver setada como true ou 1, o método removerá apenas um documento.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Remove o registro com o valor informado</span></span><br><span class="line">db.list.remove(&#123;name: <span class="string">"Hemerson Vianna"</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove todos os dados da coleção list</span></span><br><span class="line">db.list.remove()</span><br></pre></td></tr></table></figure><h2 id="Mais-alguns-comandos"><a href="#Mais-alguns-comandos" class="headerlink" title="Mais alguns comandos"></a>Mais alguns comandos</h2><ul><li><strong>show collections</strong> - mostra as coleções do banco</li><li><strong>db.createCollection(“[nome da coleção]”)</strong> - cria uma coleção</li><li><strong>db.[coleção].drop()</strong> - deleta a coleção</li><li><strong>db.dropDatabase()</strong> - deleta o banco atual</li></ul><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Querendo conhecer mais sobre um banco <code>NoSQL</code>, o MongoDB é uma das melhores opções. Nos próximos artigos, entraremos mais no assunto.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;O MongoDB é um tipo de banco de dados orientado a documentos, em vez de registros estritamente definidos e relacionamentos. Esse tipo de 
      
    
    </summary>
    
      <category term="database" scheme="https://nerdcalistenico.github.io/hemersonvianna/artigos/database/"/>
    
    
  </entry>
  
</feed>