
  
  
      
    
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
      
      
         
      
      
         
      
      
         
      
      
      
         
         
         
            
         
         
      
      
      
	
  
  

  [{"title":"Projetos para 2021","url":"/hemersonvianna/artigos/personal/projetos-para-2021/","content":"\nPrimeiro artigo de 2021, e iniciando as atividades desse blog neste ano.\n\nA última atividade nesse blog, foi referente aos 92 dias de código, onde apenas joguei os códigos diariamente. Eles Estão melhor organizados no Instagram e no Github.\nPara ajustar isso, nesse ano terá um bootcamp para ter um vídeo para cada dia, desses 92. Assim, os últimos artigos publicados nesse blog, serão atualizados.\n\n## Nerd Calistênico\n\nEsse é único projeto que já está no ar, mas sempre será atualizado e conta como um projeto em 2021.\n\nSe está lendo isso, provavelmente conhece esse projeto. O projeto conta com 9 blogs e iformações sobre mim. Pode ser resumindo a um site pessoal, mas é a origem para todos os projetos que já planejei e irei planejar.\n\n## Cyan Front\n\nCom o tempo quis colocar o meu perfil internacional, mas colocar o projeto Nerd Calistênico em vários idiomas ou pelo menos criar uma versão em inglês, seria um trabalho muito grande e talvez, sem necessidade.\n\nCom base nisso, a ideia é ter o Cyan Front para atingir esse objetivo. Terá uma estrutura mais simples e possivelmente um blog. Assim, poderei disponibilizar conteúdos para quem entende o idioma inglês.\n\n## Coding Bootcamps\n\nSenti a necessidade de ter uma área para bootcamps, que se encaixariam bem no objetivo de ter conteúdos diretos e rápidos.\n\n## Togakure\n\nSempre tive o sonho e meta de criar um projeto que reunisse componentes que dessem suporte ao maior número de bibliotecas e frameworks possível. Pelo menos os mais utilizados no mercado.\n\nÉ um projeto ambicioso e que trará grandes problemas de manutenção. Como é um projeto de vida, não importa o tempo que irá levar.\n\n## Votação 2022\n\nDe uns anos para cá, fiquei mais ligado em política. Ao buscar algum meio de me colocar por dentro desse assunto, criei o rio2020.com.br, que já tirei do ar, pois atingiu o seu objetivo.\n\nForam mais de 20.000 visitas e no site, mostrava todos os candidatos a câmara de vereadores do município do Rio de Janeiro, e também incluia os cadidatos a prefeitura da cidade.\n\nEntão, descobri que dá para fazer algo relacionado a política. Com isso em mente, o votacao2022.com.br existirá para ser mais um canal para trazer informações sobre as eleições no Brasil, em 2022.\n\n## Zero to Deploy\n\nTendo uma área para os bootcamps, já é algo interessante, mas ainda faltava um curso oficial. O `zero to deploy`, será alo óbvio pelo nome do curso. Então, tentarei toda a minha experiência que tenho desde o brainstorming de um projeto, até o deploy em produção. Passando por todas as áreas como: negócio, gestão de projeto, ux/ui, front-end, back-end e devOps.\n\n## Conclusão\n\nNo site [Hemerson Vianna](https://hemersonvianna.com.br/), pode ser visto todos os links para os projetos. Desde o site de cada um, como os endereços nas redes sociais.\n","categories":["personal"]},{"title":"O ano dos desafios","url":"/hemersonvianna/artigos/personal/o-ano-dos-desafios/","content":"\nEsse é o segundo artigo de teor pessoal que pode ser encontrado nesse blog. O primeiro artigo é o [O ano que mudou a minha vida](/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/), que foi escrito em 01.07.2016.\n\nPara dar uma continuidade para quem leu, no dia 19.07.2016, estava iniciando na empresa **B2W Digital**. Quando escrevi o artigo, ainda não tinha previsões de quando voltaria para um emprego de carteira assinada.\n\nO artigo tinha como foco, ser motivador e sincero. Não foi uma escolha tirar um tempo para mim. Basicamente, fui jogado em uma situação onde estava sem emprego, muito estresse e com traumas. Boa parte do esforço que tive no ano descrito, foi para me recuperar e tenho consciência de que alguns traumas se arrastam até hoje.\n\nEm julho de 2016, estava com as forças renovadas e tinha conseguido superar muitas coisas.\n\n## Equipes e códigos\n\nDo dia 19.07.2016 até 15.03.2019, pude trabalhar com boas equipes e evoluir bastante no meio da programação. Tive mais experiência com o `node.js` no back-end, `react` no front-end e até experiência como líder de equipe.\n\nTambém tive experiência como líder em 2014/2015, mas não oficialmente. O cenário era: Ser o único responsável de **front-end**, ter a contribuição de 7 estagiários (seo, campanhas, ux, ui e comercial) e ter mais uma pessoa de **back-end**, para uma loja online de seguros e previdência. Então, sentava com todos, para definir padrões e estratégias. Por mais que a ideia era passar conhecimento, também obtive bastante. O lado ruim, foi acabar me sobrecarregando e somou com o que descrevi no outro artigo.\n\nTrabalhei com muitas pessoas no período de 3 anos e também tive a oportunidade de fazer o meu primeiro projeto que foi para produção, com `react-native`. Junto com o meu líder de equipe na época, fizemos a área de produto para as lojas **Americanas**, **Submarino**, **Shoptime** e **Sou barato**.\n\nComo líder, tive a oportunidade dada pelo meu gerente na época, de liderar 2 projetos internos. Um era utilizado pelo pessoal de marketing, para gerenciar as peças que são mostradas nos sites do grupo e outro, era para criação de campanhas. O primeiro já existia, o segundo foi criado do zero. Atuei fazendo toda a parte do front-end, também mexendo na parte de back-end com os outros desenvolvedores e como líder. Éramos em 3 pessoas.\n\nParticipei de algumas equipes e projetos. Destaco o **Allan Carvalho** e o **Luiz Felipe**, que foram respectivamente líder e gerente da minha pessoa, por um tempo. Obrigado pelas oportunidades e pelo profissionalismo. Nem vou enumerar as pessoas desenvolvedoras, pois, posso esquecer alguém.\n\nTudo deu certo. Esses projetos como vários outros, estão em produção até hoje. \n\n## Dilemas\n\nCom a evolução, vem alguns dilemas. Como desenvolvedor já fiz vários projetos do zero e considero ter sorte por isso. Já perdi as contas de quantos projetos de componentes e projetos completos, já fiz do zero.\n\nDe 2016 a 2019, teve uma grande quantidade de desenvolvedores que passaram pela minha vida. Muitos trabalharam comigo ou conhecia, por ser da mesma empresa. Começou a ficar esquisito o tamanho da rotatividade e isso trazia alguns dilemas.\n\n- Todo mundo indo para fora, deveria ir também?\n- Deixei de ser líder, pois não tinha poder de decisão e voltei para pleno, tenho que sair para virar sênior?\n- A motivação está indo embora ou é apenas um desgaste temporário?\n- Todos estão evoluindo, será que estou também?\n\nSó uma observação, não ligo e nunca liguei para cargos. Já fui pleno, depois sênior, depois pleno e etc..\nIsso depende muito da empresa. Só ligo para a questão financeira, que não pode diminuir. Então, quando cito pleno e sênior é mais por uma questão de reconhecimento. Pois acabou que isso me confundiu, ao saber realmente em que posição estou.\n\nParece bobo, mas hoje vejo que isso realmente me confundiu e me trouxe para um dilema que acredito que muitos vivem no Brasil.\n\nPor experiência, é muito tenso ficar perdido entre pleno, sênior e líder. Por mais que isso dependa da empresa onde está, nos questionamos no contexto geral. Isso deveria ser mais nivelado entre as empresas. Assim, fica a questão de custo e benefício. Uma coisa é como se considera, outra é o que a empresa espera/precisa. Sendo o fator financeiro, as vezes primordial para as devidas escolhas.\n\nEntão, temos uma mistura de situações na área. O mais importante é se sentir confortável na posição que está, pois se não estiver, o caldo entorna muito rápido.\n\nE nunca, nunca, nunca pense que será mais tranquilo estar em um cargo abaixo. O seu subconsciente não irá permitir que você dê menos que o seu melhor. Se trata mais de uma questão moral, em que você não conseguirá ficar bem consigo mesmo.\n\n## Planejamento\n\nSe eu falar que planejei em detalhes ou com antecedência os momentos que tirei para mim, estarei mentindo com a cara lavada.\n\nNo [ano que mudou a minha vida](/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/), não tinha para onde correr, tive que planejar rápido e só tinha a opção de me recuperar e colocar metas.\n\nAgora, para esse **ano dos desafios**, os dilemas já estavam martelando e infelizmente, minha experiência como profissional estava frequentemente sendo desprezada. Nunca fui orgulhoso profissionalmente, talvez isso seja até um erro. Sempre me coloco abaixo da minha capacidade. \n\nTambém não sou impulsivo profissionalmente, sei exatamente quando começou e quando terminou a insatisfação profissional, sendo um processo de 1 ano. \nEntão, não foi uma situação de um dia, onde um superior diz: \"- Sei que tem anos de experiência, mas só faça o que estou mandando. O que importa e a meta, não a qualidade.\"\n\nE chega aquele momento que você se pergunta: \"- O que estou fazendo da minha vida? Passei anos virando noites, dando o meu melhor e para quê?\"\n\nAssim, se deu a decisão de tirar um **ano para os desafios**. Nada planejado, mas sabia que as coisas não poderiam continuar como estavam.\n\nParticularmente, consigo planejar muito rápido. Vou me lembrar para sempre, que no final de 2018, tive 10 dias de folga. O meu líder me informou no trabalho e planejei, comprei todos os voos e hospedagens em 2 horas, para 10 dias em 4 estados no nordeste. Deu tudo certo, nenhum furo e foi incrível.\n\n## Mãos à obra\n\nAgora tinha que começar de fato um ano para mim. A primeira escolha foi dedicação à esse site, mudando a estrutura e adicionando mais coisas. O resultado foi muito bom. O número de visitantes aumentou em 10 vezes e agora em 2020, o número está 200% maior. Isso foi e está sendo muito motivador.\n\nCom esse período, tinha como objetivo um tempo para o **Hemerson**, investi no lado pessoal e em relacionamento. Por mais que consiga manter a vida profissional e relacionamentos, nem sempre dá para conhecer pessoas novas, pois acabamos entrando na rotina de trabalho e menos tempo livre.\n\nOs primeiros 6 meses se resumem nisso. Depois veio a ideia dos desafios, já que os meus projetos com o **site** e **github**, já estavam encaminhados. Em outubro de 2019, começaram os desafios de **calistenia** e de **códigos** que podem ser vistos no decorrer deste artigo.\n\nAlgo surreal e acredito que nunca mais terei tempo para essa correria insana. Foram 92 dias, que tive uma disciplina extrema. Já seria difícil ser apenas 1 desafio, mas 2, foi loucura. Fora outras coisas que fiz nesse período. Então, até a virada do ano, foi uma correria bem grande.\n\nAbaixo, consigo mostrar como foram esses 92 dias e depois para finalizar esse ano, relaxei no nordeste.\n\n## Calistenia\n\nDesafio de calistenia, totalizando 90 dias. A intenção era manter a disciplina de treinar todo dia.\n\n<style>\n  .images { display: flex; flex-direction: row; flex-flow: row wrap; }\n  .images .loader { display: block; height: 80px; width: 80px; }\n  .images a { display: block; position: relative; height: 80px; width: 80px; }\n  .images a:hover:after { box-shadow: inset 0 0 10px; content: \"\"; display: block; position: absolute; width: 100%; height: 100%; top: 0; left: 0; }\n  .images img { border: 1px solid #000; }\n</style>\n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3H16mjBQY9/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3H16mjBQY9/media/\" alt=\"Calistenia 90\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=90'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3KP2fOh3IM/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3KP2fOh3IM/media/\" alt=\"Calistenia 89\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=89'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3Mnlo2BggB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3Mnlo2BggB/media/\" alt=\"Calistenia 88\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=88'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3PWoMLhFSR/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3PWoMLhFSR/media/\" alt=\"Calistenia 87\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=87'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3R3jFxhxd1/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3R3jFxhxd1/media/\" alt=\"Calistenia 86\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=86'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3UiL55BJKW/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3UiL55BJKW/media/\" alt=\"Calistenia 85\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=85'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3XGlMwhjoU/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3XGlMwhjoU/media/\" alt=\"Calistenia 84\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=84'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3ZxLjEBv8t/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3ZxLjEBv8t/media/\" alt=\"Calistenia 83\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=83'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3cRiVthikf/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3cRiVthikf/media/\" alt=\"Calistenia 82\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=82'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3fI9VUhtNI/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3fI9VUhtNI/media/\" alt=\"Calistenia 81\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=81'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3iTfLOBpRs/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3iTfLOBpRs/media/\" alt=\"Calistenia 80\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=80'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3k43UfBWUt/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3k43UfBWUt/media/\" alt=\"Calistenia 79\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=79'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3ncE_hBoRQ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3ncE_hBoRQ/media/\" alt=\"Calistenia 78\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=78'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3pW4WGh-bL/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3pW4WGh-bL/media/\" alt=\"Calistenia 77\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=77'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3rwA7VhQwo/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3rwA7VhQwo/media/\" alt=\"Calistenia 76\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=76'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3uKTIEhYVo/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3uKTIEhYVo/media/\" alt=\"Calistenia 75\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=75'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3xKdzSBiG3/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3xKdzSBiG3/media/\" alt=\"Calistenia 74\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=74'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3zlecnhH7f/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3zlecnhH7f/media/\" alt=\"Calistenia 73\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=73'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B32KCT-hgSD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B32KCT-hgSD/media/\" alt=\"Calistenia 72\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=72'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B34zu3hB-LD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B34zu3hB-LD/media/\" alt=\"Calistenia 71\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=71'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B37tNIvhw5Y/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B37tNIvhw5Y/media/\" alt=\"Calistenia 70\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=70'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3-b9h_paY2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3-b9h_paY2/media/\" alt=\"Calistenia 69\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=69'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4A-uQbgJZr/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4A-uQbgJZr/media/\" alt=\"Calistenia 68\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=68'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4DAbIAgSNB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4DAbIAgSNB/media/\" alt=\"Calistenia 67\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=67'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4GP9KSgxAL/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4GP9KSgxAL/media/\" alt=\"Calistenia 66\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=66'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4IwxiVg-Hn/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4IwxiVg-Hn/media/\" alt=\"Calistenia 65\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=65'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4LUuN2gkJ2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4LUuN2gkJ2/media/\" alt=\"Calistenia 64\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=64'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4N430nAIxP/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4N430nAIxP/media/\" alt=\"Calistenia 63\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=63'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4QfH1fFUum/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4QfH1fFUum/media/\" alt=\"Calistenia 62\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=62'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4SmfvzgGuE/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4SmfvzgGuE/media/\" alt=\"Calistenia 61\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=61'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4VlWYVgAHm/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4VlWYVgAHm/media/\" alt=\"Calistenia 60\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=60'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4YJ_3pgErQ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4YJ_3pgErQ/media/\" alt=\"Calistenia 59\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=59'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4a1uPSAUc_/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4a1uPSAUc_/media/\" alt=\"Calistenia 58\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=58'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4dYU1gARFj/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4dYU1gARFj/media/\" alt=\"Calistenia 57\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=57'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4fWsS0AecV/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4fWsS0AecV/media/\" alt=\"Calistenia 56\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=56'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4icNsJAV-S/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4icNsJAV-S/media/\" alt=\"Calistenia 55\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=55'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4kx-K_giNC/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4kx-K_giNC/media/\" alt=\"Calistenia 54\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=54'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4nGE5_A9JM/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4nGE5_A9JM/media/\" alt=\"Calistenia 53\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=53'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4qVenyAIWT/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4qVenyAIWT/media/\" alt=\"Calistenia 52\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=52'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4s6lQegYkw/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4s6lQegYkw/media/\" alt=\"Calistenia 51\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=51'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4vWuw3AIio/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4vWuw3AIio/media/\" alt=\"Calistenia 50\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=50'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4x_29egS8G/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4x_29egS8G/media/\" alt=\"Calistenia 49\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=49'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B40ZJwhgbhg/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B40ZJwhgbhg/media/\" alt=\"Calistenia 48\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=48'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B43ERmpAXDb/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B43ERmpAXDb/media/\" alt=\"Calistenia 47\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=47'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B45v0xeAuFS/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B45v0xeAuFS/media/\" alt=\"Calistenia 46\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=46'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B47uwsNAFAl/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B47uwsNAFAl/media/\" alt=\"Calistenia 45\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=45'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4-u8eXgP1l/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4-u8eXgP1l/media/\" alt=\"Calistenia 44\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=44'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5BYl5zgnOO/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5BYl5zgnOO/media/\" alt=\"Calistenia 43\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=43'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5EEZkeAn9a/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5EEZkeAn9a/media/\" alt=\"Calistenia 42\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=42'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Git3WAExD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Git3WAExD/media/\" alt=\"Calistenia 41\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=41'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5JFs2WgcUg/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5JFs2WgcUg/media/\" alt=\"Calistenia 40\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=40'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Luoi-AGtI/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Luoi-AGtI/media/\" alt=\"Calistenia 39\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=39'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5OLHQsAujH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5OLHQsAujH/media/\" alt=\"Calistenia 38\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=38'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Q_Nb-A5b4/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Q_Nb-A5b4/media/\" alt=\"Calistenia 37\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=37'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Tfgf-g1i2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Tfgf-g1i2/media/\" alt=\"Calistenia 36\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=36'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5VXqIpgXU4/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5VXqIpgXU4/media/\" alt=\"Calistenia 35\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=35'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5YmR8fgnZl/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5YmR8fgnZl/media/\" alt=\"Calistenia 34\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=34'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5a65JIgGUR/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5a65JIgGUR/media/\" alt=\"Calistenia 33\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=33'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5d_-8VgCgH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5d_-8VgCgH/media/\" alt=\"Calistenia 32\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=32'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5gUGovBAyi/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5gUGovBAyi/media/\" alt=\"Calistenia 31\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=31'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5i8SjIBDFI/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5i8SjIBDFI/media/\" alt=\"Calistenia 30\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=30'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5luWk6h8aV/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5luWk6h8aV/media/\" alt=\"Calistenia 29\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=29'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5oEHoShog7/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5oEHoShog7/media/\" alt=\"Calistenia 28\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=28'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5p-pLiB1tc/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5p-pLiB1tc/media/\" alt=\"Calistenia 27\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=27'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5tOO2NhPkf/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5tOO2NhPkf/media/\" alt=\"Calistenia 26\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=26'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5wKpRFBv_c/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5wKpRFBv_c/media/\" alt=\"Calistenia 25\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=25'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5ypEV5hcwx/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5ypEV5hcwx/media/\" alt=\"Calistenia 24\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=24'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B50HpD0hE5e/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B50HpD0hE5e/media/\" alt=\"Calistenia 23\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=23'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B52y04SBAYr/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B52y04SBAYr/media/\" alt=\"Calistenia 22\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=22'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B55Nb49hSjm/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B55Nb49hSjm/media/\" alt=\"Calistenia 21\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=21'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B58lX0wBsiU/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B58lX0wBsiU/media/\" alt=\"Calistenia 20\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=20'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5_FAwFhs1S/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5_FAwFhs1S/media/\" alt=\"Calistenia 19\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=19'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6BnV0XJ6EB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6BnV0XJ6EB/media/\" alt=\"Calistenia 18\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=18'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6DllLcpYGN/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6DllLcpYGN/media/\" alt=\"Calistenia 17\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=17'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6G3BJnhgoV/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6G3BJnhgoV/media/\" alt=\"Calistenia 16\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=16'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6JfTPuhSQI/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6JfTPuhSQI/media/\" alt=\"Calistenia 15\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=15'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6MDbcdBnd1/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6MDbcdBnd1/media/\" alt=\"Calistenia 14\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=14'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6OcwEeBSJV/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6OcwEeBSJV/media/\" alt=\"Calistenia 13\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=13'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6RJcBxhcQM/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6RJcBxhcQM/media/\" alt=\"Calistenia 12\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=12'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6TpoH-BG4H/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6TpoH-BG4H/media/\" alt=\"Calistenia 11\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=11'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6WgjfMh-bH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6WgjfMh-bH/media/\" alt=\"Calistenia 10\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=10'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6Y3-VKp5-D/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6Y3-VKp5-D/media/\" alt=\"Calistenia 9\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=09'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6beVPfp8-6/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6beVPfp8-6/media/\" alt=\"Calistenia 8\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=08'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6duCQLhDe5/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6duCQLhDe5/media/\" alt=\"Calistenia 7\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=07'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6gvPjehnQI/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6gvPjehnQI/media/\" alt=\"Calistenia 6\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=06'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6jRYEYBd6d/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6jRYEYBd6d/media/\" alt=\"Calistenia 5\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=05'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6lZ6PSBy9u/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6lZ6PSBy9u/media/\" alt=\"Calistenia 4\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6oS5HVhWi4/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6oS5HVhWi4/media/\" alt=\"Calistenia 3\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6rFN3EhZ-V/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6rFN3EhZ-V/media/\" alt=\"Calistenia 2\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6tkFznBgz-/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6tkFznBgz-/media/\" alt=\"Calistenia 1\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n</ul>\n\n## Códigos\n\nDesafio de códigos, totalizando 92 dias. **#92daysofcode**. \nA intenção era mostrar uma transição do básico para o avançado. Registrado no **Instagram** e no [Github](https://github.com/org-moon-world/daysofcode). Atualmente, transformando esses dias em artigos e atualizando esse blog.\n \n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3F8M5EhyS7/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3F8M5EhyS7/media/\" alt=\"Código 01\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3INBFXBQuu/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3INBFXBQuu/media/\" alt=\"Código 02\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3K8wDFhAAo/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3K8wDFhAAo/media/\" alt=\"Código 03\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3Nex-cBgq3/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3Nex-cBgq3/media/\" alt=\"Código 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3QMJU1BH0k/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3QMJU1BH0k/media/\" alt=\"Código 05\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=05'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3SnwZshQvA/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3SnwZshQvA/media/\" alt=\"Código 06\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=06'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3VNQpShfOS/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3VNQpShfOS/media/\" alt=\"Código 07\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=07'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3XxxIYhU2o/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3XxxIYhU2o/media/\" alt=\"Código 08\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=08'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3aewjsBIsR/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3aewjsBIsR/media/\" alt=\"Código 09\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=09'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3dHZnsBQgn/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3dHZnsBQgn/media/\" alt=\"Código 10\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=10'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3fwy8fhRNh/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3fwy8fhRNh/media/\" alt=\"Código 11\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=11'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3iVLTuBcq-/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3iVLTuBcq-/media/\" alt=\"Código 12\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=12'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3k5RibhaWg/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3k5RibhaWg/media/\" alt=\"Código 13\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=13'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3ncU7tBnfO/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3ncU7tBnfO/media/\" alt=\"Código 14\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=14'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3pzts_hZf5/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3pzts_hZf5/media/\" alt=\"Código 15\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=15'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3scYARBeuF/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3scYARBeuF/media/\" alt=\"Código 16\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=16'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3vGyRvhtK-/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3vGyRvhtK-/media/\" alt=\"Código 17\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=17'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3xf22uBUEt/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3xf22uBUEt/media/\" alt=\"Código 18\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=18'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B30KIhTBFPK/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B30KIhTBFPK/media/\" alt=\"Código 19\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=19'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B323Q5ohges/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B323Q5ohges/media/\" alt=\"Código 20\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=20'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B35U_4MJTUe/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B35U_4MJTUe/media/\" alt=\"Código 21\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=21'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B378Sa8B3gL/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B378Sa8B3gL/media/\" alt=\"Código 22\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=22'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B3-cWUVp9wA/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B3-cWUVp9wA/media/\" alt=\"Código 23\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=23'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4BJBjBgVtZ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4BJBjBgVtZ/media/\" alt=\"Código 24\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=24'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4EXfnzgUPG/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4EXfnzgUPG/media/\" alt=\"Código 25\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=25'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4GShLSgh65/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4GShLSgh65/media/\" alt=\"Código 26\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=26'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4I77XMgIzB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4I77XMgIzB/media/\" alt=\"Código 27\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=27'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4LbucBg10b/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4LbucBg10b/media/\" alt=\"Código 28\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=28'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4OAdlUA6cY/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4OAdlUA6cY/media/\" alt=\"Código 29\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=29'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4QijxaFeGv/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4QijxaFeGv/media/\" alt=\"Código 30\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=30'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4TPBbLANO8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4TPBbLANO8/media/\" alt=\"Código 31\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=31'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4V1ehZA1sR/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4V1ehZA1sR/media/\" alt=\"Código 32\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=32'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4Ya626g9lZ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4Ya626g9lZ/media/\" alt=\"Código 33\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=33'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4bTv4Kg8Bi/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4bTv4Kg8Bi/media/\" alt=\"Código 34\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=34'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4d7OwXg0Cu/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4d7OwXg0Cu/media/\" alt=\"Código 35\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=35'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4ghKi8AJkJ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4ghKi8AJkJ/media/\" alt=\"Código 36\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=36'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4i6oYKAgqF/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4i6oYKAgqF/media/\" alt=\"Código 37\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=37'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4lk234AxBi/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4lk234AxBi/media/\" alt=\"Código 38\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=38'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4oM9mHgyj7/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4oM9mHgyj7/media/\" alt=\"Código 39\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=39'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4qzVdJgf8d/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4qzVdJgf8d/media/\" alt=\"Código 40\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=40'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4tkc6NA_eH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4tkc6NA_eH/media/\" alt=\"Código 41\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=41'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4vYeIBAoQY/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4vYeIBAoQY/media/\" alt=\"Código 42\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=42'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4y3R-DAc6_/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4y3R-DAc6_/media/\" alt=\"Código 43\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=43'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B41f2bjAJfw/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B41f2bjAJfw/media/\" alt=\"Código 44\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=44'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B44HvoMAQsf/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B44HvoMAQsf/media/\" alt=\"Código 45\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=45'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B46HbhcA7s1/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B46HbhcA7s1/media/\" alt=\"Código 46\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=46'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B483xVDA6RP/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B483xVDA6RP/media/\" alt=\"Código 47\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=47'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4_4s74AV6N/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4_4s74AV6N/media/\" alt=\"Código 48\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=48'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5BuwTqACLB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5BuwTqACLB/media/\" alt=\"Código 49\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=49'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5EyvSHgvAj/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5EyvSHgvAj/media/\" alt=\"Código 50\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=50'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5HerWUgl9b/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5HerWUgl9b/media/\" alt=\"Código 51\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=51'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5J3lZMgOLM/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5J3lZMgOLM/media/\" alt=\"Código 52\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=52'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5MgLm1gYjO/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5MgLm1gYjO/media/\" alt=\"Código 53\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=53'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Piwk8A700/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Piwk8A700/media/\" alt=\"Código 54\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=54'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5SAhslg-h2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5SAhslg-h2/media/\" alt=\"Código 55\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=55'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5TyDJwgfoT/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5TyDJwgfoT/media/\" alt=\"Código 56\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=56'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5XYU6NAJbN/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5XYU6NAJbN/media/\" alt=\"Código 57\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=57'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Y0r5wgBRD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Y0r5wgBRD/media/\" alt=\"Código 58\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=58'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5bYS6UAWz6/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5bYS6UAWz6/media/\" alt=\"Código 59\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=59'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5eel9WhK3k/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5eel9WhK3k/media/\" alt=\"Código 60\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=60'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5g14ugBGpj/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5g14ugBGpj/media/\" alt=\"Código 61\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=61'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5jfPd1hV-g/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5jfPd1hV-g/media/\" alt=\"Código 62\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=62'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5moiElBe4O/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5moiElBe4O/media/\" alt=\"Código 63\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=63'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5oo24eh69i/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5oo24eh69i/media/\" alt=\"Código 64\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=64'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5sY6HYhGps/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5sY6HYhGps/media/\" alt=\"Código 65\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=65'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5ttnSUBXLD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5ttnSUBXLD/media/\" alt=\"Código 66\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=66'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5wXSywBlMx/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5wXSywBlMx/media/\" alt=\"Código 67\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=67'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5y5q8ZBpG0/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5y5q8ZBpG0/media/\" alt=\"Código 68\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=68'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B50JVNvBjFC/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B50JVNvBjFC/media/\" alt=\"Código 69\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=69'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B520LFAhQtD/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B520LFAhQtD/media/\" alt=\"Código 70\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=70'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B56aHrfp-kl/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B56aHrfp-kl/media/\" alt=\"Código 71\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=71'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B586rlxhZ3B/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B586rlxhZ3B/media/\" alt=\"Código 72\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=72'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5_FZtJhvuz/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5_FZtJhvuz/media/\" alt=\"Código 73\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=73'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6BrDyHJqCG/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6BrDyHJqCG/media/\" alt=\"Código 74\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=74'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6Ex6g0pmdo/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6Ex6g0pmdo/media/\" alt=\"Código 75\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=75'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6HfoEuB7we/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6HfoEuB7we/media/\" alt=\"Código 76\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=76'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6Jfzu2h3pS/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6Jfzu2h3pS/media/\" alt=\"Código 77\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=77'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6MmgeQhsFR/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6MmgeQhsFR/media/\" alt=\"Código 78\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=78'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6POxKHh3N3/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6POxKHh3N3/media/\" alt=\"Código 79\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=79'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6RklevhyUh/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6RklevhyUh/media/\" alt=\"Código 80\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=80'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6USxbGBn1g/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6USxbGBn1g/media/\" alt=\"Código 81\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=81'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6XPKsehypd/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6XPKsehypd/media/\" alt=\"Código 82\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=82'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6ZIL1DJe7m/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6ZIL1DJe7m/media/\" alt=\"Código 83\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=83'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6cSZCRJLuE/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6cSZCRJLuE/media/\" alt=\"Código 84\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=84'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6efqVPhTRE/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6efqVPhTRE/media/\" alt=\"Código 85\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=85'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6hQvbYBzyi/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6hQvbYBzyi/media/\" alt=\"Código 86\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=86'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6jZwoohSwP/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6jZwoohSwP/media/\" alt=\"Código 87\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=87'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6mUUCsB6zd/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6mUUCsB6zd/media/\" alt=\"Código 88\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=88'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6pg3Q2hfqZ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6pg3Q2hfqZ/media/\" alt=\"Código 89\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=89'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6sDJ1GhvBN/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6sDJ1GhvBN/media/\" alt=\"Código 90\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=90'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6uaee1Be9Q/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6uaee1Be9Q/media/\" alt=\"Código 91\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=91'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6wHXw0psST/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6wHXw0psST/media/\" alt=\"Código 92\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=92'\" /></a></li>\n</ul>\n\n## Monólogo na caminhada\n\nAproveitei, para fazer monólogos rápidos durante a caminhada, que ficava mais dificil de raciocinar. Foi um desafio interessante.\n\n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B40oRkygfIL/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B40oRkygfIL/media/\" alt=\"Monólogo na caminhada 01\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4-0fYxgESj/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4-0fYxgESj/media/\" alt=\"Monólogo na caminhada 02\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5L89BSgS1i/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5L89BSgS1i/media/\" alt=\"Monólogo na caminhada 03\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5sd2qEB8Jv/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5sd2qEB8Jv/media/\" alt=\"Monólogo na caminhada 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B55gCtqhwfH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B55gCtqhwfH/media/\" alt=\"Monólogo na caminhada 05\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=05'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6D4gkOJsve/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6D4gkOJsve/media/\" alt=\"Monólogo na caminhada 06\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=06'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6odn6RBmuF/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6odn6RBmuF/media/\" alt=\"Monólogo na caminhada 07\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=07'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B79fJjWhYYH/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B79fJjWhYYH/media/\" alt=\"Monólogo na caminhada 08\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=08'\" /></a></li>\n</ul>\n\n## Sonus et Rhythmus\n\nConsegui registrar as minhas playlists e ter mais conteúdo. \n\n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B43lLoqAkL7/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B43lLoqAkL7/media/\" alt=\"Playlist 01\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B45pYlEAq7U/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B45pYlEAq7U/media/\" alt=\"Playlist 02\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B47YyGjAIHe/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B47YyGjAIHe/media/\" alt=\"Playlist 03\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4-ds3agvXn/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4-ds3agvXn/media/\" alt=\"Playlist 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5AHd17g7Zh/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5AHd17g7Zh/media/\" alt=\"Playlist 05\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=05'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5C4DzpAIkn/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5C4DzpAIkn/media/\" alt=\"Playlist 06\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=06'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5F8lJzAeM8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5F8lJzAeM8/media/\" alt=\"Playlist 07\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=07'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5H4RnEgbd9/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5H4RnEgbd9/media/\" alt=\"Playlist 08\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=08'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5LJ5k_A1-D/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5LJ5k_A1-D/media/\" alt=\"Playlist 09\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=09'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5NuNWFAS37/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5NuNWFAS37/media/\" alt=\"Playlist 10\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=10'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5P0tvggxB_/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5P0tvggxB_/media/\" alt=\"Playlist 11\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=11'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5SVVHIARMi/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5SVVHIARMi/media/\" alt=\"Playlist 12\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=12'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5Utc7qAmov/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5Utc7qAmov/media/\" alt=\"Playlist 13\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=13'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5XlwzFgyp_/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5XlwzFgyp_/media/\" alt=\"Playlist 14\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=14'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5aEPSMANJy/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5aEPSMANJy/media/\" alt=\"Playlist 15\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=15'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5csQUagHOz/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5csQUagHOz/media/\" alt=\"Playlist 16\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=16'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5fYRU0BdPZ/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5fYRU0BdPZ/media/\" alt=\"Playlist 17\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=17'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6ZrQDEpr4M/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6ZrQDEpr4M/media/\" alt=\"Playlist 18\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=18'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6mixKMBhVS/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6mixKMBhVS/media/\" alt=\"Playlist 19\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=19'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6uF94TBBKE/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6uF94TBBKE/media/\" alt=\"Playlist 20\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=20'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B63VMBXh5KV/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B63VMBXh5KV/media/\" alt=\"Playlist 21\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=21'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B76wlvqBNF7/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B76wlvqBNF7/media/\" alt=\"Playlist 22\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=22'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8VEPJDhNGs/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8VEPJDhNGs/media/\" alt=\"Playlist 23\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=23'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CA2WRWUJ3HS/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CA2WRWUJ3HS/media/\" alt=\"Playlist 24\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=24'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CBNcBYlpshm/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CBNcBYlpshm/media/\" alt=\"Playlist 25\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=25'\" /></a></li>\n</ul>\n\n## IHMO Movies\n\nNão poderia deixar de fora a minha paixão pelo mundo cinematográfico. Além de registrar no meu **Instagram**, consegui gerar conteúdo semanalmente para o **Youtube**. Os vídeos podem ser vistos [aqui](/videos).\n\n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B4yaNwugEBA/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B4yaNwugEBA/media/\" alt=\"IMHO Movies 01\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5D_Wumg_Pl/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5D_Wumg_Pl/media/\" alt=\"IMHO Movies 02\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5WkxyoATiU/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5WkxyoATiU/media/\" alt=\"IMHO Movies 03\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B5ppb8uhdNj/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B5ppb8uhdNj/media/\" alt=\"IMHO Movies 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B542jlgJOGl/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B542jlgJOGl/media/\" alt=\"IMHO Movies 05\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=05'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6OLNOBh0q3/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6OLNOBh0q3/media/\" alt=\"IMHO Movies 06\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=06'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6gTHWYhBhX/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6gTHWYhBhX/media/\" alt=\"IMHO Movies 07\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=07'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B6vqpatpfJw/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B6vqpatpfJw/media/\" alt=\"IMHO Movies 08\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=08'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B7COZ_UBA1z/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B7COZ_UBA1z/media/\" alt=\"IMHO Movies 09\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=09'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B7S3z9NBEU2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B7S3z9NBEU2/media/\" alt=\"IMHO Movies 10\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=10'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B7oW92nh-8U/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B7oW92nh-8U/media/\" alt=\"IMHO Movies 11\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=11'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B731CsMBVIz/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B731CsMBVIz/media/\" alt=\"IMHO Movies 12\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=12'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8MVJLqhDx4/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8MVJLqhDx4/media/\" alt=\"IMHO Movies 13\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=13'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8b9DoGBj4U/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8b9DoGBj4U/media/\" alt=\"IMHO Movies 14\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=14'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8tUATIBnlT/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8tUATIBnlT/media/\" alt=\"IMHO Movies 15\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=15'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8_abVjhv-J/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8_abVjhv-J/media/\" alt=\"IMHO Movies 16\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=16'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B9RzMfaJiqd/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B9RzMfaJiqd/media/\" alt=\"IMHO Movies 17\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=17'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B9mSL6QJc9v/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B9mSL6QJc9v/media/\" alt=\"IMHO Movies 18\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=18'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B92ypJgpSqk/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B92ypJgpSqk/media/\" alt=\"IMHO Movies 19\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=19'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B-NcDmlJJj1/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B-NcDmlJJj1/media/\" alt=\"IMHO Movies 20\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=20'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B-gBDFwpeY8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B-gBDFwpeY8/media/\" alt=\"IMHO Movies 21\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=21'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B-yr1abpbk_/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B-yr1abpbk_/media/\" alt=\"IMHO Movies 22\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=22'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B_ENAGSpCL2/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B_ENAGSpCL2/media/\" alt=\"IMHO Movies 23\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=23'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B_Uqy1RJHL8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B_Uqy1RJHL8/media/\" alt=\"IMHO Movies 24\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=24'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B_oCQlgpuX8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B_oCQlgpuX8/media/\" alt=\"IMHO Movies 25\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=25'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B_6bfs3pHiW/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B_6bfs3pHiW/media/\" alt=\"IMHO Movies 26\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=26'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CAJ-c-2Jx5m/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CAJ-c-2Jx5m/media/\" alt=\"IMHO Movies 27\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=27'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CAcV2afpZ6o/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CAcV2afpZ6o/media/\" alt=\"IMHO Movies 28\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=28'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CAwa1QNpbFB/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CAwa1QNpbFB/media/\" alt=\"IMHO Movies 29\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=29'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CBAZnBPJnbM/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CBAZnBPJnbM/media/\" alt=\"IMHO Movies 30\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=30'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/CBSinCUJnve/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/CBSinCUJnve/media/\" alt=\"IMHO Movies 31\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=31'\" /></a></li>\n</ul>\n\n## Jornada Relevante\n\nÉ preciso ter um bom momento para relaxar e conhecer novos lugares. Para encerrar esse ano de desafios, tinha que ter essa viagem, para fechar com chave de ouro. \n\n<ul class=\"images\">\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B7oVeTyh9o8/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B7oVeTyh9o8/media/\" alt=\"Jornada Relevante 01\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=01'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B7ohMRGBR4T/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B7ohMRGBR4T/media/\" alt=\"Jornada Relevante 02\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=02'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B75_e0OBZqE/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B75_e0OBZqE/media/\" alt=\"Jornada Relevante 03\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=03'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B78_-zOh3Rn/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B78_-zOh3Rn/media/\" alt=\"Jornada Relevante 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B79r56Dhy1p/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B79r56Dhy1p/media/\" alt=\"Jornada Relevante 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n<li class=\"loader\"><a href=\"https://www.instagram.com/p/B8BraclhGnd/\"><img class=\"lazy\" src=\"/assets/img/site/global/transparent.png\" data-src=\"https://www.instagram.com/p/B8BraclhGnd/media/\" alt=\"Jornada Relevante 04\" width=\"80\" height=\"80\" onerror=\"this.src='https:\\/\\/via.placeholder.com/80x80.png/333/fff?text=04'\" /></a></li>\n</ul>\n\n## Considerações finais\n\nForam 9 dias no nordeste, dessa vez só no **Recife**, mas consegui dar um pulo em **Alagoas**, para conhecer **Maragogi**. No dia 22 de janeiro de 2020, tendo voltado de viagem no dia anterior, estava me encontrando no final do ano dos desafios. \n\nA grana já estava no fim, afinal, uma hora ela acaba. O planejamento foi para 1 ano e uma hora chegamos na reta final. \n\nEntão, fiquei reservado em casa para não ter mais custos e esperar a volta para o mercado de trabalho. Fui tocando algumas coisas e analisando vagas. Fui deixando para março, pois a ideia era completar 1 ano. Na minha cabeça, não teria mais oportunidade ou não queria mais fazer isso novamente.\n\nPor mais que você tire um tempo para você, coloque planos e objetivos, sempre se trabalha com a incerteza, pois aqui, ninguém tem renda infinita ou alguém para bancar. Podemos dizer também, que nem sempre o melhor para você, também fará bem para a sua imagem profissional.\n\nAs pessoas desenvolvedoras tem uma visão, as empresas tem uma visão e as pessoas de RH tem uma visão. \n\nComo desenvolvedor e criador de conteúdo, estou sempre evoluindo, mas ainda temos visões engessadas na área de tecnologia. Um tempo para você, pode somar para uns, mas pode ser motivo de desconfiança para outros.\n\nEntão, as incertezas são muito grandes. Gosto de ser modesto, mas se me falarem que tenho coragem, pode ser que eu concorde. Afinal, não consigo dizer claramente de onde vem essa determinação. As vezes penso nisso e uma resposta seria que não tenho medo de trabalhar.\n\nJá fiz muitas coisas nessa vida. Não tenho receio de trabalhar como jardineiro, pedreiro e mais. Talvez, seja isso, o baixo custo de vida e não ter dependentes que possibilitam a minha \"**coragem**\".\n\n## Conclusão\n\nNo dia 01 de abril de 2020, estava começando em uma nova empresa e assim se encerrou o ano de desafios. A história após esse dia, continua em um próximo artigo pessoal.\n\nCom esses 2 artigos, temos um resumo dos meus últimos 5 anos. \n\nSe chegou até aqui, espero que essa história real te acrescente em algo. É interessante escrever sem saber como será o dia de amanhã e se nossos objetivos serão alcançados. Foi muito bom rever o artigo que escrevi há 4 anos e estar escrevendo um novo artigo pessoal, hoje.\n\nDei um pequeno azar em ficar 92 dias em uma correria insana, depois mais 54 dias em uma quarentena voluntária para poupar dinheiro e desde o dia 15.03.2020, em quarentena por causa da **covid-19**. Para tirar um tempo para você, é preciso ter coragem. Não sabemos o dia de amanhã e as coincidências podem ser bizarras.\n\nEspero que se tenha mais um artigo com a continuação dessa história. Até a próxima.\n","categories":["personal"]},{"title":"Começando com Vue","url":"/hemersonvianna/artigos/vue/comecando-com-vue/","content":"\nQuando se trata de front-end, temos muitas bibliotecas e frameworks no mercado. Temos 3 frameworks/bobliotecas(React, Angular e Vue), cuja a comunidade vem crescendo e se fortalecendo nos últimos anos. Dos 3, tive menos contato com o **VueJS**, que é o tema desse artigo.\n\nPor traz da criação do framework, temos [Evan You](https://twitter.com/youyuxi), que iniciou o projeto quando estava trabalhando na empresa **Google**, em 2013. Acredito que a primeira coisa que vem à sua cabeça, é o **AngularJS**. Pois bem, ele usou bastante o **AngularJS** e estava entre os engenheiros da **Google**, na época do **AngularJS** 1.x. \n\nEm seu antigo blog, ele escreveu um artigo com uma [reintrodução ao VueJS](https://blog.evanyou.me/2015/10/25/vuejs-re-introduction/), em 2015. Nesse artigo, ele buscava explicar os motivos para ser usar e estudar mais sobre o **VueJS**, sendo que nessa época, já haviam várias opções de bibliotecas e frameworks. Ele também postou o artigo no [medium](https://medium.com/@youyuxi/vue-js-a-re-introduction-ed159414a1be). \n\nAgora vamos voltar um pouquinho e seguir a cronologia.\n\n## Releases\n\nO **VueJS** foi lançado em fevereiro de 2014, com o release **Animatrix**. A versão **v2.6.0**, foi lançada em fevereiro deste ano e no momento temos a versão **v2.6.10**, que foi lançada em 20 de março. Particularmente, gosto muito da consistência dos releases do **VueJS**.\n\nIrei até pesquisar sobre o intervalo que teve em 2018, mas já olhando o repositório, a preocupação foi apenas com as versões de correção(PATCH) do **v2.5.0**. Por alto e sem muito conhecimento da rotina de manutenção do framework, me parece bem sólido o lançamento das versões com novas funcionalidades(MINOR).\n\nBasicamente, se tem o processo de lançamento, foco nas correções e logo após o estudo com as versões beta para um próximo release. (Processo bem óbvio, mas é bonito de se ver)\n\nAcho bem interessante a trajetória do framework, em relação a questão de releases e ver que a versão **2.x.x** (MAJOR), está sendo sustentada desde 2016. Traz uma segurança. :)\n\nAté o momento, temos os seguintes releases:\n\n- 08/12/2013 - [v0.6.0: VueJS](https://github.com/vuejs/vue/releases/tag/v0.6.0)\n- 08/12/2013 - [v0.7.0](https://github.com/vuejs/vue/releases/tag/v0.7.0)\n- 08/12/2013 - [v0.8.0](https://github.com/vuejs/vue/releases/tag/v0.8.0)\n- 25/02/2014 - [v.0.9.0: Animatrix](https://github.com/vuejs/vue/releases/tag/v0.9.0) `Lançamento do VueJS`\n- 23/03/2014 - [v0.10.0: Blade Runner](https://github.com/vuejs/vue/releases/tag/v0.10.0)\n- 07/11/2014 - [v0.11.0: Cowboy Bebop](https://github.com/vuejs/vue/releases/tag/v0.11.0)\n- 12/06/2015 - [v0.12.0: Dragon Ball](https://github.com/vuejs/vue/releases/tag/v0.12.0)\n- 25/10/2015 - [v1.0.0: Evangelion](https://github.com/vuejs/vue/releases/tag/v1.0.0)\n- 30/09/2016 - [v2.0.0: Ghost in the Shell](https://github.com/vuejs/vue/releases/tag/v2.0.0)\n- 22/11/2016 - [v2.1.0: Hunter X Hunter](https://github.com/vuejs/vue/releases/tag/v2.1.0)\n- 26/02/2017 - [v2.2.0: Initial D](https://github.com/vuejs/vue/releases/tag/v2.2.0)\n- 27/04/2017 - [v2.3.0: JoJo's Bizarre Adventure](https://github.com/vuejs/vue/releases/tag/v2.3.0)\n- 13/07/2017 - [v2.4.0: Kill la Kill](https://github.com/vuejs/vue/releases/tag/v2.4.0)\n- 13/10/2017 - [v2.5.0: Level E](https://github.com/vuejs/vue/releases/tag/v2.5.0)\n- 04/02/2019 - [v2.6.0: Macross](https://github.com/vuejs/vue/releases/tag/v2.6.0)\n\nNo blog atual do **Evan You**, temos o destaque para as versões:\n\n- [Vue 2.0 is Here!](https://medium.com/the-vue-point/vue-2-0-is-here-ef1f26acf4b8#.vh9f94s2m)\n- [Vue 2.5 released](https://medium.com/the-vue-point/vue-2-5-released-14bd65bf030b)\n- [Vue 2.6 released](https://medium.com/the-vue-point/vue-2-6-released-66aa6c8e785e)\n\n## Sobre o framework\n\no **Vue** deperta o meu interesse devido a alguns pontos que já estou acostumado com o **React**:\n\n- utiliza a abordagem de DOM virtual.\n- provê componentes visuais reativos e combináveis.\n- mantêm o foco na biblioteca principal, com preocupações como roteamento e gerenciamento de estado global tratadas por bibliotecas companheiras.\n- entre outras vantagens que podem ser vistas nesse [comparativo](https://br.vuejs.org/v2/guide/comparison.html#React)\n\n### Mais algumas vantagens\n\n**Simplicidade** <br>\nA idéia básica por trás do desenvolvimento com Vue é obter bons resultados com o mínimo de esforço possível. Ter o armazenamento de todos os códigos de um componente, como **HTML**, **CSS** e **JavaScript**, em um único arquivo.\n\n**Integração** <br>\nOs desenvolvedores podem integrar o Vue a outras estruturas, como o React, permitindo que eles personalizem o projeto de acordo com seus respectivos requisitos.\n\n**Fácil aprendizado** <br>\nDe acordo com vários especialistas, o Vue não requer uma grande curva de aprendizado, o que é benéfico para novos desenvolvedores. Requer apenas que os desenvolvedores conheçam os fundamentos de JavaScript, HTML e CSS, que é diferente de outras bibliotecas/frameworks, onde linguagens de programação adicionais são necessárias para codificação avançada.\n\n**Documentação** <br>\nDocumentação extensa e detalhada que torna rápido e fácil de aprender. Ele permite que um desenvolvedor inexperiente, com apenas um conhecimento básico de HTML e JavaScript, desenvolva um aplicativo. \n\n**Flexibilidade** <br>\nO framework Vue não é opinativo, você pode projetar a estrutura do aplicativo do jeito que você quer que seja.\n\n**Suporte ao TypeScript** <br>\nO Vue tem um suporte nativo para o TypeScript.\n\n**Vue CLI 3** <br>\nInterface gráfica, suporte a plug-ins, prototipagem instantânea e uma configuração muito fácil do Webpack.\n\n**Devtools no navegador** <br>\nPermitindo que os desenvolvedores verifiquem o estado atual do Vuex, componentes, views, alterem manualmente dados específicos ou até mesmo analisem mais profundamente os eventos. \n\n### Algumas desvantagens\n\n**Falta de suporte para grandes projetos** <br>\nA equipe de desenvolvimento do **Vue** é pequena, o que significa que o framework precisará de algum tempo para obter suporte corporativo. Desde de 2018, o desenvolvimento do framework não está atrelado ao interesse das empresas. Sendo assim, mudanças na estrutura existente dependem principalmente do feedback dos membros da comunidade.\n\n**Falta de Plugins** <br>\nO **Vue** ainda não tem o amplo apoio de seus colegas frameworks, já que não é tão popular quanto **React** ou **Angular**. Existem muito mais recursos para o **React** do que o **Vue**.\n\n**Muita flexibilidade pode ser problemática** <br>\nÀs vezes, a flexibilidade pode causar alguns problemas para os desenvolvedores. Mas a variedade de opções do **Vue** pode se tornar um fardo quando implementada em projetos maiores que envolvem muitos desenvolvedores.\n\nO pensamento final é que o **VueJS** tem poucas desvantagens em comparação com outros frameworks. Como tem que ser, a questão é fazer uma análise completa do que a tecnologia pode oferecer e o que o seu projeto precisa.\n\n## Aplicações Móveis\n\nSe fosse para o **React**, a resposta seria rápida. Para o **Vue**, se tem 2 opções:\n\n- [Native Script](https://docs.nativescript.org/vuejs/nativescript-vuejs) - NativeScript é um framework open source para construção de aplicativos móveis nativos usando JavaScript. Também é possivel saber mais com essa [documentação do NativeScript-Vue](https://nativescript-vue.org/pt-br/docs/introduction/).\n- [Weex](https://weex.apache.org/guide/use-vue-in-weex.html) - é um projeto criado pelo gigante chinês do comércio eletrônico, Alibaba. Com ele é possível produzir aplicações para web (html5), Android e iOS a partir da mesma base de código.\n\n## Ferramentas\n\n### CLI\n\nTemos o CLI (command line interface) do **VueJS**, para criar a estrutura básica com o framework.\n\n```\nnpm install -g @vue/cli\n# ou\nyarn global add @vue/cli\n```\n\nTem a [documentação](https://cli.vuejs.org/) completa que você pode conferir. Também pode ter acesso à organização com os [templates](https://github.com/vuejs-templates).\n\n### Loader\n\nCom o **Vue Loader**, você pode criar componentes do **Vue**, no formato SFC (Vue Single-File Component). Que seria um arquivo `*.vue`, que usa a sintaxe semelhante ao do HTML para descrever um componente do Vue. Cada arquivo é composto por três tipos de blocos de linguagem: `<template>`, `<script>` e `<style>`, e blocos personalizados opcionalmente adicionais. Exemplo:\n\n```\n<template>\n  <div class=\"example\">{{ msg }}</div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      msg: 'Hello world!'\n    }\n  }\n}\n</script>\n\n<style>\n.example {\n  color: red;\n}\n</style>\n\n<custom1>\n  This could be e.g. documentation for the component.\n</custom1>\n```\n\nConfere a [documentação](https://vue-loader.vuejs.org/) completa para saber mais.\n\n### Devtools\n\nEstou muito acostumando a debugar em alguns navegadores com **React**, mas com o **Vue** também é possível. Dá uma olhada no [projeto](https://github.com/vuejs/vue-devtools).\n\n## Bibliotecas oficiais\n\n### Vue router\n\nPara a questão de roteamento com o **Vue**, você precisa do **Vue Router**. Ele se integra ao núcleo do **Vue** para facilitar a criação de uma SPA e tem as seguintes características:\n\n- Mapeamento de rota/visualização aninhada\n- Configuração de roteador modular baseada em componente\n- Parâmetros de rota, de consulta, wildcard (curinga, ex: \"*\")\n- Efeitos de transição de **views** ativados pelo sistema de transição do Vue\n- Controle de navegação refinado\n- Links com classes CSS ativas automáticas\n- Modo de histórico HTML5 ou modo hash, com fallback automático no IE9\n- Comportamento de rolagem personalizável\n\nVeja mais na [documentação](http://router.vuejs.org/) oficial.\n\n### Vuex\n\nO **Vue** tem essa biblioteca, que tamém é um padrão de gerenciamento de estado para as aplicações com o framework. Ele centraliza o armazenamento de todos os componentes de uma aplicação, contendo regras com o intuito de garantir que o estado só possa ser modificado de maneira previsível.\n\nEssa biblioteca merece um artigo só sobre o assunto, mas por enquanto pode dar uma olhada na [documentação](http://vuex.vuejs.org/) oficial.\n\n### Vue Server Renderer\n\nFaz um bom tempo que o desenvolvedor front-end, tem se preocupado não apenas com o lado do cliente. A preocupação com SEO, performance, consumo de CPU e outros assuntos que o lado do servidor resolve melhor, tem sido os motivos para o **NodeJS**, ser a plataforma da esperança.\n\nRenderizar pelo lado do servidor, cada vez mais se mostra uma coisa primordial no desenvolvimento front-end. Assim, nos dias de hoje, temos um aumento na designação de desemvolvedor full-stack. Pra quem é da época do **Web designer** e **Web master**, como eu, não liga muito para rótulos.\n\nO fato é que as camadas no desenvolvimento de uma aplicaçao tem ficado cada vez mais próximas na questão da mão de obra. A [documentação](https://ssr.vuejs.org/) oficial dessa biblioteca está disponível para você saber mais sobre usar o **Vue**, no lado do servidor.\n\n## Considerações finais\n\nDepois de muitas estratégias de estudo, agora busco ter alguns padrões para estudar sobre alguma tecnologia. Com a combinação de artigos e repositórios no github, tento consolidar o conhecimento.\n\nNo caso do **VueJS**, tenho o repositório [Knowledge VueJS](https://github.com/org-victorinox/knowledge-vuejs), onde guardo os links de artigos, videos e projetos sobre o assunto. Também tem o repositório [Prime VueJS](https://github.com/org-victorinox/prime-vuejs), onde testo uma estrutura SPA básica com o framework.\n\nNessa estratégia de conhecimento sobre o framework, falta mais um repositório utilizando mais recursos SPA (Single Page Application) e SSR (Server Side Rendering). Quando o mesmo estiver pronto, atualizo esse artigo.\n\nNos próximos artigos sobre **Vue**, vamos conhecer mais sobre o framework e levantar mais questões para a sua utilização e comparativo com outros frameworks/bibliotecas do mercado. Enquanto isso, você pode conferir a [documentação](https://br.vuejs.org/) oficial.\n","categories":["vue"]},{"title":"UI Grid - Sistemas e bibliotecas","url":"/hemersonvianna/artigos/front-end/ui-grid-sistemas-e-bibliotecas/","content":"\nNos últimos 8 anos, os sistemas de grid CSS vem ganhando destaque pela atenção que o layout responsivo tem recebido. E estou estimando esse tempo, com base na data de lançamento do twitter boostrap (19 de agosto de 2011). Essa seria a minha referência, em relação ao início forte de discussões sobre boas práticas para layout responsivo, frameworks e bibliotecas para esse fim. \n\n## Sistema de grid\n\nO sistema de grid é uma estrutura que permite o alinhamento de elementos da página com base em colunas e linhas sequenciadas. \n\nO formato com 12 colunas tem sido o mais utilizado, por causa da flexibilidade proporcionada e por ser capaz de dividir o layout uniformemente. Na divisão por 2, 3 e 4, temos uma serie de modulações disponíveis (2x6 , 3x4) e várias outras combinações.\n\nO número de colunas pode variar dependendo do projeto. Quanto maior o número de colunas, (por exemplo, 16 ou 24) maior a quantidade de possibilidades para divisão.\n\n[960 Grid System](https://960.gs/), considerado o rei do **grid** por muitos anos, tem a seguinte estrutura:\n\n- Largura total de 960px.\n- 12 colunas\n  - Largura de 60px em cada coluna.\n  - Cada coluna tem 10px de margem esquerda e direita. Sendo 20px de espaço entre as colunas.\n  - A área total do conteúdo é de 940px.\n- 16 colunas\n  - largura de 40px em cada coluna.\n  - Cada coluna tem 10px de margem esquerda e direita. Sendo 20px de espaço entre as colunas.\n  - A área total do conteúdo é de 940px.\n- 24 colunas\n  - largura de 30px em cada coluna.\n  - Cada coluna tem 5px de margem esquerda e direita. Sendo 10px de espaço entre as colunas.\n  - A área total do conteúdo é de 950px.\n\nUma das principais razões para a popularidade do **960 Grid** com os designers é a sua flexibilidade. Os designers podem usar uma ampla gama de colunas, com o número máximo de 24.\n\nFuncionou muito bem no começo e ainda funciona até hoje, porque a maioria dos projetos tem o tamanho de fonte definido em 12px. De uns anos para cá, que a maioria dos layouts estão sendo definidos com tamanho de fonte de 13px ou superior.\n\nComo o tamanho da fonte aumentou, é necessário aumentar a área de conteúdo e ajustar o espaço entre as colunas. Com a evolução das boas práticas na experiência do usuário e uma variedade de novos dispositivos, o sistema de grid foi ganhando uma infinidade de variações. Ex: O **Bootstrap**, acima de 960px, usa a largura de 1140px para área de conteúdo no tamanho **wide**.\n\nSendo encontrado com facilidade na internet, os sistemas mais comuns. Lembrando que o projeto terá uma necessidade e o sistema poderá ser livremente customizado.\n\n## Levando o layout CSS ao próximo nível\n\nQuem já trabalha com layout CSS, há muitos anos, já deve ter visto muito `float: *`, `display: table`, `display: inline-block`, para montar uma grade na estrutura ou em um simples menu. Desde 2015, o suporte dos navegadores mais relevantes para o **Flexbox**, tem sido excelente. O **CSS Grid**, tem sido bem recebido pelo navegadores, desde 2017. É claro que não considero o **IE**, para falar de suporte as novas tecnologias, mas o suporte a esse layout que tem feito muitos desenvolvedores felizes, já passa de 90%. Agora, vamos falar mais sobre essa flexibilidade que temos no **CSS**.\n\nO **Flexbox**, foi projetado como um modelo de layout **unidimensional** e método que pode oferecer distribuição de espaço entre itens numa interface e capacidade de alinhamento. Ele também pode ser usado para trabalhar elementos de forma **bidimensional**, mas o flexbox opera melhor quando trabalhado com os itens em apenas uma dimensão, ou seja, em coluna ou linha.\n\nJá o **CSS Grid**, tem o modelo **bidimensional**, que controla ao mesmo tempo as colunas e linhas. Você pode indicar o ponto em que um elemento começa e acaba dentro da sua grid, o que proporciona muita flexibilidade. \n\n**CSS Grid** é principalmente definido no elemento pai. No **flexbox**, fora o básico, a maior parte do layout é aplicado nos elementos filhos. \n\nO intuito do artigo, não é me aprofundar muito em cada assunto sobre como montar a sua grade, e sim, apenas apresentar os sistemas e ferramentas para o mesmo. O mais importante é deixar claro que um não substitui o outro. Podem ser usado tranquilamente juntos e em próximo artigos, darei mais exemplos dessa combinação.\n\nAbaixo podemos brincar, conhecer e praticar com **Flexbox** e **CSS Grid**.\n\n- [Flexbox Froggy](https://flexboxfroggy.com/)\n- [CSS Grid Garden](https://cssgridgarden.com/)\n\n## Bibliotecas\n\nFiz um compilado das ferramentas que podem nos ajudar e inspirar no desenvolvimento e montagem da grade para os nossos projetos.\n\n### Pré-processadores e CSS\n\n#### Flexbox\n\n- **Flexbox Grid** - [http://flexboxgrid.com/](http://flexboxgrid.com/)\n- **Bootstrap Grid** - [https://getbootstrap.com/docs/4.0/layout/grid/](https://getbootstrap.com/docs/4.0/layout/grid/)\n- **Bulma** - [https://bulma.io/](https://bulma.io/)\n- **Waffle Grid** - [https://lucasgruwez.github.io/waffle-grid](https://lucasgruwez.github.io/waffle-grid)\n- **Basscss** - [https://basscss.com/](https://basscss.com/)\n- **Pure** - [https://purecss.io/grids/](https://purecss.io/grids/)\n- **Milligram** - [https://milligram.io/grids.html](https://milligram.io/grids.html)\n- **GRD** - [https://github.com/1000ch/grd](https://github.com/1000ch/grd)\n- **Gridlex** - [https://github.com/devlint/gridlex](https://github.com/devlint/gridlex)\n- **Gridly** - [https://github.com/IonicaBizau/gridly](https://github.com/IonicaBizau/gridly)\n- **Blueprint CSS** - [https://blueprintcss.dev/](https://blueprintcss.dev/)\n- **Structure** - [https://github.com/kenwheeler/structure](https://github.com/kenwheeler/structure)\n- **Picnic CSS** - [https://github.com/franciscop/picnic](https://github.com/franciscop/picnic)\n\n#### CSS Grid\n\n- **CSS grid 12 column layout** - [https://github.com/erikmonjas/css-grid-12-column-layout](https://github.com/erikmonjas/css-grid-12-column-layout)\n- **Griddy.css** - [https://github.com/balapa/griddy.css](https://github.com/balapa/griddy.css)\n\n#### Outros sistemas\n\n- **Semantic UI** - [https://semantic-ui.com/collections/grid.html](https://semantic-ui.com/collections/grid.html)\n- **csswizardry-grids** - [https://github.com/csswizardry/csswizardry-grids](https://github.com/csswizardry/csswizardry-grids)\n- **Jeet Grid** - [https://github.com/mojotech/jeet](https://github.com/mojotech/jeet)\n- **Lost Grid** - [https://github.com/peterramsing/lost](https://github.com/peterramsing/lost)\n- **Toast** - [https://github.com/daneden/Toast](https://github.com/daneden/Toast)\n- **Neat** - [https://github.com/thoughtbot/neat](https://github.com/thoughtbot/neat)\n- **Msdotcom/WinJS Grid Framework** - [https://github.com/winjs/grid/](https://github.com/winjs/grid/)\n- **Skeleton** - [https://github.com/dhg/Skeleton](https://github.com/dhg/Skeleton)\n- **Crow** - [https://github.com/kkortes/crow](https://github.com/kkortes/crow)\n- **Simple Grid** - [https://github.com/zachacole/Simple-Grid](https://github.com/zachacole/Simple-Grid)\n- **Pills** - [http://arkpod.in/pills/](http://arkpod.in/pills/)\n- **Spacegrid** - [https://github.com/JonathanSpeek/spacegrid](https://github.com/JonathanSpeek/spacegrid)\n\n### Angular, React e Vue\n\n- **Angular UI Grid** - [http://ui-grid.info/](http://ui-grid.info/)\n- **React Material-UI Grid** - [https://material-ui.com/components/grid/](https://material-ui.com/components/grid/)\n- **React Grid Layout** - [https://github.com/STRML/react-grid-layout](https://github.com/STRML/react-grid-layout)\n- **Rebass Grid** - [https://rebassjs.org/grid/](https://rebassjs.org/grid/)\n\n### JavaScript\n\n- **Muuri** - [https://github.com/haltu/muuri](https://github.com/haltu/muuri)\n- **Masonry** - [https://github.com/desandro/masonry](https://github.com/desandro/masonry)\n\n### Design/UX/UI\n\n- **KK UI Store's - Grid System Library** - [https://grid.kkuistore.com/](https://grid.kkuistore.com/)\n\n### Bônus\n\nComo bônus, deixo uma biblioteca que posibilita a utilização de 3 sistemas de grid (flexbox, CSS Grid e Flexbox Masonry Grid. Escrito em SCSS e disponível em SCSS e CSS.\n\n- [CSS Grid Library](https://github.com/CodyReeves/css-grid-system-library)\n\n## Considerações finais\n\nMontar uma grade no projeto sempre gerou dúvidas entre leigos, designers e desenvolvedores front-end. Citei o **960 GS**, por ser um exemplo de que esse assunto precisou de um **norte** para quem não tinha muita experiência ou estipular um padrão. \n\nA única coisa certa, é que temos uma evolução e maior suporte em relação ao assunto de **layout CSS** na última década. Vale o estudo na parte de elaboração do projeto, quanto ao melhor sistema que deixará o desenvolvimento do mesmo mais flexivel e de acordo com a área de interface e desenvolvimento.\n\nNa minha opinião, antes de qualquer coisa relacionada ao desenvolvimento web, é necessário definir quais são os navegadores que o seu projeto dará suporte. Assim, diminuindo as preocupações na fase de desenvolvimento e é claro, quando o produto estiver em produção.\n","categories":["front-end"]},{"title":"React - Hooks","url":"/hemersonvianna/artigos/react/react-hooks/","content":"\nA versão [16.8.0](https://github.com/facebook/react/releases/tag/v16.8.0), é o primeiro **release** que traz suporte estável aos **Hooks**. Com isso, simplificando a vida de programadores e curiosos. Permitindo o uso de estado e outros recursos da biblioteca sem escrever uma classe.\n\n## Regras dos Hooks\n\n- Apenas chame os Hooks **no nível mais alto**. Não chame Hooks dentro de **loops**, **condicionais** ou **funções aninhadas**. O React identifica os hooks de um componente pela ordem em que eles foram chamados.\n- Apenas chame os Hooks em **componentes funcionais**. Não chame Hooks em funções **JavaScript** comuns. (Há apenas um outro lugar válido para se chamar Hooks — dentro dos seus próprios Hooks customizados.)\n\nConfira o link para o [plugin do eslint](https://www.npmjs.com/package/eslint-plugin-react-hooks), para que as regras sejam revisadas automaticamente.\n\n## Tipos de Hooks\n\n- [Hook de estados](https://reactjs.org/docs/hooks-state.html) - **useState** - permite ler e armazenas as informações de maneira mais fácil e prática no estado, eliminando alguns componentes de classes e substituindo por componentes funcionais.\n- [Hook de efeitos](https://reactjs.org/docs/hooks-effect.html) - **useEffect** - utilizado para executar funções que necessitam ou realizam algum efeito no componente. Ex: **mutations**, **subscriptions**, **timers** e **logging**. Tem o mesmo efeito que os **componentDidMount** e **componentDidUpdate** tem nas classes.\n- [Hook customizado](https://reactjs.org/docs/hooks-custom.html) - Crie seus próprios **hooks** e extraia a lógica de um componente em funções reutilizáveis.\n- [Outros Hooks](https://reactjs.org/docs/hooks-reference.html) - Hooks nativos com funções específicas.\n\nOs Hooks existentes podem ser classificados como básicos e adicionais. Veja a lista abaixo:\n\n**Hooks básicos:**\n  - [useState](https://pt-br.reactjs.org/docs/hooks-reference.html#usestate)\n  - [useEffect](https://pt-br.reactjs.org/docs/hooks-reference.html#useeffect)\n  - [useContext](https://pt-br.reactjs.org/docs/hooks-reference.html#usecontext)\n\n**Hooks adicionais:**\n\n- [useReducer](https://pt-br.reactjs.org/docs/hooks-reference.html#usereducer)\n- [useCallback](https://pt-br.reactjs.org/docs/hooks-reference.html#usecallback)\n- [useMemo](https://pt-br.reactjs.org/docs/hooks-reference.html#usememo)\n- [useRef](https://pt-br.reactjs.org/docs/hooks-reference.html#useref)\n- [useImperativeMethods](https://pt-br.reactjs.org/docs/hooks-reference.html#useimperativehandle)\n- [useMutationEffect](https://pt-br.reactjs.org/docs/hooks-reference.html#uselayouteffect)\n- [useLayoutEffect](https://pt-br.reactjs.org/docs/hooks-reference.html#usedebugvalue)\n\n## Hook de estados\n\nVamos olhar o hook de estado. Abaixo veremos um exemplo:\n\n```\nimport React, { useState } from 'react'\n \nfunction Counter() {\n  const [count, setCount] = useState(0)\n \n  return (\n    <div>\n      Você clicou {count} vezes!\n      <button onClick={() => setCount(count + 1)}>+1</button>\n    </div>\n  );\n};\n```\n\nO hook nesse caso é o **useState**. Ele está recebendo um estado inicial e retorna um array com dois valores. Sendo o primeiro valor o estado atual e o segundo uma função para atualizar esse estado.\nO **useState** não tem a funcionalidade idêntica ao **setState** que é utilizado em classes. Quando se é passado um objeto para o **setState**, o mesmo combina o valor que estamos passando com o antigo. Já no **useState**, todo o estado do hook será alterado, mas temos o mesmo efeito usando o operador de **spread**. Ex: useState({ ...oldState, ...newState }); .\n\nExemplo de um objeto no estado inicial:\n\n```\nfunction Counter() {\n  const [state, setState] = useState({ nome: '', idade: 0  })\n  ...\n  )\n}\n```\n\nTambém, podemos chamar mais de uma vez o nosso hook **useState** no nosso componente.\n\n```\nfunction Counter() {\n  const [name, setName] = useState('')\n  const [age, setAge] = useState(0)\n  ...\n  )\n}\n```\n\n## Hook de efeitos\n\nAgora vamos falar do hook **useEffect**. O mesmo permite que seu componente em forma de função tenha acesso aos métodos de ciclo de vida sem precisar refatorar seu componente para uma classe. Abaixo, um exemplo:\n\n```\nimport React, { useState, useEffect } from 'react'\n  \nfunction Counter() {\n  const [count, setCount] = useState(0)\n  \n  useEffect(() => {\n    window.document.title = `Você clicou ${count} vezes!`\n  })\n \n  return (\n    <div>\n      Você clicou {count} vezes!\n      <button onClick={() => setCount(count + 1)}>+1</button>\n    </div>\n)}\n```\n\nO título será alterado de acordo com a atualização do estado do componente. O **useEffect** nesse contexto, seria o mesmo que o **ComponentDidMount** e também o **ComponentDidUpdate**. Será chamada a função passada tanto quando o componente é montado quando é atualizado.\n\nO **useEffect** te ajuda ao desmontar os recursos, exatamente como faria com **ComponentWillUnmount**.\n\n```\nfunction Example() {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  \n  useEffect(() => {\n    const mouseMove = e => {\n      setX(e.screenX)\n      setY(e.screenY)\n    }\n\n    document.addEventListener('mousemove', mouseMove);\n    return () => document.removeEventListener('mousemove', mouseMove);\n  })\n \n  return <div>O Mouse esta no {x}, {y}</div>;\n}\n```\n\nAcima temos o evento de **mousemove** configurado para alterar o estado do componente de acordo com o movimento do mouse e quando o componente for desmontado será rodado o **removeEventListener**. Também será chamada quando for detectado que o **useEffect** precisa rodar novamente, ou seja em cada render. A cada alteração no estado do componente nosso evento está sendo removido e adicionado novamente. Agora não queremos isso e precisamos que o evento seja adicionado na montagem e na desmontagem.\n\nVamos utilizar o segundo argumento que o **useEffect** recebe, que é uma lista dos valores que devem mudar para que ele rode novamente. Passando uma lista vazia, ele irá rodar apenas quando é montado e a função de limpeza apenas quando é desmontado.\n\n```\nfunction Example() {\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  \n  useEffect(() => {\n    const mouseMove = e => {\n      setX(e.clientX)\n      setY(e.clientY)\n    }\n\n    document.addEventListener('mousemove', mouseMove);\n    return () => document.removeEventListener('mousemove', mouseMove);\n  }, []) // <-- lista vazia\n \n  return <div> Mouse esta no {x}, {y}</div>;\n}\n```\n\nOs **Event listeners** serão chamados apenas quando precisamos. O segundo parâmetro pode ser utilizado para dizer quando nosso efeito vai rodar. Abaixo, um exemplo:\n\n```\nfunction Status(props) {\n  const [isOnline, setIsOnline] = useState(null);\n \n  useEffect(() => {\n    const handleStatusChange = status => setIsOnline(status.isOnline)\n \n    API.subscribeToUserStatus(props.user.id, handleStatusChange)\n \n    return () => API.unsubscribeFromUserStatus(props.user.id, handleStatusChange)\n \n  }, [props.user.id]) // apenas se desinscreve caso props.friend.id mude\n}\n```\n\nQuando friend.id for alterado, iremos chamar o **unsubscribeFromUserStatus** com id anterior e depois chamar o **subscribeToUserStatus** com id atual, assim temos consistência na limpeza dos recursos de forma simples.\n\n\n## Hook customizado\n\nOs Hooks são totalmente desacoplados de componentes, o que nos permite combiná-los para criar novos hooks mais específicos e compartilhar lógica entre nossos componentes.\n\nComeçaremos com o exemplo abaixo:\n\n```\nimport React, { useState, useEffect } from 'react';\n \nfunction Status(props) {\n  const [isOnline, setIsOnline] = useState(null);\n \n  useEffect(() => {\n    const handleStatusChange = status => status.isOnline\n     \n    API.subscribeToUSerStatus(props.user.id, handleStatusChange)\n \n    return () => API.unsubscribeFromUSerStatus(props.user.id, handleStatusChange)\n    }\n  })\n \n  if (isOnline === null) return 'Loading...';\n  \n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\nTambém vamos precisar de uma lista de contatos e exibir seus respectivos status.\n\n```\nimport React, { useState, useEffect } from 'react';\n \nfunction UserListItem(props) {\n  const [isOnline, setIsOnline] = useState(null);\n \n  useEffect(() => {\n    const handleStatusChange = status => status.isOnline\n \n    ChatAPI.subscribeToUserStatus(props.user.id, handleStatusChange)\n    return () =>  API.unsubscribeFromUserStatus(props.user.id, handleStatusChange)\n  })\n \n  return <li style={{ color: isOnline ? 'green' : 'black' }}>{props.user.name}</li>;\n}\n```\n\nCom isso, temos uma repetição de código. Resolveremos isso, ao extrair a lógica repetida em um hook customizado.\n\n```\nimport React, { useState, useEffect } from 'react';\n \nfunction useUserStatus(userID) {\n  const [isOnline, setIsOnline] = useState(null);\n \n  useEffect(() => {\n    const handleStatusChange = status => status.isOnline\n \n    API.subscribeToUserStatus(userID, handleStatusChange)\n    return () =>  API.unsubscribeFromUserStatus(userID, handleStatusChange)\n  })\n \n  return isOnline;\n}\n```\n\nAgora a lógica que tínhamos em nossos componentes, está em uma função separada (um padrão: que os hooks tenham o prefixo **use**). Abaixo, exemplo da utilização:\n\n```\nfunction UserStatus(props) {\n  const isOnline = useUserStatus(props.user.id)\n \n  if (isOnline === null) return 'Loading...';\n\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n```\nfunction UserListItem(props) {\n  const isOnline = useUserStatus(props.user.id)\n \n  return <li style={{ color: isOnline ? 'green' : 'black' }}>{props.user.name}</li>;\n}\n```\n\nAgora temos uma lógica simplificada. Também é possível criar hooks para lidar com bibliotecas externas:\n\n```\nimport React, { useState, useEffect } from 'react';\n \nconst useObservable = (observable, initialValue) => {\n  const [value, setValue] = useState(initialValue)\n  useEffect(() => {\n    const subscription = observable.subscribe({next: setValue})\n    return () => subscription.unsubscribe()\n  }, [observable])\n  return value\n}\n```\n\nAcima, a cada novo evento no **stream** do **observable** temos uma atualização no estado. Abaixo, um exemplo usando a bilbioteca **RxJS**.\n\n```\nimport React from 'react';\nimport { fromEvent } from 'rxjs';\nimport { map }  from 'rxjs/operators';\nimport { useObservable } from './observableHook';\n \nconst mouseTest = fromEvent(document, 'mousemove').pipe( map(e => [e.clientX, e.clientY]) );\n \nconst App = () => {\n   const [x,y] = useObservable(mouseTest, [0,0]);\n \n   return <div>Mouse x:{x} y:{y}</div>;\n}\n```\n\n## Considerações finais\n\nNão foi falado muito sobre os **Outros Hooks**, mas podemos ver a listagem no ínício deste artigo. Mais sobre os **Hooks**, podem ser vistos na [documentação oficial](https://pt-br.reactjs.org/docs/hooks-intro.html) e em próximos artigos. \n\n\n","categories":["react"]},{"title":"React - Ciclo de vida e context API","url":"/hemersonvianna/artigos/react/react-ciclo-de-vida-e-context-api/","content":"\nNa versão [16.3.0](https://github.com/facebook/react/releases/tag/v16.3.0), que foi lançada em 29 de março de 2018, teve a adição de novos métodos para o ciclo de vida dos componentes e nova API.\n\n## Métodos de ciclo de vida\n\nNo ciclo de vida dos componentes existem métodos para controlarmos o fluxo de montar, atualizar e desmontar cada elemento. E com essa versão do **React**, três métodos estão sendo depreciados: **componentWillMount**, **componentWillReceiveProps**, e **componentWillUpdate**. E foram adicionados dois novos métodos:\n\n- **getDerivedStateFromProps** – adicionado como uma alternativa mais segura do método **componentWillReceiveProps**. Executado tanto na inicialização do componente quanto na sua atualização de propriedades e deve retornar as alterações no estado do componente baseada nas propriedades ou nulo.\n- **getSnapshotBeforeUpdate** – adicionado para oferecer suporte à leitura segura de propriedades. Todo valor retornado por esse método é enviado ao **componentDidUpdate** que é o ciclo executado posteriormente.\n\n## Context API\n\nSempre existiu uma **Context API**, mas era instável e com diversos problemas relacionados à performance. Eu particularmente já usava para uma questão de tema e gostei muito da estabilide que veio nessa versão.\n\nAo compartilhar informações entre componentes totalmente desconexos você terá que utilizar a arquitetura flux com **Redux**. Com a nova **Context API** conseguimos facilmente repassar informações de qualquer tipo entre diversos componentes do **React**.\n\nPrecisaremos ver 3 coisas: **React.createContext**, **Provider** e **Consumer**.\n\nAbaixo, temos o componente filho **Title** e ainda não estamos usando a nova API de contexto.\n\n```\nclass App extends Component {\n  state = {\n    ttile: 'Esse é um título'\n  }\n \n  render() {\n    const { title } = this.state;\n    return (\n      {tenant && \n        <div className=\"container\">\n          <Title />\n        </div>\n      }\n    );\n  }\n}\n```\n\nVamos começar criando uma variável de contexto com o comando **React.createContext** passando como parâmetro o valor padrão quando nenhum valor existir nessa variável.\n\n```\nconst ExampleContext = React.createContext('example');\n```\n\nA variável **ExampleContext** já pode ser considerada uma variável de contexto. Para alterar o seu valor, precisamos utilizar um componente chamado **Provider** que pertence à essa variável:\n\n```\nrender() {\n  const { title } = this.state;\n  return (\n    <ExampleContext.Provider value={title}>\n      {title && \n        <div className=\"container\">\n          <Title />\n        </div>\n      }\n    </ExampleContext.Provider>\n  );\n}\n```\n\nAssim, criamos um **ExampleContext.Provider** com uma única propriedade chamada value que é responsável por prover o valor da variável de contexto.\n\nAgora o componente **Title**, consome o **ExampleContext**:\n\n```\nfunction Title() {\n  return (\n    <ExampleContext.Consumer>\n      {title => (\n        <h1>{title}</h1>\n      )}\n    </ExampleContext.Consumer>\n  );\n}\n```\n\nCom o **ThemeContext.Consumer** podemos utilizar esses dados e trabalhar com uma técnica chamada [render props](https://reactjs.org/docs/render-props.html).\n\nSendo assim, você não vai mais precisar utilizar o **Redux** sempre que precisar compartilhar informações entre componentes, mas vale lembrar que a arquitetura **Flux** é muito mais do que simplesmente compartilhamento de dados, tem a ver com estrutura, com fluxo de informações e arquitetura dos dados da aplicação.\n\nPara retornar o valor padrão que informamos na criação da variável **ExampleContext**, o componente não deverá possuir um **Provedor** correspondente acima dele na árvore. Isso pode ser útil para testar componentes isoladamente sem envolvê-los.\n\n```\nrender() {\n  const { title } = this.state;\n  return (\n    <div className=\"container\">\n      <Title />\n    </div>\n  );\n}\n\n// Saída: example\n```\n\nMais pode ser visto na [documentação oficial](https://reactjs.org/docs/context.html).\n\n## Considerações finais\n\nEntão vamos continuar precisando de um gerenciamento de estado mais complexo como o **Redux** e temos a API de contexto quando for necessário compartilhar algumas informações entre componentes.\n\nAgora é ficar ligado nos novos métodos e prestar atenção nos que foram depreciados. A biblioteca está evoluindo muito bem e vamos botar a mão na massa.\n","categories":["react"]},{"title":"React - Mudanças na versão 16","url":"/hemersonvianna/artigos/react/react-mudancas-na-versao-16-/","content":"\nA versão [16.0.0](https://github.com/facebook/react/releases/tag/v16.0.0), foi lançado em 26 de setembro de 2017, e trouxe mudanças significativas até o momento.\n\n## Polêmica com a licença\n\nPor um período os desenvolvedores ficaram preocupados com a ideia da biblioteca ter adotado a licença BSD+Patents. Tudo ficou na paz, quando o **React 16** foi disponível sob a licença MIT. A versão 15.6.2 também foi publicado com essa licença, para que não fosse preciso que as aplicações fossem atualizadas imediatamente.\n\n## Novo tamanho\n\nAgora mesmo com novas funcionalidades, o tamanho diminuiu cerca de 32%, se comparado com a versão 15.6.1.\n\n**Versão 15**\n  - react - 20.7kb (6.9kb com gzip)\n  - react-dom - 141kb (42.9kb com gzip)\n  - react + react-dom - 161.7 kb (49.8 kb com gzip)\n\n**Versão 16**\n  - react - 5.3kb (2.2kb com gzip)\n  - react-dom - 103.7kb (32.6kb com gzip)\n  - react + react-dom - 109 kb (34.8 kb com gzip)\n\n## Tratamento de erros\n\nAntes tínhamos o problema que ao ter um erro durante a renderização, toda a árvore de componentes era desmontada. Agora é possível capturar os erros e substituir o componente. Quem não gosta de um try-catch? :)\n\nTemos então, o novo método **componentDidCatch**, que irá informar o erro para que possamos tratar com facilidade. Identificando um erro, podemos tratar no método **render**.\n\n```\ncomponentDidCatch(error, info) {\n  this.setState({ ...state, hasError: true });\n  // E você também tem 2 paramêtros para utilizar\n  console.log(error); // o erro em si\n  console.log(info); // contém o Component Stack\n}\n\nrender() {\n  if (this.state.hasError) {\n    return <h1>Deu algo errado</h1>;\n  }\n  else {\n    // retornando o componente\n    ...\n  }\n}\n```\n\nPara mais detalhes, confira o artigo oficial sobre o [tratamento de erros no React 16](https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html).\n\n## Novos tipos de retorno de renderização\n\nAo trabalhar com **React**, o método **render** sempre deve retornar um único elemento. Querendo retonar uma lista de elementos, você deve criar um **container** para eles.\n\nAgora você pode retornar um **Array** de elementos. Por ser um Array, você ainda precisará adicionar o atributo **key** aos elementos.\n\n```\nrender() {\n  return [\n    <li key=\"item1\">item 1</li>,\n    <li key=\"item2\">item 2</li>,\n    <li key=\"item3\">item 3</li>,\n  ];\n}\n```\n\nE também é possível retornar uma simples **String**:\n\n```\nrender() {\n  return 'Meu nome é Hemerson';\n}\n```\n\n## Portals\n\nAgora é possível inserir um elemento filho em um local diferente no DOM, fora da sua árvore principal.\n\nExemplo:\n\n```\n<body>\n  <div id=\"main\"></div>\n  <div id=\"modal\"></div>\n<body>\n```\n\nCom **Portals**, tendo um componente na div **main**, será possivel pegar este componente e renderizá-lo na div **modal**.\n\nTendo um elemento que irá aparecer na página e reaparecer ao abrir uma modal, seria necessário chamar o componente em dois lugares (na página e na modal) e passar as propriedades para ele. Com **Portals** basta indicar o elemento que quer usar e onde quer exibí-lo. Querendo alterar alguma propriedade passada para o componente, só será preciso alterar em um lugar.\n\nMais detalhes na [documentação](https://reactjs.org/docs/portals.html);\n\n## Renderização no lado do servidor\n\nGraças a reescrita, a renderização no lado do servidor ficou muito mais rápida. E agora com suporte a **streaming**, sendo possível enviar os dados de forma melhor e mais ágil para o navegador.\n\nNesse artigo, pode ser visto as [melhorias no SSR](https://hackernoon.com/whats-new-with-server-side-rendering-in-react-16-9b0d78585d67).\n\n## Atributos personalizados\n\nAtributos informados no HTML ou SVG que não fossem reconhecidos eram ignorados. Agora os mesmos são mantidos.\n\n```\n<!-- nosso código -->\n<div example=\"test\" />\n\n<!-- React 15 -->\n<div />\n\n<!-- React 16 -->\n<div example=\"test\" />\n```\n\n## Nova arquitetura\n\nAgora temos uma reescrita na arquitetura central da biblioteca, sendo conhecida como **Fiber**. O mesmo é responsável pela maioria dos novos recursos do React 16.\n\nUma área que está tendo um bom foco é a renderização assíncrona, tendo uma estratégia para programar cooperativamente a renderização, entregando periodicamente a execução ao navegador. Com a renderização assíncrona, as aplicações são mais responsivas porque o React evita o bloqueio da árvore principal. Nessa versão 16.0.0 não foi ativado nenhum recurso assíncrono, para facilitar a migração para essa versão.\n\nConfira um exemplo de problema de [renderização assíncrona](https://twitter.com/acdlite/status/909926793536094209?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E909926793536094209&ref_url=https%3A%2F%2Freactjs.org%2Fblog%2F2017%2F09%2F26%2Freact-v16.0.html).\n\n\n## Depreciações, mudanças, empacotamento e requisitos\n\n### Depreciações\n\nPara hidratar um container renderizado pelo servidor agora tem uma API explicita. Renderizando o HTML pelo servidor, use **ReactDOM.hydrate** ao invés de **ReactDOM.render**. Use **ReactDOM.render** se renderizar pelo lado do cliente.\n\nO suporte ao **React Addons** foi descontinuado e com exceção do **react-addons-perf** que terá uma versão nova, os outros addons não serão atualizados. **react-addons-perf** não funciona no React 16, e é encorajado usar as [ferramentas do navegador para medir performance](https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab).\n\n### Mudanças\n\nO React 16 depende dos tipos de coleção **Map** e **Set**. Se você precisa dar suporte para navegadores e dispositivos antigos que não suportam nativamente (por exemplo, IE <11) ou que tenham implementações não compatíveis (por exemplo, IE 11), será necessário incluir um polyfill na aplicação, como **core-js** ou **babel-polyfill**. Confira mais [sobre o assunto](https://reactjs.org/docs/javascript-environment-requirements.html).\n\nAlgumas mudanças que podem causar quebras em relação às versões anteriores:\n\n- **ReactDOM.render** e **ReactDOM.unstable_renderIntoContainer** agora retornam **null** se forem chamados de dentro de um método do ciclo de vida do componente. Para contornar isso, você pode usar **portals** ou **refs**.\n- Chamar **setState** com **null** não dispara mais atualizações\n- Chamar **setState** diretamente dentro de **render** sempre causa atualizações.\n- **Callbacks** de **setState** agora são disparados após **componentDidMount** ou **componentDidUpdate**.\n- Ao trocar **<A />** por **<B />**, **B.componentWillMount** agora vai sempre acontecer antes de **A.componentWillUnmount**. Antes, **A.componentWillUnmount** podia inicializar primeiro em certos casos.\n- Antes, mudar a referência de um componente sempre iria desmontar a referência antes que o renderização do componente fosse chamada. Agora, a referência é alterada depois, quando aplicadas as mudanças no DOM.\n- **componentDidUpdate** não recebe mais o parâmetro **prevContext**.\n- O renderizador superficial não é mais chamado no **componentDidUpdate** porque as referências DOM não estão disponíveis. Isso também o torna consistente com **componentDidMount**(que também não é chamado nas versões anteriores).\n\n## Empacotamento\n\nAgora não existe mais **react/lib/** e **react-dom/lib/**. Os nomes/caminhos mudaram para enfatizar a diferença entre os **builds** de produção e desenvolvimento:\n\n  - react/dist/react.js → react/umd/react.development.js\n  - react/dist/react.min.js → react/umd/react.production.min.js\n  - react-dom/dist/react-dom.js → react-dom/umd/react-dom.development.js\n  - react-dom/dist/react-dom.min.js → react-dom/umd/react-dom.production.min.js\n\n\n## Considerações finais\n\nMuitas mudanças boas vieram e o React continua sendo muito usado nas aplicações. Pode conferir o artigo completo no blog oficial sobre a versão [16.0.0](https://reactjs.org/blog/2017/09/26/react-v16.0.html).\n","categories":["react"]},{"title":"Começando com React","url":"/hemersonvianna/artigos/react/comecando-com-react/","content":"\nA biblioteca que é largamente usada no desenvolvimento front-end já está na versão [16.8.6](https://github.com/facebook/react/releases/tag/v16.8.6), que foi lançada em 27 de março deste ano.\n\nPara quem está começando com o **React**, vale saber que teve algumas mudanças significativas a partir da versão [16.0.0](https://github.com/facebook/react/releases/tag/v16.0.0), lançada em 26 de setembro de 2017 (veremos sobre isso no próximo artigo).\n\nAntes de tudo, vale saber da linha do tempo.\n\n## A Linha do tempo\n\nHá exatos seis anos (29 de maio de 2013), uma biblioteca JavaScript de código aberto, que foi desenvolvida pelo **Facebook**, era lançada. Sendo óbvio, estou falando da biblioteca **React**. Para ser mais preciso, a pessoa que está por trás dessa criação é [Jordan Walke](https://twitter.com/jordwalke) (Engenheiro de software na empresa Facebook).\n\nTivemos o lançamento do [React Native](https://facebook.github.io/react-native/), em 26 de março de 2015.\n\nEm 18 de abril de 2017, o Facebook anunciou o [React Fiber](https://github.com/acdlite/react-fiber-architecture), um novo algoritmo `core` da biblioteca. Com o propósito de se tornar a base de qualquer melhoria futura e desenvolvimento de recursos da biblioteca **React**.\n\nNo dia seguinte (19 de abril de 2017), foi lançado o [React 360](https://facebook.github.io/react-360/), para o público. Isso permitiu aos desenvolvedores que utilizam React, saltassem para o desenvolvimento de VR (Realidade Virtual).\n\nPor fim, temos a versão 16 e 16.8.6 da biblioteca, como mencionado no início desse artigo. Sem esquecer que na versão 16.8, temos o suporte estável na utilização de Hooks, que veremos nos próximos artigos.\n\n## A Biblioteca\n\nA biblioteca ganhou grande popularidade por ter o foco na criação de componentes de interface, ter uma grande empresa por trás, usar uma técnica que agradou à todos (Virtual-Dom) e ter uma pequena curva de aprendizado para quem já está acostumando com **JavaScript**.\n\nAbaixo, também veremos sobre a especificação JSX e micro bibliotecas que auxiliam o desenvolvimento com **React**.\n\n### Virtual-DOM\n\nÉ uma representação em JavaScript puro do DOM. Sendo assim, você manipula esse objeto e não o DOM de verdade. Quando o objeto virtual é atualizado, um algoritmo calcula a diferença entre o virtual-dom e o DOM real, alterando então os trechos do DOM.\n\nÉ mais produtivo criar os elementos DOM no JavaScript, processar eles e aplicá-los de uma só vez na arvore DOM do navegador. A biblioteca veio para facilitar isso, entre outras coisas.\n\n### JSX\n\nJSX é uma especificação de sintaxe para escrever JavaScript como se estivéssemos escrevendo XML.\n\n```\ncont Example = React.createClass({\n  render: function() {\n    return <div>Olá, {this.props.name}</div>;\n  }\n});\n\nReactDOM.render(\n  <Example name=\"Hemerson\" />,\n  document.getElementById('main')\n);\n```\n\nSem JSX:\n\n```\nvar Example = React.createClass({\n  displayName: 'Hello',\n  render: function() {\n    return React.createElement(\"div\", null, \"Olá, \", this.props.name);\n  }\n});\n\nReactDOM.render(\n  React.createElement(Example, {name: \"Hemerson\"}),\n  document.getElementById('main')\n);\n```\n\n### Micro-bibliotecas\n\nSendo apenas uma biblioteca, não seria possível criar aplicações complexas, apenas com **React**. Por isso, vamos falar um pouco nas micro-bibliotecas que ajudam muito no desenvolvimento.\n\nAs mais utilizadas nos projetos são [react-router](https://reacttraining.com/react-router/) e [react-redux](https://react-redux.js.org/). Com elas, já é capaz de criar uma projeto SPA complexo.\n\nCada vez mais o caminho tem sido separar as responsabilidades, por uma questão de manutenção, peso e mais.\n\nNesse [link](https://github.com/enaqx/awesome-react), temos muitas micro-bibliotecas para nos ajudar.\n\n\n## Considerações finais\n\nTenho gostado de utilizar o **React**, pela liberdade no desenvolvimento de componentes e pela estabilidade e flexibilidade da ferramenta. Nos dias de hoje, podemos usar no navegador, servidor e aplicativos móveis. A comunidade está empenhada no crescimento e melhorias. A cada ano temos evoluções consideráveis da biblioteca e ferramentas que utilizamos como suporte no desenvolvimento das aplicações.\n","categories":["react"]},{"title":"React Native - Criando layouts - Parte 2","url":"/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-2/","content":"\nDando continuidade ao artigo **Criando Layouts**. Na [parte 1](/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-1/), vimos o **Stack layout** e agora vamos continuar vendo os tipos de layout que conseguimos criar no **React native**.\n\n## Grid Layout\n\nO **React Native** não vem com um sistema de layout de grade, mas o **flexbox** é flexível o suficiente para criar um. Ao utilizar o que já vimos até agora, podemos recriar um **grid layout** usando o **flexbox**. Ex:\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-grid-layout.png)\n\n```\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View\n} from 'react-native';\n \nexport default class GridLayout extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.row}>\n          <View style={[styles.box, styles.box2]}></View>\n          <View style={[styles.box, styles.box3]}></View>\n          <View style={[styles.box, styles.two]}></View>\n        </View>\n          \n        <View style={styles.row}>\n          <View style={[styles.box, styles.two]}></View>\n          <View style={[styles.box, styles.box2]}></View>\n          <View style={[styles.box, styles.box3]}></View>\n        </View>\n\n        <View style={styles.row}>\n          <View style={[styles.box, styles.box2]}></View>\n          <View style={[styles.box, styles.two]}></View>\n          <View style={[styles.box, styles.box3]}></View>\n        </View>\n\n        <View style={styles.row}>\n          <View style={[styles.box, styles.box2]}></View>\n          <View style={[styles.box]}></View>\n          <View style={[styles.box, styles.box3]}></View>\n        </View>\n\n        <View style={styles.row}>\n          <View style={[styles.box, styles.box2]}></View>\n          <View style={[styles.box]}></View>\n        </View>\n\n        <View style={styles.row}>\n          <View style={[styles.box]}></View>\n        </View>\n      </View>\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  },\n  box: {\n    flex: 1,\n    height: 100,\n    backgroundColor: '#333',\n  },\n  box2: { backgroundColor: 'green' },\n  box3: { backgroundColor: 'orange' },\n  two: { flex: 2 }\n});\n```\n\nNo código acima, você pode ver que estamos simulando o que costumamos fazer em uma estrutura de grade no **CSS**. Cada linha com uma exibição separada e os itens da grade estão dentro dela. O valor 1 na propriedade `flex` é aplicado a cada item para que eles compartilhem igualmente o espaço disponível em cada linha. Mas para itens que precisam ocupar um espaço maior, um valor `flex` maior é aplicado. Isso ajusta automaticamente a largura dos outros itens para acomodar todos os itens.\n\nSe você quiser adicionar espaços entre cada item de uma linha, você pode adicionar um preenchimento a cada um deles e criar uma caixa dentro de cada um. Ex:\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-grid-layout-with-space-between.png)\n\n## Absolute Layout\n\nO **React Native** só suporta os valores `absolute`e `relative`, para a propriedade `position`. Isso não limita muito, porque sempre podemos combiná-los com o **flexbox** para posicionar os diferentes elementos em qualquer lugar que desejarmos. Ex:\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-positioning.png)\n\nPodemos conseguir isso facilmente se tivermos um comando total sobre os valores de posicionamento disponíveis no navegador. Mas, como estamos no **React Native**, precisamos pensar primeiro no modo **flexbox** e usar o posicionamento **CSS** para as caixas. \n\nUsando o **flexbox**, isso pode ser conseguido de duas maneiras. Você pode usar `row` ou `column`para a propriedade `flexDirection` no elemento pai. Usando o valor `row` no `flexDirection`, a tela seja dividida em três colunas. A primeira coluna conterá a caixa vermelha, a segunda coluna conterá as caixas azul, cinza e verde e a terceira conterá as caixas amarela e roxa.\n\n```\nimport React, { Component } from 'react';\nimport { StyleSheet, View } from 'react-native';\n \nexport default class Positioning extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.left}>\n          <View style={[styles.box, styles.bigRedBox]}>\n          </View>\n        </View>\n        <View style={styles.middle}>\n          <View style={[styles.box, styles.bigBlueBox]}>\n            <View style={[styles.innerBox, styles.blackBox]}></View>\n          </View>\n          <View style={[styles.bigGrayBox]}></View>\n          <View style={[styles.box, styles.bigGreenBox]}>\n            <View style={[styles.innerBox, styles.blackBox]}></View>\n          </View>\n        </View>\n        <View style={styles.right}>\n          <View style={[styles.box, styles.bigYellowBox]}>\n            <View style={[styles.innerBox, styles.blackBox]}></View>\n          </View>\n          <View style={[styles.innerBox, styles.purpleBox]}></View>\n        </View>\n      </View>\n    );\n  }\n}\n```\n\nA primeira coluna tem apenas a caixa vermelha, basta definir a propriedade `justifyContent` com `center` no elemento pai que define a coluna. Como já vimos, o o valor `default` do `flexDirection` é `column`. Isto significa que se você definir `justifyContent` como `center`, os elementos filhos serão alinhados no centro do eixo Y.\n\nA segunda coluna tem basicamente a mesma ideia que a primeira, só que desta vez não queremos alinhar todas as caixas ao centro. O que queremos é que eles tenham espaços iguais entre eles. A propriedade `justifyContent` com valor `space-between`, resolve isso. Mas ao mesmo tempo, também queremos centralizar os elementos filhos no eixo x, então nós usamos `alignItems` com valor `center`. \n\nA única parte complicada aqui é que você não deve aplicar nenhuma propriedade `width` a caixa cinza porque queremos que ele ocupe todo o espaço do elemento pai. Uma vez que não aplicamos a propriedade `width`, devemos usar a propriedade `alignSelf` com valor `stretch`, para que a caixa cinza ocupe a largura total do seu elemento pai. \n\nEm seguida, para posicionar a pequena caixa preta um pouco longe de sua posição relativa, usamos `position` com o valor `relative` e depois acrescentamos as propriedades `top` e `left` com os valores que queremos, porque sua posição relativa está em torno do canto superior esquerdo de seu pai. \n\nNa pequena caixa roxa, colocamos a propriedade `position` com o valor `absolute` e as propriedades `bottom` e `right`, para alinhá-la ao canto inferior direito de seu pai. Isso funciona porque elementos posicionados com `position: absolute` no **React Native** estão vinculados aos seus pais.\n\nA terceira coluna basicamente aplica a mesma ideia.\n\n```\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  left: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  middle: {\n    flex: 5,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  right: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: '#f2f2f2',\n  },\n  bigGreenBox: { backgroundColor: 'green' },\n  bigRedBox: { backgroundColor: 'red' },\n  bigYellowBox: { backgroundColor: 'yellow' },\n  bigGrayBox: {\n    height: 100,\n    alignSelf: 'stretch',\n    backgroundColor: '#ccc'\n  },\n  innerBox: {\n    width: 20,\n    height: 20,\n  },\n  redBox: {\n    position: 'relative',\n    backgroundColor: 'red',\n    top: 10,\n    left: 10\n  },\n  blueBox: {\n    position: 'absolute',\n    backgroundColor: 'blue',\n    top: 10,\n    right: 10\n  },\n  purpleBox: {\n    position: 'absolute',\n    backgroundColor: 'purple',\n    bottom: 10,\n    right: 10\n  },\n  blackBox: {\n    position: 'relative',\n    backgroundColor: 'black',\n  }\n});\n```\n\n## Header e footer fixos.\n\nPara isso, precisamos usar o componente de `ScrollView`, se o conteúdo for maior que a altura do elemento, o **React Native** gerará automaticamente uma barra de rolagem vertical. Isso nos permite adicionar `marginTop` e `marginBottom` no elemento com o conteúdo principal, para que o `header` e o `footer` fixos não obstruam o conteúdo principal. Os valores de `left` e `right` do `header` e `footer` estão configurados com 0, para que eles ocupem a largura total do dispositivo. \n\n```\nimport React, { Component } from 'react';\nimport { StyleSheet, View, ScrollView } from 'react-native';\n \nexport default class FixedHeaderFooter extends Component {\n  render() {\n      return (\n      <View style={styles.container}>\n        <View style={[styles.header]}></View>\n        <ScrollView>\n          <View style={[styles.content]}>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n            <View style={[styles.box]}></View>\n          </View>\n        </ScrollView>\n        <View style={[styles.footer]}></View>\n      </View>\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  header: {\n    height: 40,\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    backgroundColor: 'red,\n    zIndex: 10\n  },\n  content: {\n    alignItems: 'center',\n    marginTop: 50,\n    marginBottom: 40\n  },\n  footer: {\n    height: 40,\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'blue'\n  },\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'gray',\n    marginBottom: 10\n  }\n});\n```\n\n## Conclusão\n\nVimos como usar o **Flexbox** do **React Native** para posicionar os elementos e criarmos os layouts. Espero que essas duas partes consigam te ajudar na tarefa de criação de layouts e que tenha ajudado a conhecer as propriedades mencionadas. \n\nO repositório [nexus-react-native/04-how-to-create-layouts](https://github.com/descco-tools/nexus-react-native/blob/master/04-how-to-create-layouts/App.js), está a disposição para praticar. :)\n","categories":["react-native"]},{"title":"React Native - Criando layouts - Parte 1","url":"/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-1/","content":"\nPara criar um layout no **React Native** vamos usar o **Flexbox**, mas nem todos os recursos que estão na [especificação do Flexbox](https://www.w3.org/TR/css-flexbox-1/), estão incluídos. :/\n\n## Stack Layout\n\nEsse layout na orientação vertical empilha elementos em cima uns dos outros, enquanto que para a orientação horizontal, os elementos são colocados lado a lado. Vejamos a orientação vertical:\n\n```\nimport React, { Component } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\n \nconst { height } = Dimensions.get('window');\nconst boxCount = 3;\nconst boxHeight = height / boxCount;\n \nexport default class VerticalStackLayout extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={[styles.box, styles.box1]}></View>\n        <View style={[styles.box, styles.box2]}></View>\n        <View style={[styles.box, styles.box3]}></View>\n      </View>\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  box: { height: boxHeight },\n  box1: { backgroundColor: 'red' },\n  box2: { backgroundColor: 'blue' },\n  box3: { backgroundColor: 'green' }\n});\n```\n\nNo elemento pai(container), usaremos a propriedade `flex`. O valor é a quantidade de espaço que ele ocupará. Sendo 1, isso significa que ele ocupará todo o espaço disponível, desde que o elemento não tenha irmãos.\n\nA propriedade `flexDirection` permite que você especifique o eixo principal do layout. Por padrão, isso é definido como `column`. O valor de `flexDirection` sendo `column`, significa que os elementos filhos serão dispostos verticalmente (empilhados uns sobre os outros). Se o valor for `row`, significa que os filhos serão dispostos horizontalmente (lado a lado).\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-manual.png)\n\nO exemplo acima mostra a maneira manual. O uso de `Dimensions` para calcular a largura ou a altura dos elementos falhará se o seu aplicativo suportar a orientação do dispositivo retrato e paisagem. Isso ocorre porque assim que o usuário virar seu dispositivo, a largura ou a altura que você calculou não serão atualizadas. Exemplo mudando a orientação:\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-manual-h.png)\n\nO **Flexbox** faz a computação para você, se você fornecer os valores corretos. Para alcançar o mesmo layout acima, sem usar o `Dimensions`, tudo o que você precisa fazer é especificar `flex: 1` para todas as caixas, em vez de especificar o valor para a propriedade `height`:\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-flex.png)\n\n```\nbox: {\n  flex: 1\n},\n```\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-flex-h.png)\n\nAgora podemos evoluir esse layout com o uso do `flex` nos elementos irmãos. \n\n```\n//header\nbox1: {\n  flex: 1,\n  backgroundColor: 'red',\n},\n//content\nbox2: {\n  flex: 10,\n  backgroundColor: 'blue',\n},\n//footer\nbox3: {\n  flex: .5,\n  backgroundColor: 'green',\n}\n```\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-vertical-stack-layout-header-content-footer.png)\n\nTenha em mente que se conteúdo interno for maior do que a altura máxima disponível, o resto do seu conteúdo será oculto. Se você espera que seu conteúdo ultrapasse esse limite, você pode usar o componente de `ScrollView`, incorporado para gerar automaticamente uma barra de rolagem vertical, como em uma página da web. \n\n### Horizontal\n\nPara implementar a orientação horizontal, basta mudar o `flexDirection` para `row`. Colocando o valor de `flex` do box novamente para 1, isso resulta em que 3 colunas ocuparam toda a tela.\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-horizontal-stack-layout.png)\n\n```\ncontainer: {\n  flex: 1,\n  flexDirection: 'row',\n},\nbox: { flex: 1 },\nbox1: { backgroundColor: 'red' },\nbox2: { backgroundColor: 'blue' },\nbox3: { backgroundColor: 'green' }\n```\n\n## Justificando o conteúdo\n\nSe você deseja controlar a distribuição dos elementos filhos, é necessário utilizar a propriedade `justifyContent` no elemento pai. \n\n```\ncontainer: {\n  flex: 1,\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n},\nbox: { height: boxHeight },\nbox1: { backgroundColor: 'red' },\nbox2: { backgroundColor: 'blue' },\nbox3: { backgroundColor: 'green' }\n```\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-justify-content.png)\n\nAbaixo vamos ver os 5 valores possíveis que podem ser usados ​​com essa propriedade. Você não conseguirá ver nenhuma diferença se o valor da propriedade `flex` for 1, para cada um dos elementos filhos, porque eles ocupariam todo o espaço disponível.\n- `flex-start`: os elementos filhos são alinhados em direção ao ponto de partida. Observe o fundo branco logo abaixo do último filho. É assim que você sabe que isso está sendo usado o **flex-start**.\n- `flex-end`: os elementos filhos são alinhados em direção à linha final. Desta vez o espaço vazio estará no ponto de partida.\n- `center`: os elementos filhos são colocados em direção ao centro. Desta vez, o espaço vazio é dividido igualmente entre o ponto inicial e final.\n- `space-around`: os elementos filhos são distribuídos de modo que haveria espaço igual em cada um deles. Isso significa que os elementos na parte externa teriam menos espaço no lado externo e o espaço entre os dois filhos é duplicado.\n- `space-between`: os elementos filhos são distribuídos de modo que haveria uma quantidade igual de espaço entre cada um deles. \n\nComo você pode ter notado, cada um desses valores de estilo dependem da altura ou largura dos elementos filhos. Depende da largura, se `flexDirection` for `row` e na altura se `flexDirection` for `column`. \n\nPor exemplo, `space-between` realmente não terá qualquer efeito em um **Stack layout vertical** se cada um dos elementos filhos estiver usando `flex` para controlar a altura. Isso ocorre porque não haverá mais espaço entre cada elemento para ocupar. \n\n## Alinhando os itens\n\n`justifyContent` e `alignItems` podem parecer como se estivessem fazendo o mesmo. Eles também compartilham três valores possíveis: `flex-start`, `flex-end` e `center`, com a adição do valor `stretch` na propriedade `alignItems`. \n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-align-items-stretch.png)\n\nA principal diferença entre `justifyContent` e  `alignItems` é o eixo em que os elementos filhos são distribuídos. Como você vimos anteriormente, `justifyContent` sempre usa o eixo primário ao distribuir elementos filhos. Mas `alignItems` usa o eixo oposto ao primário. \n\nNós já sabemos que o eixo é determinado pelo `flexDirection` que foi definido. Então, se `flexDirection` for `row`, o eixo primário flui da esquerda para a direita. Isso significa que o eixo transversal irá fluir de cima para baixo. Por outro lado, se `flexDirection` é  `column` que o eixo transversal irá fluir da esquerda para a direita.\n\nAbaixo vamos ver alguns exemplos com `justifyContent` e `alignItems` implementados lado a lado com o `flexDirection` de `row`. O primeiro usa `justifyContent` enquanto o segundo usa `alignItems`.\n- `flex-start`: o posicionamento dos elementos é o mesmo, por isso que a implementação de **alignItems** e **justifyContent**, são iguais.\n- `flex-end`: agora começamos a ver uma diferença. Com **justifyContent**, os elementos filhos irão para o final da primeira linha, enquanto com **alignItems** os elementos filhos irão estar no início da última linha.\n- `center`: tem a mesma ideia do resto dos valores que usamos até agora. Com **justifyContent**, os itens são centrados no eixo x enquanto com **alignItems**, os itens estão centrados no eixo y.\n- `stretch`: use para que os elementos filhos se estendam para preencher o elemento pai. Este é o valor padrão para `alignItems`, portanto, especificar esse valor é opcional.\n\n![Stack Layout Vertical](/hemersonvianna/assets/img/site/articles/layout-align-items.png)\n\nAbaixo temos o trecho de código usado nos exemplos acima. Basta alterar os valores para o `flexDirection`, `justifyContent` e `alignItems`:\n\n```\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View\n} from 'react-native';\n \nexport default class AlignItems extends Component {\n  render() {\n    return (\n      <View style={styles.wrapper}>\n        <View style={styles.container}>\n            <View style={[styles.box, styles.box1]}></View>\n            <View style={[styles.box, styles.box2]}></View>\n            <View style={[styles.box, styles.box3]}></View>\n        </View>\n        <View style={styles.container2}>\n            <View style={[styles.box, styles.box1]}></View>\n            <View style={[styles.box, styles.box2]}></View>\n            <View style={[styles.box, styles.box3]}></View>\n        </View>\n      </View>\n    );\n  }\n}\n \nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1\n  },\n  container: {\n    flex: .5,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    borderBottomWidth: 1,\n    borderBottomColor: '#000'\n  },\n  container2: {\n    flex: .5,\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  box: {\n    width: 100,\n    height: 100\n  },\n  box1: { backgroundColor: '#2196F3' },\n  box2: { backgroundColor: '#8BC34A' },\n  box3: { backgroundColor: '#e3aa1a' }\n});\n```\n\nSe você quiser especificar o alinhamento de elementos filhos dentro de um elemento pai, você pode usar a propriedade `alignSelf`. Todos os valores possíveis de `alignItems` são aplicáveis ​​a esta propriedade. Então, por exemplo, você pode alinhar um único elemento à direita do seu elemento pai, enquanto todos os restantes estão alinhados à esquerda.\n\n## Conclusão\n\nNessa primeira parte, implementamos o **Stack layout**. E na [segunda parte](/hemersonvianna/artigos/react-native/react-native-criando-layouts-parte-2/), vamos continuar vendo outros tipos de layout que podemos fazer.\n\nO repositório [nexus-react-native/04-how-to-create-layouts](https://github.com/descco-tools/nexus-react-native/blob/master/04-how-to-create-layouts/App.js), está a disposição para praticar. :)\n","categories":["react-native"]},{"title":"React Native - Estilização","url":"/hemersonvianna/artigos/react-native/react-native-estilizacao/","content":"\nA grande vantagem que o **React native** nos traz, é tornar único o código tanto para **Android**, quanto para **IOS**. Não só pensando nos dispositivos móveis, graças ao **React**, o código pode ser utilizado no desenvolvimento web. Mas quando chegamos na parte de estilização, podemos ter que nos acostumar e perceber que nessa parte a diferença do que estamos acostumados a ver no desenvolvimento web, é maior que o esperado.\n\n## Cascading Style Sheets (CSS)\n\nA princípio mexer com estilo no **React native**, parece ser bem simples. Podemos ver as regras de CSS e que diferente da web, onde as as mesmas são escritas em [kebab-case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles), utilizaremos a sintaxe com **CamelCase**.\n\nO **React Native** utiliza o mecanismo de layout de [Yoga](https://yogalayout.com/), que implementa as especificações do flexbox e empresta nomes de regras CSS. Ex:\n\n```\n.text {\n  font-family: Arial;\n  font-size: 12px;\n}\n```\n\nQue ficaria assim no **React native**:\n\n```\nconst styles = StyleSheet.create({\n  text: {\n    fontFamily: \"Arial\",\n    fontSize: 12,\n  }\n});\n```\n\nIsso faz com que a escrita do estilo seja muito familiar. Mas depois fica claro que o estilo no **React Native** é muito diferente do estilo na web. Nomes de regras e flexbox são as únicas coisas que o **CSS** e o estilo no **React Native** tem em comum.\n\n## Escopo por componente\n\nNo navegador, o **CSS** tem o escopo a nível da página. Para uma aplicação web de uma única página, isso significa que cada folha de estilo afeta a aplicação inteira. As regras de estilos individuais são aplicadas aos elementos no **DOM**, sendo definidos dentro dos blocos dos seletores. Existem muitas maneiras diferentes de selecionar os elementos **DOM**.\n\nCom o **React Native**, os estilos não tem efeito em seu aplicação, a menos que você os passe especificamente aos seus componentes. Não existe um conceito de `seletor` porque os componentes e os estilos estão bem acoplados. Isso significa que você pode usar o mesmo nome para estilos em várias folhas de estilo sem causar efeitos colaterais:\n\n```\nconst headerStyles = StyleSheet.create({\n  container: {\n    backgroundColor: 'red'\n  }\n});\nconst footerStyles = StyleSheet.create({\n  container: {\n    backgroundColor: 'red'\n  }\n});\n<Header style={headerStyles.container} />\n<Footer style={footerStyles.container} />\n```\n\n## Herança\n\nOs estilos não são herdados por padrão. Na web, os elementos **DOM** herdam alguns dos estilos dos pais por padrão. Estes são principalmente estilos relacionados a texto, e isso significa que você pode fazer:\n\n```\n<style>\n  .container {\n    font-family: Arial;\n    font-size: 12px;\n  }\n</style>\n<div class=\"container\">\n  <h1>Title</h1>\n  <div>\n    <p>Test with <strong>text</strong></p>\n  </div>\n</div>\n```\n\nQue é equivalente a:\n\n```\nconst styles = StyleSheet.create({\n  container: {\n    fontFamily: 'Arial',\n    fontSize: 12,\n  },\n  bold: {\n    fontWeight: '700',\n  }\n});\n<View>\n  <Text style={styles.container}>Title</Text>\n  <View>\n    <Text style={styles.container}>Test with <Text style={styles.bold}>text</Text></Text>\n  </View>\n</View>\n```\n\nOs componentes podem para passar propriedades de estilo para os componentes filho. É o caso do `<Text />` do **React Native**. Um componente `<Text />` que é filho de outro componente `<Text />,` herdará seus estilos:\n\n```\n<Text style={styles.text}>\n  Text\n  <Text style={{fontWeight: bold}}>Text</Text>\n</Text>\n```\n\nO compartilhamento de estilos de texto com `<Text />` tem uso limitado, pois `<Text />` não permite que a maioria dos outros componentes **React Native** sejam seus filhos.\n\n## Lógica no estilo\n\nO **CSS** é muito limitado na sua capacidade de calcular valores. Existem algumas funções que você pode usar, como `calc()` e as variáveis **CSS** são suportadas em navegadores modernos. Além disso, a lógica para calcular estilos dinamicamente precisa ocorrer em outros lugares, sendo compilado com pré-processadores (como SASS).\n\nNo **React Native**, os estilos são definidos em **JavaScript**. Tendo uma linguagem de programação nos dá uma série de possibilidades.\n\nAssim, temos novos padrões de estilo. Esse é um [repositório que vale a pena ver](https://github.com/MicheleBertoli/css-in-js).\n\n## Style e StyleSheet\n\nOs estilos só podem ser transmitidos diretamente para um componente, da mesma forma que você passaria estilos para elementos **DOM** através do atributo `style`:\n\n```\n<p style=\"color: blue;\">text</p>\n```\n\nAchou que iria se livrar do estilo `inline`? XD\n\nA documentação do **React native** nos informar mais sobre o [style](https://facebook.github.io/react-native/docs/style.html).\n\nO que pode ser novo para você é o [StyleSheet](https://facebook.github.io/react-native/docs/stylesheet.html), que cria uma folha de estilo a partir de um objeto de estilo, tornando possível se referir a ele por **ID** ao invés de criar um novo objeto de estilo sempre.\n\n## Gerenciando estilos\n\nPra mim, essa é a parte mais critica. Antes de recorrer a módulos de terceiros, uma escolha minha e um conselho é explorar as possibilidades ao utilizar o **React native**, principalmente se a ideia é ir para a linha **universal** (nativo e web).\n\n### Mixins\n\nComo utilizamos no pré-processador **SASS** (meu preferido.. :D), os mixins são uma boa saída para reaproveitamento de código e organização:\n\n```\nexport const errorText = {\n  fontWeight: \"700\",\n  color: \"red\",\n};\n```\n\n```\nimport { errorText } from \"textMixins\";\n\nexport default StyleSheet.create({\n  formErrorMessage: {\n    ...errorText,\n    fontSize: 22,\n  },\n  fieldErrorMessage: {\n    ...errorText,\n    fontSize: 18,\n  },\n});\n```\n\n### Estilo global\n\nComo em muitas metodologias de **CSS**, temos uma boa organização definido o estilo primitivo e o reutilizando em suas folhas de estilo. Ex:\n\n```\nexport const COLOR_BLUE = \"blue\";\nexport const COLOR_RED = \"red\";\n// ...\n\nexport default StyleSheet.create({\n  blue: { color: COLOR_BLUE },\n  red: { color: COLOR_RED },\n  // ...\n  bg_blue: { backgroundColor: COLOR_BLUE },\n  bg_red: { backgroundColor: COLOR_RED },\n  // ...\n  o_100: { opacity: 1 },\n  o_90: { opacity: 0.9 },\n  o_80: { opacity: 0.8 },\n  // ...\n});\n```\n\nPodendo ser usado assim:\n\n```\nimport styles from \"styles\";\n\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <View style={styles.bg_red}>\n        <Text style={[styles.blue, styles.o_90]}>Text</Text>\n      </View>\n    );\n  }\n}\n```\n\nOu assim:\n\n```\nimport { COLOR_BLUE, COLOR_RED } from \"styles\";\n\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>Text</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    backgroundColor: COLOR_BLUE,\n  },\n  text: {\n    color: COLOR_RED,\n  }\n}\n```\n\nTeste e busque a melhor solução para o seu projeto. Aqui veremos só algumas possibilidades. Então descubra o seu problema e comece a pensar na solução para a arquitetura.\n\nMuitas vezes, mesmo uma pequena mudança na forma como um componente funciona, significa que os nomes dos estilos não se encaixam. E os problemas podem aparecer e prejudicar o projeto. Então gaste um tempo, testando a necessidade do projeto e a melhor solução de organização e utilização.\n\n## Funções auxiliares\n\nEstilos em JavaScript significa que você obtém o poder de uma linguagem de programação em vez de uma linguagem de estilo simples.\n\n```\n// font https://gist.github.com/samueljmurray/eeb9495146ef0aad24f534cecd17487c\nimport { Dimensions } from \"react-native\";\n\n// Height\nconst screenSizes = [\n  {\n    name: \"xs\",\n    height: 568\n  },\n  {\n    name: \"s\",\n    height: 667\n  }\n];\n\n// Example usage:\n// screenSize({xs: 8, s: 12}, 16)\n// screenSize({s: 12}, 16)\n// screenSize({xs: 8}, 16)\nexport function screenSize(screenSizeOptions, defaultValue) {\n  const matchedScreenSizes = screenSizes.filter((screenSize) => {\n    return Dimensions.get(\"window\").height < screenSize.height;\n  });\n\n  let value;\n  const hasScreenSizeOption = matchedScreenSizes.some((matchedScreenSize) => {\n    if (screenSizeOptions.hasOwnProperty(matchedScreenSize.name)) {\n      value = screenSizeOptions[matchedScreenSize.name];\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!hasScreenSizeOption) {\n    value = defaultValue;\n  }\n  return value;\n\n```\n\n## Passando contexto para o estilo\n\nUm componente `<Button />`, por exemplo, pode aceitar uma propriedade de cor (string) e estilo quando estiver desabilitado (booleano), que afetam o seu estilo:\n\n```\nexport default StyleSheet.create({\n  button: {\n    backgroundColor: \"red\",\n  },\n  buttonDisabled: {\n    backgroundColor: \"gray\",\n  },\n});\n```\n\n```\nimport styles from \"buttonStyles\";\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <View style={[\n        styles.button,\n        this.props.color && {\n          backgroundColor: this.props.color\n        },\n        this.props.disabled && styles.buttonDisabled,\n       ]}>\n        // ...\n      </View>\n    );\n  }\n}\n```\n\nO problema do exemplo acima, que pode ficar muita lógica misturada (estilo e funcionalidade do componente). Então, vamos deixar a lógica de estilo no seu devido lugar.\n\n```\nexport default (props) => StyleSheet.create({\n  button: StyleSheet.flatten([\n    {\n      backgroundColor: \"red\",\n    },\n    props.color && {\n      backgroundColor: props.color,\n    },\n    props.disabled && {\n      backgroundColor: \"gray\",\n    },\n  ]),\n});\n```\n\n```\nimport styles from \"buttonStyles\";\n\nclass Button extends React.Component {\n  render() {\n    const s = styles(this.props);\n    return (\n      <View style={s.button}>\n        // ...\n      </View>\n    );\n  }\n}\n```\n\nMais um exemplo, sem **StyleSheet**:\n\n```\nclass Button extends React.Component {\n  render() {\n    const s = styles(this.props);\n    return (\n      <View style={s.button}>\n        // ...\n      </View>\n    );\n  }\n}\n\nconst styles = props => ({\n  button: {\n    backgroundColor: props.disabled ? \"gray\": (props.color ? props.color : \"red\"),\n  },\n});\n```\n\nFicou mais complexo. Simplificando ficaria assim:\n\n```\nclass Button extends React.Component {\n  render() {\n    const { color, disabled } = this.props;\n    const buttonStyle = disabled ? styles.button({ color }) : styles.buttonDisabled;\n    return (\n      <View style={buttonStyle}>\n        // ...\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  button: props => ({\n    backgroundColor: props.color ? props.color : \"red\",\n  },\n  buttonDisabled: {\n    backgroundColor: \"gray\",\n  }\n});\n```\n\nEsses foram exemplos que seguirmos uma linha antes de avaliar bem o projeto, pode ficar muito complexo, independente do caminho escolhido. O melhor caminho é ver na prática e testar as possibilidades que conseguir.\n\n## Conclusão\n\nTestando as abordagens ao estilo no **React native**, podemos ver a flexibilidade e também muda a forma como pensamos sobre como os estilos podem ser definidos em aplicações baseadas em componentes **JavaScript**, não apenas no **React Native**, mas também na web.\n\nTem muitas bibliotecas para testar:\n\n- [Styled components](https://github.com/styled-components/styled-components)\n- [Extended StyleSheets for React Native](https://github.com/vitalets/react-native-extended-stylesheet)\n- [Further - algebraic style composition for functional UIs](https://github.com/jongold/further)\n\nEntão, vamos testar! \n","categories":["react-native"]},{"title":"React Native - Tela de abertura e ícone","url":"/hemersonvianna/artigos/react-native/react-native-tela-de-abertura-e-icone/","content":"\nSe está desenvolvendo uma aplicação com **React native**, você vai querer personalizar o mesmo. Então, vamos ver como colocar a tela inicial e os ícones do aplicativo como queremos.\n\nPrimeiro temos que criar o nosso projeto.\n\n```\nreact-native init helloworld\n```\n\n## Criando as images\n\nExistem dispositivos de todas as formas e tamanhos, portanto, nossas imagens de tela inicial também precisam ter uma variedade de tamanhos. O Phonegap tem um guia dos tamanhos de [telas](https://github.com/phonegap/phonegap/wiki/App-Splash-Screen-Sizes) e [ícones](https://github.com/phonegap/phonegap/wiki/App-Icon-Sizes) que o seu aplicativo deve ter.\n\nUsaremos o [Image Gorilla da Ape Tools](https://apetools.webprofusion.com/#/tools/imagegorilla) para gerar todos os tamanhos necessários para a nossa tela inicial. Na ferramenta use uma imagem PNG sem transparência de 2048x2048 para a tela de abertura e uma imagem PNG de 1024x1024 para o ícone. \n\n![Tela de abertura](/hemersonvianna/assets/img/site/articles/splash-screen.jpg)\n![Ícone](/hemersonvianna/assets/img/site/articles/icon-app.jpg)\n\nAssim que o processo do Image Gorilla seja concluído, baixe o zio e extraia. Você verá vários diretórios, só estamos interessados ​​nos diretórios Android e IOS.\n\n### Adicionando no IOS\n\nAbra o arquivo `ios/helloworld.xcodeproj`, com o **XCode**.\n\nApós o processo de indexação, selecione o projeto no menu esquerdo, que será mostrado o conteúdo para a edição. Role para baixo até achar a opção `Launch Images Source` e clique em `Use Asset Catalog...`. \n\n![Tela XCode](/hemersonvianna/assets/img/site/articles/splash-screen-01.jpg)\n\nNa caixa de diálogo que aparece clique em `Migrate`. Em seguida, no campo **Launch Screen File**, exclua **LaunchScreen** e deixe o campo em branco. Você também pode excluir o **LaunchScreen.xib** do navegador à esquerda.\n\n![Tela XCode](/hemersonvianna/assets/img/site/articles/splash-screen-02.jpg)\n\nDentro da pasta `Imagens.xcassets`, existe agora uma opção **LaunchImage** dentro dela. Aqui é onde vamos arrastar e soltar as imagens IOS geradas.\n\n![Tela XCode](/hemersonvianna/assets/img/site/articles/splash-screen-03.jpg)\n\nAgora, executando `react-native run-ios`, já é possível ver a nossa tela de abertura nova e o ícone.\n\n![Tela XCode](/hemersonvianna/assets/img/site/articles/splash-screen-04.jpg)\n![Tela XCode](/hemersonvianna/assets/img/site/articles/splash-screen-05.jpg)\n\n### Adicionando no Android\n\nAs próximas dicas tem como base o artigo [Splash Screens the Right Way](https://www.bignerdranch.com/blog/splash-screens-the-right-way/).\n\nNo Android, primeiro copie os seguintes diretórios das imagens geradas:\n\n- drawable-hdpi\n- drawable-mdpi\n- drawable-xhdpi\n- drawable-xxhdpi\n\ne cole no diretório `android/app/src/main/res`.\n\nAbra o projeto no Android Studio (sempre abro o arquivo `android/build.gradle`, que assim ele já verifica as configurações do gradle). Em `app/res/drawable`, crie um novo `Drawable resource file`. Nomeie esse arquivo `project_splash`.\n\n![Tela Android Studio](/hemersonvianna/assets/img/site/articles/splash-screen-06.jpg)\n\nDentro do arquivo cole o seguinte:\n\n```\n// project_splash.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n  <item>\n    <bitmap\n      android:gravity=\"fill\"\n      android:src=\"@drawable/screen\"/>\n  </item>\n</selector>\n```\n\nA exibição da tela de abertura deve estar pronta imediatamente, mesmo antes de poder inflar um arquivo de layout em sua atividade de `splash`.\n\nEntão você não usará um arquivo de layout. Em vez disso, especifique o plano de fundo da tela inicial como o fundo do tema da atividade.\n\nAgora precisamos adicionar um novo estilo no arquivo `android/app/res/values/styles.xml`, resultando no seguinte arquivo.\n\n```\n// styles.xml\n<resources>\n  <!-- Base application theme. -->\n  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n    <!-- Customize your theme here. -->\n  </style>\n  <style name=\"SplashTheme\" parent=\"Theme.AppCompat.NoActionBar\">\n    <item name=\"android:windowBackground\">@drawable/project_splash</item>\n  </style>\n</resources>\n```\n\nAgora precisamos fazer algumas atualizações **AndroidManifest.xml**. Vamos criar uma nova atividade com o nome de **.SplashActivity**. \n\nBasicamente, mude o nome da atividade existente e adicione `android:theme=\"@style/SplashTheme`. Em seguida, crie uma atividade vazia com o nome de **.MainActivity**. Isso resulta em um arquivo como este.\n\n```\n// AndroidManifest.xml\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.helloworld\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n\n    <uses-sdk\n        android:minSdkVersion=\"16\"\n        android:targetSdkVersion=\"22\" />\n\n    <application\n      android:name=\".MainApplication\"\n      android:allowBackup=\"true\"\n      android:label=\"@string/app_name\"\n      android:icon=\"@mipmap/ic_launcher\"\n      android:theme=\"@style/AppTheme\">\n      <activity\n        android:name=\".SplashActivity\"\n        android:label=\"@string/app_name\"\n        android:theme=\"@style/SplashTheme\">\n        <intent-filter>\n          <action android:name=\"android.intent.action.MAIN\" />\n          <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n      </activity>\n      <activity android:name=\".MainActivity\" />\n      <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" />\n    </application>\n</manifest>\n```\n\nObserve que movemos todas as configurações de **MainActivity** para **SplashActivity**.\n\nAgora precisamos dizer ao **SplashActivity** que vá para o **MainActivity**, o que representa a nossa aplicação real. Para fazer isso você precisa criar uma nova classe Java chamada **SplashActivity**.\n\n![Tela Android Studio](/hemersonvianna/assets/img/site/articles/splash-screen-07.jpg)\n\nE coloque o seguinte código nesse arquivo. Certifique-se de manter a primeira linha o mesmo que o que for criado para o seu aplicativo, é específico do aplicativo.\n\n```\n// SplashActivity.java\npackage com.helloworld;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\n\npublic class SplashActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        Intent intent = new Intent(this, MainActivity.class);\n        startActivity(intent);\n        finish();\n    }\n}\n```\n\nPronto! Temos as telas de abertura no Android. Para o ícone, basta substituir a imagen `ic_launcher.png` de cada pasta `android/app/src/main/res/mipmap-*`, com as imagens `icon.png` que estão nos diretórios respectivos `drawable-*`, mantendo o nome `ic_launcher.png`. Ou se preferir altere o arquivo `AndroidManifest.xml`, o valor de `android:icon`. Ex: `android:icon=\"@drawable/icon\"`.\n\n![Tela Android Studio](/hemersonvianna/assets/img/site/articles/splash-screen-08.jpg)\n\nCom tudo isso concluído, você deve ver o seguinte (extremamente brevemente) ao criar o aplicativo.\n\n\n![Tela Android Studio](/hemersonvianna/assets/img/site/articles/splash-screen-09.jpg)\n![Tela Android Studio](/hemersonvianna/assets/img/site/articles/splash-screen-10.jpg)\n\n## Conclusão\n\nDepois da configuração dos ambientes e a implementação dos ícones e telas de abertura, agora é só focar na aplicação que pretende desenvolver.\n","categories":["react-native"]},{"title":"React Native - Hello World","url":"/hemersonvianna/artigos/react-native/react-native-hello-world/","content":"\nPara ver na prática o **React native**, vamos para o nosso **Hello world**. A documentação([Getting Started](https://facebook.github.io/react-native/docs/getting-started.html)) explica bem os passos de instalação e para rodar os projetos, mas você também pode ver aqui abaixo e conferir um exemplo em [nexus-react-native - hello-world](https://github.com/descco-tools/nexus-react-native/tree/master/01-hello-world).\n\n## Pré-requisitos\n\n- **Node** - Interpretador de código JavaScript que funciona do lado do servidor.\n- **Watchman** - Ferramenta do Facebook para observar as alterações no sistema de arquivos. É altamente recomendável que você o instale para um melhor desempenho.\n- **Xcode** - Ambiente de desenvolvimento integrado e software livre da Apple Inc.\n- **JDK** - Significa Kit de Desenvolvimento Java, e é um conjunto de utilitários que permitem criar sistemas de software para a plataforma Java.\n- **Android Studio** - Ambiente de desenvolvimento integrado para desenvolver para a plataforma Android.\n- **react-native-cli** - Permite instalar a interface do React Native via linha de comando.\n\n### IOS (Mac)\n\n- [Node](https://nodejs.org/en/download/)\n- [Watchman](https://facebook.github.io/watchman/)\n- [Xcode](https://itunes.apple.com/br/app/xcode/id497799835)\n\n### Android (Windows/Linux/Mac)\n\n- [Node](https://nodejs.org/en/download/)\n- [Watchman](https://facebook.github.io/watchman/)\n- [Java SE Development Kit (JDK)](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n- [Android Studio](https://developer.android.com/studio/index.html)\n\n## Android Studio\n\n### Instalação\n\nEscolha uma configuração `custom` quando solicitado ao selecionar o tipo de instalação. Certifique-se de que esses itens estejam marcados:\n\n- `Android SDK`\n- `Android SDK Platform`\n- `Performance (Intel ® HAXM)`\n- `Android Virtual Device`\n\n### Instalando o Android SDK\n\nO Android Studio instala o último SDK do Android por padrão. Uma aplicação **React Native**, no entanto, requer o SDK do Android 6.0 (Marshmallow) em particular. SDKs Android adicionais podem ser instalados através do SDK Manager no Android Studio.\n\nO SDK Manager pode ser acessado em `Appearance & Behavior → System Settings → Android SDK`.\n\nSelecione a guia `Plataformas SDK` dentro do SDK Manager, em seguida marque a caixa ao lado de `Show Package Details` no canto inferior direito. Procure e expanda a entrada do Android 6.0 (Marshmallow), então verifique se os seguintes itens estão marcados:\n\n- `Google APIs`\n- `Android SDK Platform 23`\n- `Intel x86 Atom_64 System Image`\n- `Google APIs Intel x86 Atom_64 System Image`\n\nEm seguida, selecione a guia `SDK Tools` e marque a caixa ao lado de `Show Package Details` aqui também. Procure e expanda a entrada `Android SDK Build-Tools`, então verifique se o **23.0.1** está selecionado.\n\n\n## Variáveis de ambiente (Android)\n\nSe vai utilizar a plataforma **Android**, precisa ter algumas variáveis de sistema. \n\nNo caso do **Mac** e **Linux** basta adicionar no arquivo `$HOME/.bash_profile`:\n```\nexport ANDROID_HOME=$HOME/Library/Android/sdk\nexport PATH=$PATH:$ANDROID_HOME/tools\nexport PATH=$PATH:$ANDROID_HOME/platform-tools\n```\n\nou se for no **Windows**, configure a variavel `ANDROID_HOME`. [Veja aqui como configurar](https://www.java.com/pt_BR/download/help/path.xml) uma variavel de ambiente no windows.\n\n## Criando a aplicação\n\nTendo os pré-requisitos instalados e no caso do **Android**, as variáveis de ambiente configuradas. Agora podemos criar o nosso **hello world** com o `cli` do **React native**.\n\nSe ainda não tem o `cli` instalado, basta instalar pelo `npm`.\n\n```\nnpm install -g react-native-cli\n```\n\nAgora basta executar o comando `init`, com o nome do projeto.\n\n```\nreact-native init helloworld\n```\n\n## Rodando a aplicação\n\n### IOS\n\nNo **IOS** é bem simples, basta entrar na pasta do projeto e executar `run-ios`.\n\n```\ncd helloworld\nreact-native run-ios\n```\n\n### Android\n\nNo caso do **Android**, teremos que iniciar um dispositivo Android antes de executar `run-android`. Podendo ser um dispositivo físico ou você pode usar um dispositivo virtual que permite que você simule um dispositivo Android em seu computador.\n\n**Usando um dispositivo físico** - Se você tem um dispositivo físico, você pode usá-lo para o desenvolvimento no lugar de um AVD conectando-o ao seu computador usando um cabo USB e seguindo as [instruções aqui](https://facebook.github.io/react-native/docs/running-on-device.html).\n\n**Usando um dispositivo virtual** - Você pode ver a lista de dispositivos virtuais de Android (AVDs) disponíveis abrindo o `AVD Manager` no Android Studio. Procure um ícone que se pareça com isto: ![ícone AVD](/hemersonvianna/assets/img/site/articles/icon-avd.png)\n\n**Android Studio AVD Manager** - Se você acabou de instalar o Android Studio, provavelmente será necessário criar um novo **AVD**. Selecione `Create Virtual Device`, depois escolha qualquer telefone na lista e clique em `Next`.\n\nCom o dispositivo pronto, podemos continuar.\n\n```\ncd helloworld\nreact-native run-android\n```\n\n## Conclusão\n\nPode parecer complicado no começo (me refiro ao Android :D). Mas tem uma solução mais rápida com o `Create React Native App`.\n\nÉ a maneira mais fácil de começar a criar um novo aplicativo **React Native**. Ele permite que você inicie um projeto sem instalar ou configurar ferramentas - não é necessária nenhuma instalação **Xcode** ou **Android Studio**.\n\nPrecisará do **Node** instalado e instalar:\n\n```\nnpm install -g create-react-native-app\n```\n\nE depois:\n\n```\ncreate-react-native-app helloworld\n\ncd helloworld\nnpm start\n``` \n\nInstale o aplicativo do [Expo client](https://expo.io/) no seu telefone [iOS](https://itunes.apple.com/us/app/expo-client/id982107779?mt=8) ou [Android](https://play.google.com/store/apps/details?id=host.exp.exponent&hl=pt_BR) e conecte-se à mesma rede sem fio que o seu computador. Usando o aplicativo **Expo**, analise o código QR do seu terminal para abrir seu projeto.\n","categories":["react-native"]},{"title":"Começando com React Native","url":"/hemersonvianna/artigos/react-native/comecando-com-react-native/","content":"\nNa [ReactConf 2015](http://conf2015.reactjs.org/), que rolou nos dias 28 e 29 de janeiro de 2015, foi feito o anúncio do **React Native**. Tendo o seu [primeiro release no Github](https://github.com/facebook/react-native/releases/tag/v0.1.0) no dia 27 de Março de 2015.\n\n## Desenvolvimento móvel nativo\n\nAntes de tudo, precisamos escolher uma plataforma. \n\nA plataforma Android, por ter ferramentas gratuitas já oferece para muitos desenvolvedores que tem pouco dinheiro para investir, uma grande oportunidade.\n\nMesmo que apps android contém 85% do mercado de usuários do planeta. Quando você cria apps iOS baseado-se em compras por meio no aplicativo, você tem como benefício a chance de gerar lucros de até 4 vezes maior do que Android.\n\nTemos que olhar as características de cada um..\n\n### Android\n\n- Utiliza a linguagem Java.\n- Apps Android são baixados com maior frequência e números do que outras plataformas.\n- Para Publicar seu trabalho, é cobrado uma taxa fixa de apenas US$ 25 dólares.\n- Muitos países emergentes estão adotando a desenvolvimento Android como Brasil, índia, África, China dentre outros.\n- Por se tratar de código aberto, você corre risco de sofrer com problemas de Malware.\n- Taxas altas de fragmentação da indústria por conta da grande quantidade de fornecedores e quantidade de aparelhos no mercado.\n- Lucratividade da loja Google Play menor em comparação ao iOS.\n\n### IOS\n\n- Utiliza linguagens de programação como Objective-C e Swift.\n- Usuários iOS são normalmente muito leais, significa uma base de usuários ativa e constante.\n- Usuários mais dispostos a gastar dinheiro.\n- Para publicar seu trabalho na plataforma, você terá que gastar cerca de US$ 99 dólares.\n- Seu app passará por um processo rigoroso que pode levar um bom tempo antes de ser aprovado.\n- A concentração desses usuários são de maioria dos EUA, um pouco na China e na Europa.\n\n### Resultado\n\nSimplesmente a nível de desenvolvimento com uma pessoa, teríamos que escolher um. Pois seria um trabalho dobrado que demandaria muito tempo de aprendizado e desenvolvimento.\n\nE a nível de empresa, comparando com um desenvolvimento móvel web, os custos são mais altos no desenvolvimento e manutenção, demandando mais pessoal e tempo para manter os códigos iOS e Android separadamente. E consequentemente, linguagens diferentes em plataformas distintas geram comportamentos.\n\n## A solução(?)\n\nSurgiram os frameworks para desenvolvimento híbrido (ex: [Cordova](https://cordova.apache.org), [Xamarin](https://www.xamarin.com), [PhoneGap](http://phonegap.com), [Intel XDK](https://software.intel.com/en-us/intel-xdk), [Ionic](https://ionicframework.com) e [Sencha Touch](https://www.sencha.com/products/touch)). Eles permitem compilar o mesmo projeto em ambas as plataformas.\n\nEsses frameworks utilizam HTML, CSS e JavaScript. Eles operam em cima de uma **WebView** (página Web simulando uma aplicação nativa).\n\nDessa forma, o desempenho é inferior e a interação gráfica com o usuário pode não ser satisfatória.\n\n## Arquitetura\n\n<table style=\"display:inline-table;\">\n  <tbody>\n    <tr>\n      <td style=\"vertical-align: top; width: 33%; border: 0; padding: 4px; background: #fbfbfd;\">\n        <table style=\"display:inline-table; margin-bottom: 0; background: #fff\">\n          <thead>\n            <tr>\n              <th style=\"text-align:center;\">Nativo</th>\n            </tr>\n          </thead>\n          <tbody style=\"font-size: 14px; text-align: center;\">\n            <tr>\n              <td style=\"vertical-align: top; padding: 0;\">\n                <table style=\"display:inline-table; margin-bottom: 0;\">\n                  <tbody style=\"font-size: 14px; text-align: center;\">\n                    <tr>\n                      <td style=\"text-align:center; padding: 0; border: 0;\">\n                        <table style=\"display:inline-table; margin-bottom: 0;\">\n                          <tbody style=\"font-size: 14px; text-align: center;\">\n                            <tr>\n                              <td style=\"text-align:center; border: 0;\">Aplicação</td>\n                              <td style=\"border: 0;\">&nbsp;</td>\n                              <td style=\"border: 0;\">&nbsp;</td>\n                            </tr>\n                            <tr>\n                              <td style=\"text-align:center;\">Bibliotecas de terceiros</td>\n                              <td style=\"border: 0;\">&nbsp;</td>\n                              <td style=\"border: 0;\">&nbsp;</td>\n                            </tr>\n                            <tr>\n                              <td colspan=\"2\" style=\"text-align:center;\">SDK de desenvolvedores, bibliotecas padrão</td>\n                              <td style=\"border: 0;\">&nbsp;</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style=\"text-align:center;\">Sistema operacional móvel (IOS, Android, etc...)</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n      <td style=\"vertical-align: top; width: 33%; border: 0; padding: 4px; background: #fbfbfd;\">\n        <table style=\"display:inline-table; margin-bottom: 0; background: #fff\">\n          <thead>\n            <tr>\n              <th colspan=\"2\" style=\"text-align:center;\">Híbrido</th>\n            </tr>\n          </thead>\n          <tbody style=\"font-size: 14px; text-align: center;\">\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center;\">Aplicação</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center;\">Framework para desenvolvimento móvel (ex: Cordova)</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center;\">Bibliotecas compatíveis com os Frameworks</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center;\">WebView API</td>\n            </tr>\n            <tr>\n              <td style=\"text-align:center;\">IOS SDKs</td>\n              <td style=\"text-align:center;\">Android SDKs</td>\n            </tr>\n            <tr>\n              <td style=\"text-align:center;\">IOS</td>\n              <td style=\"text-align:center;\">Android</td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n      <td style=\"vertical-align: top; width: 33%; border: 0; padding: 4px; background: #fbfbfd;\">\n        <table style=\"display:inline-table; margin-bottom: 0; background: #fff\">\n          <thead>\n            <tr>\n              <th colspan=\"2\" style=\"text-align:center;\">React native</th>\n            </tr>\n          </thead>\n          <tbody style=\"font-size: 14px; text-align: center;\">\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center; border-bottom: 0;\">Aplicação</td>\n            </tr>\n            <tr>\n              <td style=\"vertical-align: bottom; padding: 0; border-top: 0;\">\n                <table style=\"display:inline-table; margin-bottom: 0;\">\n                  <tbody style=\"font-size: 14px; text-align: center;\">\n                    <tr>\n                      <td colspan=\"2\" style=\"text-align:center; border: 0;\">&nbsp;</td>\n                    </tr>\n                    <tr>\n                      <td style=\"border: 0;\">&nbsp;</td>\n                      <td style=\"text-align:center;\">Bibliotecas de terceiros</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n              <td style=\"text-align:center; padding: 0;\">\n                <table style=\"display:inline-table; margin-bottom: 0;\">\n                  <tbody style=\"font-size: 14px; text-align: center;\">\n                    <tr>\n                      <td style=\"border: 0;\">&nbsp;</td>\n                      <td colspan=\"2\" style=\"text-align:center; border: 0;\">Pacotes NPM (ex: React)</td>\n                    </tr>\n                    <tr>\n                      <td style=\"border: 0;\">&nbsp;</td>\n                      <td style=\"border: 0;\">&nbsp;</td>\n                      <td style=\"text-align:center;\">Componentes RN de terceiros</td>\n                    </tr>\n                    <tr>\n                      <td style=\"border: 0;\">&nbsp;</td>\n                      <td colspan=\"2\" style=\"text-align:center;\">React native</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td style=\"text-align:center;\">IOS / Android SDKs</td>\n              <td style=\"text-align:center;\">JS Runtime</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\" style=\"text-align:center;\">IOS / Android</td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## Conclusão\n\nO **React native** revolucionou, já que o código gerado pelo **React** pode ser reaproveitado em até 100% entre as plataformas, fazendo com que o custo e duração do projeto caia pela metade.\n\nEle compila o projeto nativamente, aproveitando 100% dos recursos do dispositivo e sistema operacional. O desenvolvedor tem acesso nativamente a toda API.\n","categories":["react-native"]},{"title":"Fluxo e versionamento semântico com Git","url":"/hemersonvianna/artigos/git/fluxo-e-versionamento-semantico-com-git/","content":"\nHoje vou falar sobre algo bem interessante, que deixa o versionamento do nosso código bem organizado. Estão em dia com os assuntos `Semantic Version` e `Git flow`?\nAposto que já utilizou essas regras, mas não tinha um conhecimento mais profundo sobre o assunto, ou já sempre utilizou seguindo à risca.\n\nJá conheço e sigo o `Git flow`, a um bom tempo. Inclusive um dos meus projetos no [github](https://github.com/doc-solutions/documentation-gitflow) é sobre a documentação do mesmo. Não reinventei a roda, é mais para ter um registro de fácil acesso, para futuras explicações ou consultas.\n\nSobre `Semantic Version`, o [site oficial](http://semver.org/lang/pt-BR/) que está na versão `2.0.0`, explica com detalhes as regras.\n\nEstudando os conteúdos acima, basta ter uma disciplina inicial para os processos e regras.\n\n## Tomada de decisões\n\nMuitas perguntas podem surgir na cabeça com algumas situações. Vou ilustrar algumas.\n\n1) Digamos que estamos na versão 2.2.0 na branch `master`. Estamos planejando um novo recurso (feature), então a próxima versão deve se tornar 2.3.0.\nEm seguida, o cliente relata um bug crítico, forçando-nos a preparar um `hotfix`. Nós corrigimos o bug e colidimos a versão para 2.2.1. Mas, dados os 'insights' obtidos com a correção do bug, agora percebemos que talvez precisamos quebrar a API pública para que a feature funcione da maneira que queremos. E se fizermos isso, não devemos mais colidir com a versão 2.3.0. Em vez disso, devemos mover para a versão 3.0.0.\n\n> **Regra:** A alteração de versão ocorre quando nós nos ramificamos do desenvolvimento para o release, ou quando nos ramificamos do master para a branch de hotfix.\n\n2) Convenção de nomenclatura na branch de `dev`. Uma vez que todas as mudanças nas outras branchs devem ser mescladas de volta para `dev`, acho que a nomeação deve refletir que `dev` é praticamente sempre a versão mais recente do produto. Por isso, é interessante usar a convenção `a.b.c-wip.d`, onde `wip` (work-in-progress) significa trabalho em andamento e `d` é o número da compilação (build).\n\n> **Regra:** Sempre certifique-se de que o número de versão na branch de dev está em sincronia com o número mais recente em qualquer branch de hotfix ou release.\n\nExemplo:\n\nA branch de `dev` estava em 1.2.0-wip.123 quando criamos a branch `hotfix` (hotfix/1.2.1). Seguindo a última regra, quando nós juntamos de volta a branch de `dev`, ele é será 1.2.1-wip.x.\n\nEsta regra pode ficar complicada quando estamos trabalhando em um `hotfix` e uma branch de `release` simultaneamente. Na maioria dos casos, o número de versão da branch de `release`  deve superar a de `hotfix`. Especialmente porque provavelmente queremos mesclar alterações da `hotfix` de volta para a branch de `release` antes de envolvê-lo.\n\n3) Convenções de nomenclatura nas branches de `release`. Eu não espero que os `releases` permaneçam nesta branch por muito tempo, então o ciclo de vida completo de alpha/beta/rc1/rc2 parece um exagero. No final, podemos usar o rc-prefixo, o que leva à seguinte notação: `a.b.c-rc.d`. Novamente, `d` é o número de compilação (build).\n\nVamos continuar com o exemplo. Nós decidimos quebrar a API, então criamos uma nova branch de `release` (release/2.0.0). A primeira marca nesta branch deve então ser `2.0.0-rc.x`, onde `x` é o número de compilação. Mas o que deveria ser `x` neste caso? Isso traz a questão sobre quando o contador deve ser redefinido, se alguma vez.\n\nVamos examinar uma alternativa:\n\n> **Alternativa:** Redefinir o contador de compilação sempre que o número de versão for colidido\n\nJuntamente com o número de versão, isso garante exclusividade. Também parece muito mais agradável, já que o número de compilação raramente atingirá além de três dígitos.\n\nNo entanto, ele introduz um outro problema: lembrar de redefinir o contador sempre que você alterar o número da versão. Ou, se vamos para a automação completa, como detectar quando o número da versão mudou.\n\n> **Regra:** Assegure-se de que cada tag de controle de versão seja exclusivo no repositório.\n\n## Exemplo passo a passo\n\n| Atividade do projeto                                                                                                                           | Tag                         |\n| ---------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------- |\n| O projeto começa, o master está vazio e estamos fazendo o commit do nosso primeiro recurso no desenvolvimento                                  | 0.0.0-wip.1                 |\n| É feito o commit da tarefa `A` na branch `develop` de uma branch `feature`                                                                     | 0.0.0-wip.2                 |\n| Correção rápida de erros diretamente no desenvolvimento                                                                                        | 0.0.0-wip.3                 |\n| É feito o merge da tarefa `B` em `develop` de uma branch `feature`                                                                             | 0.0.0-wip.4                 |\n| Primeiro 'minor release'! Uma Branch é criada a partir de `develop` (release/0.1.0) e reseta o contador da compilação                          | 0.1.0-rc.1                  |\n| Mais um commit foi necessário                                                                                                                  | 0.1.0-rc.2                  |\n| Para manter o desenvolvimento sincronizado, fizemos o merge da branch 'release' de volta, criando um commit de mesclagem                       | 0.1.0-wip.3                 |\n| Um membro da equipe faz um commit de um recurso `C` em `develop`                                                                               | 0.1.0-wip.4                 |\n| Release em produção: fizemos o merge de release/0.1.0 em `master` e `develop`                                                                  | 0.1.0-release.5 0.1.0-wip.6 |\n| É feito um commit de uma pequena refatoração em `develop`                                                                                      | 0.1.0-wip.7                 |\n| Um bug crítico é relatado na produção; Criar uma branch `hotfix`                                                                               | hotfix/0.1.1 0.1.1-hotfix.1 |\n| É feito o merge da versão atualizada de volta para `develop` e assim evitar duplicação de tags (uma vez que o contador tem que ser redefinido) | 0.1.1-wip.2                 |\n| Enquanto isso, outro commit de refatoração em `develop`                                                                                        | 0.1.1-wip.3                 |\n| O `hotfix` é finalizado                                                                                                                        | 0.1.1-hotfix.4              |\n| A ser feito o merge para `master` e `develop`                                                                                                  | 0.1.1-release.5 0.1.1-wip.6 |\n| É feito o merge de outra branch de `feature` em `develop`                                                                                      | 0.1.1-wip.7                 |\n| Outra `minor release`. Criaremos a branch `release/0.2.0` de `develop` e resetamos o contador da compilação (build)                            | 0.2.0-rc.1                  |\n\n## Conclusão\n\nPode ficar confuso de início, se não estiver familiarizado com o processo. Mas nada melhor que a prática. Então, crie o seu repositório de testes e comece a praticar. Tendo mais exemplos para ilustrar, estarei atualizando esse artigo ou criando um novo sobre o assunto. Feedbacks e novos cenários, são bem-vindos.\n","categories":["git"]},{"title":"O ano que mudou a minha vida","url":"/hemersonvianna/artigos/personal/o-ano-que-mudou-a-minha-vida/","content":"\nHá exatamente 1 ano, eu estava partindo para a carreira solo, saindo da empresa que eu estava, para me dedicar aos planos pessoais. Depois de 11 anos de trabalho em algumas áreas e empresas sem férias, estava na hora de tirá-las.\n\nPara o artigo não ficar muito extenso, serei o mais direto possível, para explicar o tema desse texto. Então, vamos aos tópicos.\n\n## Os males do estresse \n\nUm grande defeito de algumas pessoas que são **Workaholics**, como eu, está em se preocupar demais. Se por um lado, algo é muito importante para você, sendo natural que a preocupação seja grande, por outro, precisamos entender que na vida é necessário se ter um equilíbrio e dosagem.\n\nPrincipalmente no trabalho, com prazos curtos, trajeto complicado e falta de harmonia de pensamentos na elaboração de projetos, podem provocar um grande estresse.\n\nTem o artigo [lidando com o estresse de programadores](http://imasters.com.br/desenvolvimento/lidando-com-o-estresse-de-programadores/), bem legal, que fala sobre estresse e dá algumas dicas para lidar com o assunto.\n\nInfelizmente, as vezes só aprendemos, errando. O erro que eu dexei acontecer, foi consentir que o estresse ultrapassasse o limite. Com isso, a qualidade de vida e a motivação foram para o espaço.\n\n## Cirurgia e recuperação\n\nNo dia 16 de junho de 2015, dei entrada no hospital com fortes dores nos rins. Espero que niguém sinta as dores de se ter cálculos renais(Pedras nos rins). Assim, sendo submetido ao procedimento de [Ureterorrenolitotripsia](http://urologiamoderna.com.br/features/ureterolitotripsia-com-duplo-j/). Chega de lembrar, né? :/ \n\nTive que conviver com o catéter duplo J, por alguns longos dias. Conseguindo me livrar dele, por volta do dia 15 de julho. Basicamente, o primeiro mês de carreira solo, não foi muito glamuroso. :/\n\nPortanto, beba bastante água, não fique só no café. Acredite, estou sendo muito seu amigo, para que não conheça essa dor.\n\n## Teoria do caos\n\nCom base na lei da [Teoria do caos](http://mundoestranho.abril.com.br/materia/o-que-e-a-teoria-do-caos), devemos ter cuidado até com os pequenos detalhes. E quando vemos pequenas ou grandes situações, que preferimos ignorar?\n\nMuitos meses com o estresse elevado, poucas horas de sono, não bebendo água e mais alguns fatores. O que isso pode resultar? \n\nA teoria é simples, mas na prática, nem sempre tratamos como se deveria, o nosso corpo ou mente.\n\nEntão em julho de 2015, estava no meu pior estado psicológico. No mesmo período estava acontecendo aqueles assaltos com facas no centro da cidade, que foi bem noticiado na TV. Mais um fator que se somou.\n\nO resultado foi ter um príncipio(chamo assim, porque não busquei ajuda médica) de [síndrome do pânico](http://www.minhavida.com.br/saude/temas/sindrome-do-panico). Felizmente, só tive uma vez a crise, mas suficiente para repensar algumas opiniões. As vezes não vemos a gravidade desses assuntos que envolvem nossa mente. \n\nApós esse evento, foi difícil sair de casa, demorou algumas semanas e até meses para isso. Você não ter controle do que quer fazer, é **punk**. Não façam como eu fiz, nessas situações, procurem ajuda.\n\n## Momento decisivo\n\nO que eu amo fazer se tornou algo muito estressante, que é mexer com o desenvolvimento web. Então, tomei a decisão de largar isso e começar a pensar em outra área. Não via outra saída, já que continuar na mesma área, despertava um estresse por acumulação.\n\nAlguns amigos tentaram fazer com que eu mudasse de ideia. Em todo esse período só fiz um freelance, usando AngulaJS, a convite do meu amigo **Allan Batista**. Ao final do mesmo, vi que não conseguia separar estresse de desenvolvimento. Assim, saindo de algumas sociedades e recusando trabalhos.\n\nEsse foi o **ponto zero**, se não me engano, foi no meio do mês de setembro. Assim, depois de muito refletir, tinha que tomar uma decisão. Decidi que iria continuar na área, mas tinha que resolver a questão do estresse.\n\n## Um novo capítulo\n\nDecidido a continuar fazendo o que gosto, comecei a me dedicar aos projetos de código aberto e a escrever mais artigos para o meu blog.\n\nEm outubro, viajei para **Argentina** e **Foz do Iguaçu**. Como ainda estava no início do processo de equilíbrio, não aproveitei 100%, mas foi bem bacana, conheci as **Cataratas** dos dois lados e outros lugares.\n\nPara me ajudar também, fiz alguns projetos para ajudar amigos. Fazendo desde layouts no photoshop(tenho um pé no design) até a programação.\n\nComo tinha um dinheiro guardado, pude me dar ao \"luxo\" de tirar todo esse tempo para mim, não fazendo freelas ou trabalhando.\n\nOutra coisa que me ajudou bastante, foi começar a reforma da minha casa. Assim, com todos esses objetivos, começou um novo capítulo na minha vida.\n\n## Projetos\n\nAté o final de 2015, o estresse ainda estava muito presente, mas seguia com os meus planos. A reforma da casa, teve o seu fim de fato, no começo de abril desse ano. Já posso colocar no curriculo: Pedreiro, pintor e decorador . :) :p \n\nAlgumas dezenas de artigos escritos, dezenas de repositórios criados, ajudei alguns amigos, muito estudo e código desenvolvido. Acredito que isso resume o que foi feito no meu último ano. \n\nColoquei a Descco(atual nerdcalistenico.github.io), como o meu site principal. Sendo uma ideia que tive em 2011, que significa **Desenvolvimento Estratégico e Criativo da Comunicação**. Não é uma empresa ou algo que tenha fins lucrativos. Simplesmente, queria criar um grupo, pois gosto de falar e mexer com outras coisas que não são da área web. Então, não fazia sentido colocar no meu blog, senão iria ficar muito confuso.\n\nAlém desse blog, também tenho o [IMHO Movies](/imhomovies), que dou a minha opinião sobre filmes que vejo, principalmente no cinema. Gosto muito de filmes e **IMHO(In My Humble Opinion)**, traduzindo seria **Em minha humilde opinião**.\n\nTenho outros blogs, mas esses são os principais que dou mais atenção. E a **Descco**, só existe para reunir meus blogs e projetos de código aberto. Nenhuma pretensão de virar empresa ou algo do tipo.\n\nDigamos que sou bem ligado em organização, por isso criei toda essa estrutura. No [link](http://nerdcalistenico.github.io/projetos/), você pode ver a minha separação para os meus repositórios no [Github](https://github.com/hemersonvianna), com uma breve descrição. Gosto de seguir o estilo de cada coisa em seu lugar. #organizacao\n\n## Qual foi a mudança?\n\nPrimeiramente, na forma de pensar e ter mais certeza de dosar as coisas. Acredito que a maioria das pessoas conhecem a teoria da qualidade de vida, mas praticar é outra história. Principalmente quem é muito novo, nem pensa nisso. Mas devemos nos preocupar. Desenvolvedor gosta de café? Sim, mas também deixe uma garrafa de água do lado e beba. :)\n\nO trabalho está corrido e prazos complicados? Se isso for constante e não há mudanças, comece a criar novas opções. \n\nVocê gosta muito de trabalhar com o que gosta? Se sim, por mais que seja bom, é preciso ter equilíbrio. Tenha boas noites de sono, se desligue do trabalho nos momentos de lazer. Isso te ajuda a ser eficaz e até mais eficiente no trabalho, do que o contrário.\n\nFora a forma de pensar e experiência adquirida, ter o meu **Dojo particular**(Github), me trouxe muita satisfação.\n\nVocê trabalha em uma empresa por alguns anos, e por N motivos você sai da empresa. E seu código e experiência em alguns casos, só ficam em sua memória. Isso era uma insatisfação que eu tinha. Olhar para trás e só ter lembranças, mas nada registrado em algum lugar ou algo do tipo. É claro, sendo feito dentro da empresa, tem que ficar só dentro da empresa. \n\nPorque não comecei com esses projetos paralelos antes? Por falta de cultura para fazer o mesmo. As vezes mesmo sabendo que é uma boa prática, acabamos deixando de lado por outras prioridades. E em sua maioria, o motivo é o trabalho principal.\n\n## A analogia\n\nO que é uma empresa para você? O que é uma mãe para você? Apenas refletindo sobre essas duas perguntas, você terá uma analogia muito boa.\n\nUma boa mãe te cria para o mundo, e uma boa empresa faz o mesmo. Em ambos os casos, existe o apoio e o fornecimento de recursos para o seu crescimento, tanto no pessoal, quanto no profissional. \n\nEntão, ter projetos paralelos ou um lugar que não seja ligado a sua empresa atual, não quer dizer que está querendo se desligar ou algo do tipo. \n\nTemos em várias empresas, o **Hackathon**, que é um evento onde os programadores se reúnem, para passar horas direto programando e trazendo novas ideias. Que é uma coisa muito legal e os projetos podem ou não, serem utilizados pela empresa que organiza.\n\nNem todas as ideias que os desenvolvedores tem, chega no nível de um evento desses ou ainda não estão maduras o suficiente na cabeça. Para isso temos o Github, onde podemos ter colaborações ou apenas criar um projeto e manter sozinho(a).\n\nVoltando a analogia, um funcionário ou um filho, normalmente tem uma sede de conhecimento e tem aquela vontade de mudar o mundo. Então, você tem uma pessoa que cria várias coisas, estuda e ainda faz bem os seus deveres. Que mal tem?\n\nAcredito que a única questão na analogia, é que uma hora você não vai morar mais com a sua mãe e em uma empresa você pode ficar até se aposentar. Nessas situações, cada caso é um caso, não precisamos entrar nesse detalhe.\n\nAs demais semelhanças vou deixar que você pense e reflita, para o tópico não ficar muito extenso. Mas só queria dizer que é uma via de mão dupla. A empresa apoia e dá recursos para o funcionário, e o mesmo evolui e entrega um bom trabalho. Assim, os dois crescem juntos. Se a parceria não for para sempre, mesmo assim os papéis foram cumpridos.\n\n## Considerações finais\n\nAs vezes em uma empresa, ficamos meses em um projeto. Se não tivermos o pensamento de pequenos projetos paralelos, que podem ser estudos ou até mesmo escrever um artigo, podemos ficar bem desatualizados.\n\nA organização que fiz no meu Github e os blogs, me trouxeram uma grande satisfação. Pra sempre terei os meus registros. Estando em uma empresa, posso levar essa experiência dos estudos que fiz e faço. Ao mesmo tempo que estarei focado nos projetos da empresa, poderei continuar atualizado e praticando. E isso é bom para a empresa e para mim. Imagina que você fica 1 ano só em um projeto grande que só usa **AngularJS** e foca 100% nisso. No próximo projeto, você precisa usar só **ReactJS**. E aí? Você pode dizer, que pelo menos ficou especialista em AngularJS? Respondo com esse [link](http://nomadev.com.br/ideia-javascript-isomorfico-universal/) e cito uma conversa do [Suissa](https://twitter.com/osuissa?lang=pt):\n\n> Suissa qual framework eu devo estudar agora: Angular ou React? (só lembrando que React, é uma biblioteca)\n> <cite> -- Desconhecido </cite>\n\n> Todos.\n> <cite> -- Suissa </cite>\n\n> Mas assim eu não vou ser especialista em nenhum!\n> <cite> -- Desconhecido </cite>\n\n> QUE ÓTIMO! Ninguém deveria ser especialista de framework, frameworks são todos iguais: entregam uma arquitetura pronta, por mais \"livre\" que seja.\n> <cite> -- Suissa </cite>\n\nVou deixar alguns links que talvez não tenha relação direta com o artigo, mas são bem interessantes:\n- [Você Conhece A Parábola Da Demissão Da Formiga Desmotivada?](https://www.linkedin.com/pulse/voc%C3%AA-conhece-par%C3%A1bola-da-demiss%C3%A3o-formiga-desmotivada-%C3%A1tila-honori)\n- [Não vale a pena contar pra ninguém os seus planos](http://incrivel.club/inspiracao-psicologia/nao-vale-a-pena-contar-pra-ninguem-os-seus-planos-50705/)\n\nE esse vídeo com o **Filipe**, que faz uma analogia bem legal, fala sobre código limpo e o que fazer quando as coisas não vão bem:\n- [Clean Code: 2 O que é código limpo?](https://youtu.be/ZVtGbO_CnfA?t=3m19s)\n\n## Conclusão \n\nUm ano passa rápido, acredito só ter dedicado menos da metade desse tempo, para os projetos do Github e blogs.\n\nEstamos iniciando o mês de julho, desde o mês passado comecei a buscar uma vaga para me realocar no mercado. Não vou dizer em que pé estou, mas espero ter boas notícias em breve.\n\nPosso dizer que o amor voltou, e depois de todo esse processo. Desenvolvimento web, será a minha paixão pra sempre. Quem quiser me ajudar em projetos ou quiser que eu ajude, pode falar. Vamos trocar conhecimento, que isso é o mais importante.\n\nRecentemente pediram para me definir em uma palavra, e me veio o verbo **aprender**. Se está desmotivado(a), busque aquela criança que está dentro de você, que quer mudar o mundo. Sei que estou motivado, quando a primeira palavra que vem a minha cabeça é **aprender**.\n\nPara finalizar, a dica que deixo é se mostre. Crie seu portfólio, participe de eventos, ajude os seus companheiros dos grupos, crie seus projetos e busque fazer o melhor na sua empresa ou onde estiver. Fazer algumas dessas coisas, não quer dizer que está buscando uma nova empresa.\n\nVocê aprende se mostrando, trocando ideias e ensinando. E na maioria das empresas, se tem o contrato de confidencialidade ou dezenas de pessoas mexendo no mesmo projeto. Assim, você não pode ter ajuda ou trocar ideias com um pessoal do Japão por exemplo, sobre um módulo sensacional que criou e nem disponibilizar para ajudar outras pessoas. (só um exemplo exagerado, mas você entendeu..) :)\n\nAgora, vamos programar!!! :) :p\n","categories":["personal"]},{"title":"Criando um guia de estilo para a interface","url":"/hemersonvianna/artigos/ui/criando-um-guia-de-estilo-para-a-interface/","content":"\nIndependente da área de atuação, é muito importante a organização. E na área web, mais especificamente no setor de design, a criação do `guia de estilo` é muito importante. Infelizmente, mesmo com os benefícios, muitos não começam ou cumprem essa etapa.\n\nVamos nos colocar no cenário em que temos um projeto web, independente do tamanho do mesmo. Existindo um guia de estilo, além de facilitar o trabalho posterior do designer, já deixa um padrão pronto para o desenvolvedor front-end.\n\nPartiremos de dois pontos de vista, simples.\n\n- **Primeiro caso:** O designer entrega 30 telas para o desenvolvedor front-end. O mesmo tem que olhar todas as telas, achar padrões, descobrir todas as cores, tamanhos e avaliar o que é específico ou não.  \n- **Segundo caso:** O designer entrega 30 telas e 1 guia de estilo para o desenvolvedor front-end. O mesmo só precisa olhar as telas por questão de conferência e precisa apenas seguir o guia de estilo, com os padrões do projeto.\n\nDe início, você pode pensar que todo o trabalho e a responsabilidade vai ficar com o designer, e o desenvolvedor front-end não terá trabalho. Errado, ele terá menos trabalho desnecessário. Afinal, quando você vai no restaurante e vai pedir um prato, você diz: - Me vê o terceiro prato da lista de almoço executivo. (E o garçom tem que olhar o cardápio para ver qual é) ... Não !!!\n\nEssa prática é necessária para que se tenha padrões na etapa de desenvolvimento. Agilizando o processo de atualização e manutenção do projeto. O designer terá o projeto centralizado, de fácil visualização e consulta. Assim, tendo menos trabalho na etapa de alterações e mudança completa do projeto, tendo padrões estabelecidos.\n\nPara a etapa do desenvolvimento front-end, o trabalho desnecessário não existirá mais. O foco poderá ser dado para a criação dos padrões na área de desenvolvimento, que trará os mesmos benefícios citados acima com relação a área de design.\n\n## Exemplo prático\n\nVamos supor que o designer inseriu um padrão para o título de cada página no guia de estilo. Vou exemplificar com a etapa do front-end.\n\n```scss\n// Utilizando o pré-processador SASS, com a sintaxe SCSS\n$base-font-family: Arial;\n$font-size-large: 24px;\n$font-size-regular: 18px;\n$color-typography-primary: #1c1e36;\n\n.title {\n  color: $color-typography-primary;\n  font-family: $base-font-family;\n  font-size: $font-size-large;\n  font-weight: 700;\n}\n\n.subtitle {\n  color: $color-typography-primary;\n  font-family: $base-font-family;\n  font-size: $font-size-large;\n}\n\n.text {\n  color: $color-typography-primary;\n  font-family: $base-font-family;\n  font-size: $font-size-regular;\n}\n\n```\n\nUm exemplo bem simples, mas é para demonstrar que um guia de estilo bem estruturado, influência nos padrões criados na etapa de desenvolvimento. Não é preciso saber o que acontece no código acima e a princípio não vou entrar nesse assunto. Apenas compare com o código abaixo:\n\n```css\n.title {\n  color: #1c1e36;\n  font-size: 24px;\n}\n\n.widget-title {\n  color: #1f213a;\n  font-size: 23px;\n}\n\n.text {\n  color: #1c1e35;\n  font-size: 18px;\n}\n\n```\n\nCalma!! Peço desculpas. Os pontos principais, não ficaram claros.\n\nA diferença mais notável é que antes usava variáveis, para centralizar o código e a manutenção ser mais prática. E o uso das mesmas vem do planejamento do desenvolvedor, as regras de negócio do projeto e o guia de estilo.\n\nO ponto que quis mostrar, é que mesmo centralizando o código, se não tem um guia de estilo, não faz efeito. As cores acima, tem um tom bem próximo um do outro. Será necessário ser criado uma variável para cada, então por isso na definição do guia de estilo, algumas coisas tem que ter uma avaliação se são viáveis. Como é o caso da fonte, onde se tem a diferença de 1 pixel. Isso vendo em pequena escala, parece ser uma coisa que se contorna facilmente, mas em grande escala, pode ser um grande problema. Principalmente, se não há muita comunicação entre a equipe de design e front-end.\n\nTeremos mais casos na sequência de artigos, que irão ilustrar melhor. Um caso em que se torna indispensável o uso de um guia de estilo é em um projeto que trabalha com mais de 1 tema. Mesmo para mim, sendo sempre indispensável.\n\nO maior problema já é resolvido na etapa de design. Com o designer criando padrões, não veremos layout como base em números `12.233` ou `201.17`, por exemplo. Você pode chegar para o desenvovledor, falar para desconsiderar e que pode arredondar. Acredite, pode dar problema. #pixelPerfect\n\nVamos pensar em um projeto com boxes idênticos visualmente, mas com medidas diferentes e você não tem contato com o designer. Com o tempo de desenvolvimento curto e o layout já foi aprovado. Levanta a mão quem já pegou um projeto assim? \\o/\n\n## Conclusão\n\nEssa foi uma pequena introdução para alertar sobre um dos problemas que dificultam o processo de um projeto web. \nPadrões salvam vidas. :) ...\n\nPode parecer que é algo óbvio, mas vejo em muitos lugares que essa etapa não tem o seu valor reconhecido. E tenho uma opinião radical, de que se começa errado, termina da mesma forma. Afinal, refazer é mais fácil que fazer? Isso sim, tem uma resposta óbvia.\n\nNos próximos artigos sobre o assunto, será mais trabalhado os detalhes sobre a importância e como compor um guia de estilo.\n","categories":["ui"]},{"title":"Começando com SASS","url":"/hemersonvianna/artigos/css/comecando-com-sass/","content":"\nSass (Syntactically Awesome Stylesheets) é um pré-prcessador de CSS, onde podemos definir variáveis ​​e reutilizá-las para um projeto inteiro. Você também pode gerar classes e reutilizar trechos de código com \"mixins\" ou \"estender\" suas classes com propriedades usadas anteriormente. Todos estes são análogos às funções em linguagens de programação, pois podemos aplicar os conceitos de programação orientada a objetos. \n\nSass consiste em duas sintaxes. A sintaxe original (.sass), chamado de sintaxe de indentação, usa uma sintaxe semelhante ao `Haml`. Ele usa indentação para bloco de código separados e caracteres de nova linha para separar regras. A sintaxe (.scss), usa bloco de formatação CSS, usando chaves para denotar blocos de código e ponto e vírgula após os valores das propriedades.\n\n```scss\n// SASS\n$font-stack:    Helvetica, sans-serif\n$primary-color: #333\n\nbody\n  font: 100% $font-stack\n  color: $primary-color\n\n// SCSS\n$font-stack:    Helvetica, sans-serif;\n$primary-color: #333;\n\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n\n\n```\n\nParticularmente eu prefiro a sintaxe (.scss), por ser mais próximo da sintaxe CSS.\n\n## Instalação\n\nPara utilizar o SASS, você precisa ter o [Ruby](https://www.ruby-lang.org/pt/downloads/), instalado na máquina. O [site do SASS](http://sass-lang.com/install), mostra 2 formas de instalação do mesmo. \n\nPraticamente sempre uso a forma, utilizando o terminal:\n\n```bash\ngem install sass\n```\n\nPara verificarmos se o mesmo está instalando, podemos conferir com o comando:\n\n```bash\nsass -v\n```\n\n## Utilização\n\nApós a instalação, se tem várias formas para rodar o pré-processador. Você pode usar um software como o [Koala](http://koala-app.com/), usar um automatizador de tarefas como [Grunt](http://gruntjs.com/) ([grunt-sass](https://github.com/sindresorhus/grunt-sass)) ou [Gulp](http://gulpjs.com/) ([gulp-sass](https://github.com/dlmanning/gulp-sass)), ou o próprio terminal.\n\nComo exemplo, podemos usar o terminal:\n\n- **watch ** - flag para que sempre quando tenha alteração dos arquivos .scss que estão sendo observados, seja gerado o css\n- **style.scss** - [caminho da pasta dos arquivos scss ou caminho + nome especifico do arquivo a ser observado]\n- **style.css** - [caminho da pasta de destino ou caminho + nome especifico do arquivo a ser gerado]\n\n```bash\n// sass --watch source/\n// sass --watch source/style.scss\n// sass --watch source/:dist/ \nsass --watch style.scss:style.css\n```\n\nUm ponto importante ao se observar uma pasta, é com relação aos arquivos que serão gerados. Digamos que na pasta `source/`, temos 3 arquivos e queremos que apenas 2 sejam gerados. Resolvemos isso com o prefixo `_`(undescore).\n\n```bash\n// _variables.scss\n// styleguide.scss\n// style.scss\n```\nNos arquivos que estão sendo observados, importamos o arquivo de variáveis.\n\n```scss\n// styleguide.scss\n// style.scss\n@import \"_variables\";\n```\n\n## Variáveis\n\nTodas as variáveis devem ser definidas usando um prefixo `$`.\n\n```scss\n// SASS\n$color-alpha: rgba(0,0,0,0.8)\n$color-typography-primary: #ffffff\n$font-size-large: 32px\n\n.title\n  background: $color-alpha\n  color: $color-typography-primary\n  font-size: $font-size-large\n```\n\n```scss\n// SCSS\n$color-alpha: rgba(0,0,0,0.8);\n$color-typography-primary: #ffffff;\n$font-size-large: 32px;\n\n.title {\n  background: $color-alpha;\n  color: $color-typography-primary;\n  font-size: $font-size-large;\n}\n```\n\n```css\n/* CSS */\n.title {\n  background: rgba(0,0,0,0.8);\n  color: #ffffff;\n  font-size: 32px;\n}\n```\n\n## Seletores aninhados\n\nCom o Sass, você pode aninhar os seus seletores CSS, evitando a repetição de escrita. Mas cuidado, não podemos exagerar nos níveis, senão a manutenção fica inviável.\n\n```scss\n// SCSS\n// Não faça isso !!!!\nul {\n  li {\n    .link {\n      .text {\n        color : red;\n      }\n    }\n  }\n}\n```\n\n```css\n// CSS\nul li .link .text {\n  color: red;\n}\n```\n\nVamos para a boa prática e também utilizar o caractere `&`, que representa o seletor pai.\n\n```scss\n// SCSS\n.link {\n  color: blue;\n\n  &:hover {\n    color: yellow;\n  }\n\n  &:before {\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid #f00;\n    content: \"\";\n    display: inline-block;\n    height: 0; \n    width: 0;\n  }\n}\n\n.widget {\n  .link {\n    background: #a1a1a1;\n  }\n}\n```\n\n```scss\n// SASS\n.link\n  color: blue\n\n  &:hover\n    color: yellow\n\n  &:before\n    border-left: 10px solid transparent\n    border-right: 10px solid transparent\n    border-top: 10px solid #f00\n    content: \"\"\n    display: inline-block\n    height: 0\n    width: 0\n\n.widget\n  .link\n    background: #a1a1a1\n```\n\n```css\n/* CSS */\n.link {\n  color: blue;\n}\n.link:hover {\n  color: yellow;\n}\n.link:before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 10px solid #f00;\n  content: \"\";\n  display: inline-block;\n  height: 0;\n  width: 0;\n}\n\n.widget .link {\n  background: #a1a1a1;\n}\n```\n\n## Mixins\n\nOs mixins permitem que você reutilize propriedades CSS e seletores. No SCSS, precisamos definir o `@mixin` e atribuir um nome. Depois, podemos acrescentar algumas propriedades, criar uma classe ou elemento e utilizar com `@include`. Na sintaxe original, é um pouco diferente e podemos comparar abaixo:\n\n```scss\n// SASS\n=border-radius($radius)\n  -webkit-border-radius: $radius\n  -moz-border-radius:    $radius\n  -ms-border-radius:     $radius\n  border-radius:         $radius\n\n.box\n  +border-radius(10px)\n```\n\n```scss\n// SCSS\n@mixin border-radius($radius) {\n  -webkit-border-radius: $radius;\n     -moz-border-radius: $radius;\n      -ms-border-radius: $radius;\n          border-radius: $radius;\n}\n\n.box { @include border-radius(10px); }\n```\n\n```css\n/* CSS */\n.box {\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  -ms-border-radius: 10px;\n  border-radius: 10px;\n}\n```\n\n## Funções\n\nSemelhante a um `mixin`, as funções permitem parâmetros, mas não retornam trechos de código e sim um valor.\n\n```scss\n// SCSS\n$total-width : 100%;\n$total-columns : 12;\n\n@function x-gridsystem-width($columns) {\n  @return ($total-width / $total-columns) * $columns;\n}\n\n.box {\n  width: x-gridsystem-width(6);\n}\n```\n\n```scss\n// SASS\n$total-width: 100%\n$total-columns: 12\n\n@function x-gridsystem-width($columns)\n  @return ($total-width / $total-columns) * $columns\n\n.box\n  width: x-gridsystem-width(6)\n```\n\n```css\n/* CSS */\n.box {\n  width: 50%;\n}\n```\n\n## Extend\n\nCom SASS você pode fazer com que um selector herde os estilos de outro, sem duplicar as propriedades CSS. Tenha em mente que se você tem muitas propriedades duplicadas, você poderá enfrentar problemas de desempenho. Este recurso permite que você herde qualquer estilo já utilizado em qualquer classe anterior.\n\nVamos dizer que eu quero usar as propriedades de \".message\" em \".success\" e \".error\". Para atingir este objetivo é necessário criar \".success\" , \".error\" e acrescentar \"@extend .message\".\n\n```scss\n// SASS\n.message\n  border: 1px solid #ccc\n  padding: 10px\n  color: #333\n\n.success\n  @extend .message\n  border-color: green\n\n.error\n  @extend .message\n  border-color: red\n```\n\n```scss\n// SCSS\n.message {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: #333;\n}\n\n.success {\n  @extend .message;\n  border-color: green;\n}\n\n.error {\n  @extend .message;\n  border-color: red;\n}\n```\n\n```css\n/* CSS */\n.message, .success, .error, {\n  border: 1px solid #cccccc;\n  padding: 10px;\n  color: #333;\n}\n\n.success {\n  border-color: green;\n}\n\n.error {\n  border-color: red;\n}\n```\n\n## Placeholders\n\nO placeholder é semelhante ao `@extend`, com a diferença que ele funciona como uma variável (Se não for utilizado, não aparece no CSS final).\n\n```scss\n// SASS\n%message\n  border: 1px solid #ccc\n  padding: 10px\n  color: #333\n\n.success\n  @extend %message\n  border-color: green\n\n.error\n  @extend %message\n  border-color: red\n```\n\n```scss\n// SCSS\n%message {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: #333;\n}\n\n.success {\n  @extend %message;\n  border-color: green;\n}\n\n.error {\n  @extend %message;\n  border-color: red;\n}\n```\n\n```css\n/* CSS */\n.success, .error {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: #333;\n}\n\n.success {\n  border-color: green;\n}\n\n.error {\n  border-color: red;\n}\n```\n\n## Conclusão\n\nO CSS é muito importante para um projeto web. E é muito importante ter um pré-processador para organizar, reutilizar código e facilitar muito na manutenção. O SASS oferece muitos recursos e não vejo desvantagens, sendo comparado ao se escrever com apenas em CSS puro. Temos outros pré-processadores no mercado, e veremos em outros artigos.\n","categories":["css"]},{"title":"Começando com Wordpress","url":"/hemersonvianna/artigos/php/comecando-com-wordpress/","content":"\nO WordPress é um CMS(Content Management System), open source escrito em PHP e utiliza o banco de dados MySQL. O mesmo é o sucessor do **b2/cafelog**, criado por Michel Valdrighi, que foi lançado em 2001. Em 2002, o desenvolvimento do b2, se encerrou. E em 2003, um calouro universitário decidiu criar um `fork` do projeto. Matthew Mullenweg Charles, juntamente com Mike Little, começaram a criar o WordPress a partir do código do b2.\n\n## Pré-requisitos\n\n- PHP 5.6 ou superior\n- MySQL 5.6 ou superior\n- Módulo Apache mod_rewrite, ativo\n\n## Instalação\n\nO [download](https://wordpress.org/download/) da versão estável pode ser feito no site oficial. Apos o download, basta extrair o `.zip` no seu servidor.\n\n## Configuração\n\nPrimeiramente, você precisa criar um banco de dados **Mysql** e atribuir a um usuário as permissões necessárias. Agora é hora de navegar para o seu site para começar com o processo de instalação.\n\nVocê precisará informar algumas informações, como : \n\n- Nome do banco de dados\n- Nome do usuário do banco\n- Senha do banco \n- Servidor do banco de dados \n- Prefixo utilizado na criação das tabelas\n\nO nome do banco de dados, usuário e senha, você já saberá se fez o primeiro passo informado para a configuração. O servidor, dificilmente precisará ser alterado, podendo manter o valor `localhost`. Quanto aos prefixos das tabelas, só terá a necessidade de ser alterado, caso tenha múltiplas instalações com o Wordpress no mesmo banco de dados.\n\nApós preencher essas informações no formulário apresentado, basta submeter. Esses dados serão armazenados no arquivo `wp-config.php`, que estará na raiz do projeto. Caso queira fazer esse passo manualmente, basta renomear ou duplicar o arquivo `wp-config-sample.php`, que se encontra na raiz do projeto. Dentro do arquivo encontraremos:\n\n```php\ndefine('DB_NAME', '[nome_do_banco_de_dados]');\n\n/** Usuário do banco de dados MySQL */\ndefine('DB_USER', '[nome_de_usuario]');\n\n/** Senha do banco de dados MySQL */\ndefine('DB_PASSWORD', '[senha]');\n\n/** nome do host do MySQL */\ndefine('DB_HOST', 'localhost');\n\n// ...\n\n$table_prefix  = 'wp_';\n```\n\nO importante é que se tenha o arquivo `wp-config`, preenchido na raiz do projeto, para que seja identificado a instalação.\n\nPreenchendo as informações do banco de dados pelo navegador ou manualmente, logo após teremos o passo de preencher as informações básicas para o painel de controle. Esse passo, será feito pelo navegador. Informaremos o nome do site e os dados para a criação de um usuário para acessar o painel de controle do WordPress.\n\nAssim, temos uma instalação completa. Podemos fazer o login, para acessar o painel ou ver o site carregado com o tema padrão.s\n\n## Estrutura de pastas\n\n- **wp-admin./** - Contém os arquivos(PHP) do paindel de controle e normalmente não são alterados por usuários ou desenvolvedores\n- **wp-content/** - Contém os seus temas, plugins e conteúdo carregados e alterados quando você adicionar mídia, plugins e temas\n  - languages/\n  - plugins/\n  - themes/\n  - upgrade/\n  - uploads/\n- **wp-includes/** - Contém arquivos(PHP) do núcleo do WordPress e normalmente também não são alterados por usuários ou desenvolvedores\n- ...\n\n## Conclusão\n\nO WordPress é uma boa ferramenta para criação de blogs, para usuários sem muito conhecimento de desenvolvimento web e desenvolvedores experientes. Poupando tempo para criação de um painel de controle. Nos próximos artigos veremos mais sobre seus recursos.\n \n\n","categories":["php"]},{"title":"Começando com MongoDB","url":"/hemersonvianna/artigos/database/comecando-com-mongodb/","content":"\nO MongoDB é um tipo de banco de dados orientado a documentos, em vez de registros estritamente definidos e relacionamentos. Esse tipo de banco de dados foi apelidado de `NoSQL`(Not Only SQL). Um documento no MongoDb, agrupa objetos em coleções. Você pode pensar em uma coleção como uma tabela como você criaria em um banco relacional, mas a diferença é que não será forçado a definir um esquema para que possa armazenar alguma coisa. \n\nVocê pode incorporar um documento dentro de outro, o que é muito útil para os casos em que há uma relação de um para um. Em um típico banco de dados relacional, você precisa criar duas tabelas e ligá-los em conjunto com uma chave estrangeira para conseguir o mesmo resultado. NoSQL não suporta `joins`, mas se você organizar os dados corretamente, então você vai achar que você não precisa de um `join`.\n\nVale a pena mencionar o objetivo do MongoDB e do NoSQL não é acabar com o banco relacional. Bancos relacionais ainda são uma solução muito boa para a maioria das necessidades do mundo do desenvolvimento. Mas eles tem os seus pontos fracos, mais notadamente a necessidade de definir um esquema rígido para os seus dados, que o `NoSQL` tenta resolver. \n\nO MongoDB tem como característica ser open source, possuir alta performance, não possuir esquemas, ser escrito em C++, multiplataforma e ser formado por um conjunto de aplicativos JSON. O mesmo foi concluído em 2009 lançando assim a primeira versão do MongoDB.\n\nComparação dos conceitos em SQL e MongoDB:\n\n| SQL                          | MongoDB                         |\n| ---------------------------- | ------------------------------- |\n| Banco de dados (database)    | Banco de dados (database)       |\n| Tabela (table)               | Coleção (colection)             |\n| Linha (row)                  | documento ou documento BSON     |\n| Coluna (column)              | Campo (field)                   |\n| índice (index)               | índice (index)                  |\n| Table joins                  | documentos embutidos e linkados |\n| Chave Primária (primary key) | Chave Primária (primary key)    |\n\n\n## Instalação\n\nPara instalar o MongoDB precisamos fazer o [download](http://www.mongodb.org/downloads) no site oficial.\n\nPara mais detalhes sobre a instalação para as plaaformas, você pode ver nos links abaixo:\n\n- [Windows](https://docs.mongodb.org/master/tutorial/install-mongodb-on-windows/)\n- [OS X](https://docs.mongodb.org/master/tutorial/install-mongodb-on-os-x/)\n- [Linux](https://docs.mongodb.org/master/administration/install-on-linux/)\n\nÉ necessário que esteja adicionado o caminho da pasta `bin` do mesmo no **Path** do sistema. Se não já estiver adicionado, pode fazê-lo pela interface do sistema operacional ou pelo comando:\n\n```bash\n# ex: C:\\Program Files\\MongoDB\\Server\\3.2\\bin no windows\nexport PATH=\"$PATH:[caminho onde foi instalado]/bin\"\n```\n\nCom isso, podemos usar o comando `mongod` de qualquer lugar. O mesmo é usado para iniciar o servidor do MongoDB. Por default o MongoDB armazena seus bancos de dados no diretório `/data/db` (Linux e OS X) e `C:\\data\\db` (Windows). No Windows, `C:` é a unidade onde está executando o comando, se estiver por exemplo usando uma outra unidade como `E:`, a pasta deverá estar na mesma. Portanto, se iniciar o servidor do MongoDB e não tiver essa pasta, terá um erro no terminal.\n\nSe você quiser usar outra pasta, basta usar a flag `dbpath`, ao inciar o servidor:\n\n```bash\n# ex: mongod -dbpath=/home/hemersonvianna/mongodb\nmongod -dbpath=[caminho da pasta]\n```\n\n## Utilização\n\nAlém de iniciar o servidor como o comando `mongod`, também temos o comando `mongo`, para termos acesso ao shell. Ao iniciar o servidor, por padrão o mongo procura por uma base de dados na porta 27107, no seu localhost.\n\nAo iniciar o shell, por padrão ele utilizará o banco `test`:\n\n```bash \n$ mongo\nMongoDB shell version: 3.2.4\nconnecting to: test\n```\n\nPara selecionar ou criar uma base de dados, basta usar o comando `use [nome_da_base]`. Sempre que precisar checar em qual base está trabalhando, basta usar o comando `db`. Já para checar quais são as bases existentes, utilize o comando `show dbs` ou `show databases`.\n\n## Inserindo\n\nPara que a base seja criada com o comando `use`, é necessário utilizar o comando `INSERT`:\n\n```bash\nuse myTest\n#switched to db myTest\nuser = { name : 'Hemerson Vianna', description: 'Testando' }\ndb.users.insert(user)\n#WriteResult({ \"nInserted\" : 1 })\n```\n\nO mesmo também pode ser feito com o comando `SAVE`:\n\n```bash\nuse myTest\n#switched to db myTest\nuser = { name : 'Hemerson Vianna', description: 'Testando' }\ndb.users.save(user)\n#WriteResult({ \"nInserted\" : 1 })\n```\nUsamos o objeto `db`, que aponta para o banco de dados atualmente selecionado. Incluindo o documento `user` dentro da coleção `users`\n\n### A diferença entre `insert` e `save`.\n\nO comando `insert` apenas insere um documento. O comando `save` insere um documento, mas se o registro já tiver um `_id`, o comando faz a função de atualização.\n\n## Consultando\n\nPodemos consultar o que foi inserido com o comando `find` e podemos usar um filtro com o mesmo. \n\n```bash\n# O mesmo que SELECT * FROM list\ndb.list.find()\n# { \"_id\" : ObjectId(\"571f6bdd891bf653d4cc709d\"), \"name\" : \"Hemerson Vianna\", \"description\" : \"Testando\" }\n\n# Com filtro\n# O mesmo que SELECT * FROM list WHERE name=\"Hemerson Vianna\"\ndb.list.find({\"name\": \"Hemerson Vianna\"})\n# { \"_id\" : ObjectId(\"571f6bdd891bf653d4cc709d\"), \"name\" : \"Hemerson Vianna\", \"description\" : \"Testando\" }\n\n# Especificando os campos\n# O campo _id vem por padrão\n# O mesmo que SELECT _id, name FROM list\ndb.list.find({},{\"name\": 1})\n\n# Removendo o campo _id\n# O mesmo que SELECT name FROM list\ndb.list.find({},{\"name\": 1, \"_id\": 0})\n```\n\nAcrescentando o método `pretty()`, podemos exibir os resultados de um modo mais apresentável.\n\n```bash\ndb.list.find().pretty()\n```\n\nAlém do método `find()` há também o método `findOne()`, que retorna apenas o primeiro resultado da consulta.\n\n```bash\ndb.list.findOne({\"description\": \"Testando\"})\n```\n\nOperadores de comparação: \n\n- **equal** - `$eq` é o mesmo que `==`\n- **greather** - `$gt` é o mesmo que `>`\n- **greather than equal** - `$gte` é o mesmo que `>=`\n- **less than** - `$lt` é o mesmo que `<`\n- **less than equal** - `$lte` é o mesmo que `<=`\n- **not equal** - `$ne` é o mesmo que `!=`\n- **in** - `$in` é o mesmo que `IN()`\n- **not in** - `$nin` é o mesmo que `NOT IN()`\n\nOperadores lógicos:\n\n- **or** - `$or` é o mesmo que `OR`\n- **and** - `$and` é o mesmo que `AND`\n- **not** - `$not` é o mesmo que `NOT`\n- **nor** - `$nor` é o mesmo que `NOR`\n\nExemplos:\n\n```bash \ndb.users.find({\"age\":{\"gte\":29, \"lte\":31}});\n\ndb.users.find({\"name\":{\"ne\":\"Hemerson Vianna\"}});\n```\n\n## Atualizando\n\nVocê pode usar os métodos `update()` e `save()` para atualizar documentos dentro da coleção. Sendo que, o método `update()` atualiza valores em um documento existente, enquanto o método `save()` substitui o documento existente em si pelo documento passado dentro do método `save()`.\n\n```bash\n# Update\ndb.list.update({name: \"Hemerson Vianna\"}, {$set: {description: \"Testando 2\"}})\n```\n\nSe não utilizar o `$set` todos os dados do usuário como, nome e descrição, serão substituidos pela descrição \"Testando 2\", ou seja, o `$set` faz com que seja mantido todos os dados, e alterado apenas a descrição.\n\n```bash\n# save\ndb.list.save({\"_id\" : ObjectId(\"571f6bdd891bf653d4cc709d\"), description: \"Testando 2\"}})\n```\n\n## Removendo\n\nO método `remove()` é usado para remover um documento da coleção. Este método permite 2 parâmetros. O primeiro é o critério de exclusão e o segundo é a flag `justOne`. Se a flag estiver setada como true ou 1, o método removerá apenas um documento.\n\n```bash\n# Remove o registro com o valor informado\ndb.list.remove({name: \"Hemerson Vianna\"})\n\n# Remove todos os dados da coleção list\ndb.list.remove()\n```\n\n## Mais alguns comandos\n\n- **show collections** - mostra as coleções do banco\n- **db.createCollection(\"[nome da coleção]\")** - cria uma coleção\n- **db.[coleção].drop()** - deleta a coleção\n- **db.dropDatabase()** - deleta o banco atual\n\n## Conclusão\n\nQuerendo conhecer mais sobre um banco `NoSQL`, o MongoDB é uma das melhores opções. Nos próximos artigos, entraremos mais no assunto. \n","categories":["database"]},{"title":"Começando com Laravel","url":"/hemersonvianna/artigos/php/comecando-com-laravel/","content":"\nDe acordo com Taylor Otwell (criador), Laravel foi lançado em junho de 2011, simplesmente para resolver a falta de funcionalidades com o framework **CodeIgniter**. Que na época, era bem conhecido pela sua simplicidade e e documentação abrangente.\n\nLaravel se trata de um **Framework PHP**, que utiliza o padrão MVC. Vem com muitos recursos e é construído em muitos padrões, ajudando no desenvolvimento de aplicações seguras e performáticas de forma rápida. Possui algumas características que motivam na sua utilização como: facilidade de roteamento, arquitetura modular alimentado por Composer, comunidade ativa e solidária, boa dicumentação, sistema de templates (Blade), Artisan (CLI \"Command Language Interpreter\" do Laravel) e mais.\n\n## Instalação\n\nPré-requisitos:\n\n- PHP >= 5.5.9\n- OpenSSL PHP Extension\n- PDO PHP Extension\n- Mbstring PHP Extension\n- PHP Extension\n\n### Composer\n\nO composer é um controlador de dependências e você pode fazer a instalação do mesmo, das seguintes formas:\n\n```bash\n# via cURL\ncurl -sS https://getcomposer.org/installer | php\n\n# via PHP\nphp -r \"readfile('https://getcomposer.org/installer');\" | php\n```\n\nA instalação do Laravel, é simples com o comando:\n\n```bash\ncomposer global require \"laravel/installer\"\n```\n\nApós a instalação, será necessário adicionar o caminho do mesmo no **Path** do sistema. Pode fazê-lo, pela interface do sistema operacional ou pelo comando:\n\n```bash\nexport PATH=\"$PATH:$HOME/.composer/vendor/bin\"\n```\n\n## Primeiro projeto\n\nPara criar um novo projeto, usamos o comando:\n\n```bash\n# new [nome do projeto]\nlaravel new Example\n```\n\n## Configuração\n\nVou me basear na versão atual (5.2). Todos os arquivos de configuração se encontram na pasta `config`. Os valores de configuração podem ser acessados facilmente com a função global `config`. Os valores podem ser acessados, usando o nome do arquivo e a opção desejada por intermédio do caractere `.`. Exemplo:\n\n```php\n$value = config('app.timezone');\n```\n\nPara definir um valor em tempo de execução, passamos um `array`, na função `config`:\n\n```php\nconfig(['app.timezone' => 'America/Sao_Paulo']); \n```\n\n### Ambiente\n\nÉ sempre bom separar o ambiente de desenvolvimento e o ambiente de produção. O Laravel tora isso fácil, utilizando a biblioteca [DotEnv](https://github.com/vlucas/phpdotenv), criada por Vance Lucas. \n\nDurante a instalação do Laravel, via Composer, o arquivo `.env.example` é copiado para `.env`:\n\n```bash\nphp -r \"copy('.env.example', '.env');\"\n```\n\nNesse novo arquivo, teremos todas as varáveis que serão carregadas no `$_ENV`. Podemos utilizar a função `env`, para recuperar os valores dessas variáveis. Exemplo:\n\n```php \n// o segundo parâmetro é um valor default\n// que é usado quando não existe \n// nenhuma variável de ambiente\n// para a chave informada\n'debug' => env('APP_DEBUG', false)\n```\n\nO ambiente atual da aplicação é determinado através da variável `APP_ENV`, no arquivo `.env`. Podemos acessar esse valor com o método `environment`, da interface estática(facade) da classe `App`:\n\n```php \n$environment = App::environment();\n```\n\nTambém podemos passar argumentos para o `environment`, para verificação.\n\n```php \nif (App::environment('local')) {\n    // The environment is local\n}\n\nif (App::environment('local', 'staging')) {\n    // The environment is either local OR staging...\n}\n```\n\nPodemos também acessar pelo método auxiliar `app`:\n\n```php \n$environment = app()->environment(); \n```\n\n### Cache da configuração \n\nPara aumentar a velocidade da sua aplicação, podemos armazenar em cache os arquivos de configuração em apenas um arquivo. Isso é possível, usando o `config:cache`, do Artisan. Não se deve ser executado no ambiente de desenvolvimento, por ser frequentemente alterado. Então, para a implantação de produção, execute: \n\n```bash \nphp artisan config:cache\n```\n\n## Observações\n\nNa instalação via Composer, além da execução do comando para a criação do arquivo `.env`, também executado outros comandos. Um deles é o comando:\n\n```bash \nphp artisan key:generate\n```\n\nO mesmo cria uma chave no arquivo de ambiente, sendo o valor da varável `APP_KEY`. Se a chave da aplicação não estiver definida, as suas sessões de usuário e outros dados criptografados não serão seguros.\n\n## Estrutura de pastas\n\n- **app/** - Componentes da sua aplicação.\n- **bootstrap/** - Arquivos que inicializam o framework e configuram o autoloading.\n- **config/** - Arquivos de configuração do projeto.\n- **database/** - Contém os arquivos de `migration` e `seeds` do seu banco de dados, nas pastas `factories`, `migrations` e `seed`.\n- **public/** - É o seu DocumentRoot (toda requisição efetuada pelo usuário cairá nela).\n- **node_modules/** - Será criada na execução do comando `npm install`, na raiz do projeto.\n- **resources/** - Contém as suas views, raw assets (LESS, SASS, CoffeeScript), e arquivos de localização.\n- **storage/** - É responsável por armazenar os arquivos de uso interno do Laravel tais como: Cache, logs e etc.\n- **tests/** - Contém os arquivos de testes, para a aplicação.\n- **vendor/** - Gerada automaticamente pelo composer, é nela que encontramos as bibliotecas que farão com que o Laravel rode.\n– .env\n– .env.example\n– .gitattributes\n– .gitignore\n– artisan\n– composer.json\n– composer.lock\n– gulpfile\n– package.json\n– phpunit.xml\n– readme.md\n– server.php\n\n## Conclusão \n\nEssa é uma breve introdução ao Laravel, onde podemos fazer a instalação e criar um novo projeto. Nos próximos artigos, veremos coisas mais práticas e conheceremos mais sobre suas funcionalidades e etc.\n","categories":["php"]},{"title":"Começando com PowerShell","url":"/hemersonvianna/artigos/shell-ms-dos/comecando-com-powershell/","content":"\nPowerShell é um prompt de comando do sistema operacional Windows. É construído em cima do framework .NET e totalmente orientado a objetos. É fortemente integrado com uma grande quantidade de componentes do Windows.\n\n## Instalação\n\nA partir do Windows Server 2008 R2 e do Windows 7, o mesmo já vem instalado. Para as versões anteriores, pode ser [baixada](https://www.microsoft.com/pt-br/search/DownloadsDrillInResults.aspx?q=Windows+PowerShell&cateorder=1_5_2_11&ftapplicableproducts=Windows) gratuitamente para instalação.\n\n## Cmdlet (command let)\n\nA base do PowerShell são os cmdlets. A Microsoft fez várias estratégias de design na concepção de cmdlets no PowerShell. Primeiro é a capacidade de inferir facilmente nomes de cmdlet, ou pelo menos torná-los fáceis de se descobrir.\n\nOs cmdlets usam o formato verbo-substantivo como em `Get-Service`, `Stop-Service`, ou `Import-CSV`. O verbo do nome do cmdlet indica a ação a ser executada com o substantivo. Normalmente cmdlets são usados ​​para solicitar informações usando o verbo `Get`, como é o caso com `Get-Process` ou `Get-Content`. Em muitos casos, essas combinações de verbo-substantivo pode ser adivinhado ou previsto por causa da convenção de nomenclatura padrão.\n\nAlguns comandos básicos:\n\n- **Get-Location:** obter o diretório atual\n- **Set-Location:** alterar o diretório atual\n- **Copy-Item:** copiar arquivos\n- **Remove-Item:** remover um arquivo ou diretório\n- **Move-Item:** mover um arquivo\n- **Rename-Item:** renomear um arquivo\n- **New-Item:** criar um novo arquivo vazio ou diretório\n\n\n## Sintaxe\n\nAbaixo temos a sintaxe básica para começar a brincar com o PowerShell. :)\n\n### Vírgula e ponto e vírgula\n\nA vírgula é frequentemente usada para separar itens em uma lista. Considerando que o ponto e vírgula é usado para dividir ideias separadas.\n\n```bash\n$i=0\n$Log = Get-EventLog -List\nForEach ($Item in $Log) {\n  \"{0,-30} {1,-20} {2,13}\" -f `\n  $Item.Log, $Item.OverflowAction, $Item.MaximumKilobytes; $i++\n}\n```\n\n### Escape\n\nA crase representado como o caractere `` ` `` é o caractere de escape no PowerShell. Você pode usar esse caractere para guias exemplo de impressão `` `t `` ou escapar caracteres com um significado especial como o caractere $ como em `` `$ `` ou escapar citações como `` `\" ``.\n\nVocê também pode usar o caractere de crase para abranger as suas declarações em várias linhas, que às vezes pode vir a calhar.\n\n### Variáveis\n\nA declaração de variáveis no PowerShell é semelhante ao do PHP, com o prefixo `$`.\n\n```bash\n$example = 'teste'\n$age = 29\n```\n\n### Aspas duplas e simples\n\nEnquanto as asplas duplas interpretam o que está dentro, as aspas simples não interpretam e representam tudo de forma literal.\n\n```bash\n$example = 'ando'\nwrite 'test$example'\n# test$example\nwrite 'test$example'\n# testando\n```\n\n## Operadores de comparação\n\n- **Igual:** -eq\n- **Diferente:** -ne\n- **Maior do que:** -gt\n- **Menor do que:** -lt\n- **Maior igual a:** -ge\n- **Menor igual a:** -le\n- **Comparar com wilcards:** -like ou -notlike\n- **Comparar string com regex:** -match ou -notmatch\n- **Se um array contém um valor(pode ser string):** -contains\n\n## Operadores lógicos\n\n- **e:** -and\n- **ou:** -or\n- **ou exclusivo:** -xor\n- **negação:** ! ou -nor\n\n## Executando os scripts\n\nPor padrão, por uma questão de segurança, a possibilidade de execução de scripts Power Shell vem desabilitada. Para habilitar essa característica precisamos mudar a política de execução\n\nNo terminal do PowerShell, execute:\n\n```bash\nGet-ExecutionPolicy\n// O retorno deverá ser Restricted\n```\n\nPara permitir a execução de scripts sem qualquer restrição, utilizaremos a regra `Unrestricted`, que permite executar todo e qualquer script PowerShell.\n\n```bash\nSet-ExecutionPolicy Unrestricted\n```\n\nSerá exibida uma mensagem informando sobre a proteção quanto à execução de Scripts. Digite \"S\" e pressione `Enter`.\n\nAgora com o commando `Get-ExecutionPolicy`, veremos que o retorno será `Unrestricted`. Assim, os scripts PowerShell já podem ser executados de forma irrestrita.\n\nExistem outras regras além de `Unrestricted` e `Restricted`:\n\n- **AllSigned** – Todos os scripts devem ser assinados por alguém confiável.\n- **Remote Signed** – Todos os scripts que forem baixados da Internet devem ser assinados por alguém confiável.\n- **Bypass** - A responsabilidade da segurança fica totalmente a cargo do utilizador.\n\n## Conclusão\n\nEsse foi apenas umas simples introdução. A maioria dos assuntos merecem um artigo para cada tópico, entao estaremos vendo mais sobre o asunto nos próximos artigos. Sempre é bom conhecer uma linguagem que possamos mexer com o sistema operacional. \n","categories":["shell/ms-dos"]},{"title":"Começando com MySQL","url":"/hemersonvianna/artigos/database/comecando-com-mysql/","content":"\nMeu primeiro contato com banco de dados, foi em 2009, e foi com o MySQL. Um SGBD (Sistema Gerenciador de Banco de Dados) relacional e orientado a objetos, que pelo nome, já dá a pista que utiliza a linguagem SQL (Structured Query Language).\n\nCriado na Suécia e em 2008, a MySQL AB, desenvolvedora do MySQL, foi adquirida pela Sun Microsystems por US$ 1 bilhão. No dia 20 de Abril de 2009, foi anunciado que a Oracle compraria a Sun Microsystems e todos os seus produtos, incluindo o MySQL.\n\nMySQL é robusto, multiusuário, multitarefa e inicialmente desenvolvido para projetos de pequeno e médio porte. Alguns dos grandes motivos por ser muito utlizado, é por ser **open source** e a fácil integração com o PHP incluído. Tem compatibilidade com a maioria dos sistemas operacionais, por ter sido desenvolvido em C e C++.\n\n## Características do MySQL\n\nComo já foi citado, compatibilidade com várias plataformas como: Windows, Linux, Unix e outros. Suporte a várias linguagens como PHP, C, C++, Java, Python, Ruby e mais. Um bom sistema de senhas criptografadas flexível e segura. Suporte a ODBC (Open Database Connectivity), padrão que define um conjunto de interfaces que permitem o uso de linguagens de programação como Visual Basic, Delphi, Visual C++, Java, entre outras capazes de utilizar estas interfaces, para ter acesso a uma vasta gama de bases de dados distintas sem a necessidade de codificar métodos de acesso especializados.\n\nAlgumas outras características:\n\n- Excelente desempenho e estabilidade;\n- Pouco exigente quanto a recursos de novos hardware;\n- Facilidade no manuseio;\n- Contempla a utilização de vários Storage Engines como MyISAM, InnoDB, Falcon, BDB, Archive, Federated, CSV, Solid…\n- Suporta controle transacional;\n- Suporta Triggers;\n- Suporta Cursors (Non-Scrollable e Non-Updatable);\n- Suporta Stored Procedures e Functions;\n- Replicação facilmente configurável;\n- Interfaces gráficas (MySQL Toolkit) de fácil utilização.\n\n## Instalação\n\n### Windows/ OS X\n\nPode ser feito via [download](https://dev.mysql.com/downloads/mysql/) do instalador no site oficial.\n\n### Linux\n\nNo Linux, além de poder ser feito o download como no windows/OS X, podemos fazê-lo pelo comando:\n\n```bash\n# Debian/Ubuntu\napt-get install mysql-server\n\n# Fedora/CentOS\nyum install mysql-server\n```\n\n## MySQL Client\n\nO servidor é o responsável por armazenar os dados, responder às requisições, controlar a consistência dos dados, entre outras coisas. Aém disso, precisamos da comunicação com o servidor através da SQL. Para isso, temos algumas ferramentas como: [MySQL Workbench](http://www.mysql.com/products/workbench/), [Sequel Pro](http://www.sequelpro.com/), [HeidiSQL](http://www.heidisql.com/), [phpMyAdmin](http://phpmyadmin.net/), [Toad for MySQL](http://www.quest.com/toad-for-mysql/), [MySQL-Front](http://www.mysqlfront.de/), [Neor Profile SQL](http://www.profilesql.com/) e mais.\n\nPara os usuários que preferem a linha de comando. Podemos instalar o `mysql-client`, no Linux, via linha de comando:\n\n```bash\n# Debian/Ubuntu\napt-get install mysql-client\n\n# Fedora/CentOS\nyum install mysql-client\n```\n\nQue permite você se conectar a um servidor MySQL. Ele lhe dará a possibilidade de utilizar na linha de comando o `mysql`.\n\nMesmo gostando muito da linha de comando, o meu preferido e o que mais utilizo é o **Workbench**.\n\n### Workbench\n\nO MySQL Workbench é uma ferramenta gráfica que permite fazer modelagem de dados, desenvolvimento em SQL e administração do servidor MySQL.\n\nO [download](https://dev.mysql.com/downloads/workbench/) pode ser feito no site oficial. Por linha de comando no linux, pode ser feito com o comando:\n\n```bash\n# Debian/Ubuntu\napt-get install mysql-workbench\n\n# Fedora/CentOS\nyum install mysql-workbench\n```\n\n## Conclusão\n\nPara não ficar muito extenso o artigo, veremos a continuação em um próximo artigo. Onde daremos continuidade com a configuração do mesmo.\n","categories":["database"]},{"title":"Começando com AngularJS","url":"/hemersonvianna/artigos/angular/comecando-com-angular/","content":"\nAngularJS é um framework JavaScript open source, que auxilia na execução de Single Page Application(SPA). Desenvolvido pela Google, utiliza o padrão model–view–controller (MVC), facilitando tanto o desenvolvimento quanto os testes das aplicações. \n\nNo Angular, os dados são ligados em ambos os sentidos, ou seja, quando o model é atualizado, a view será atualizada automaticamente para refletir essas mudanças e vice-versa. Isso faz com que a manipulação do DOM seja fácil e é uma das principais vantagens em se utilizar o Angular.\n\n## Data binding\n\nA associação de dados é a característica mais útil e poderosa entre qualquer uma das tecnologias de desenvolvimento de software existentes ou futuras. É realmente um processo que preenche uma conexão entre a visão e a lógica de negócios de uma aplicação.\n\nBasicamente vemos uma associação de sentido único e em dois sentidos de dados no que diz respeito a aplicações AngularJS. \n\n### One-way Data Binding\n\nÉ uma abordagem em que um valor é retirado do modelo de dados e inserido em um elemento HTML. Não havendo uma maneira de atualizar o model pela view.\n\nAngularJS fornece algumas diretivas de associação dados:\n\n- **ng-bind** - Passa a propriedade de texto interno de um elemento HTML.\n- **ng-bind-template** - Quase semelhante a diretiva `ng-bind`, mas permite múltiplos templates.\n- **ng-non-bindable** - Declara uma região de conteúdo para o qual a associação de dados será ignorada.\n- **ng-bind-html** - Cria associações de dados usando a propriedade interna HTML de um elemento HTML.\n- **ng-model** - Cria a associação bidirecional de dados.\n\n### Two-Way Data Binding\n\nÉ quando há mudança no model e a view reflete a mudança, e vice-versa. Associações de duas vias em AngularJS são criadas com a diretiva ng-model. Praticamente, as associações de duas vias pode ser aplicadas apenas aos elementos que permitem que o usuário forneça um valor de dados, seriam `input`, `textarea`, e elementos `select`.\n\n## Iniciando com o Angular\n\nPara inicializar qualquer aplicação Angular, precisamos invocar a diretiva `ng-app`. Essa diretiva pode ser associada a qualquer elemento HTML e é usado para auto-inicialização de uma aplicação Angular. A diretiva `ng-app` representa a raiz da aplicação e apenas podemos ter uma inicialização de uma aplicação Angular, por página.\n\nO controller é definido utilizando a diretiva `ng-controller`. O controller é um objeto javascript que contém atributos/propriedades e funções. Cada controller aceita o `$scope` como um parâmetro que se refere a aplicação/módulo que o controller, irá controlar.\n\nVocê pode fazer o download do framework, pelo próprio [site](https://angularjs.org/) ou pelo:\n\n- Bower\n```bash\nbower install angular\n```\n- NPM\n```bash\nnpm install angular\n```\nE por outros meios.\n\nExemplo simples, para o primeiro `Olá, mundo`, com AngularJS.\n\n### index.html\n\n```html \n<html ng-app=\"app\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>AngularJS</title>\n  </head>\n  <body ng-controller=\"ExampleController\">\n    <p>Olá, <em>{{ name }}</em>!</p>\n    <script src=\"lib/angular/angular.min.js\"></script>\n    <script src=\"app.js\"></script>\n    <script src=\"example-controller.js\"></script>\n  </body>\n</html>\n```\n\n### app.js\n\n```javascript\n(function() {\n  'use strict';\n\n  var app = angular.module('app', []);\n\n})();\n```\n\n### example-controller.js\n\n```javascript\n(function() {\n  'use strict';\n\n  angular\n  .module('app')\n  .controller('ExampleController', ExampleController);\n\n  ExampleController.$inject = ['$scope'];\n\n  function ExampleController($scope) {\n    var vm = this;\n    $scope.name = 'Hemerson';\n  }\n})();\n```\n\n## Conclusão\n\nAngular, veio como a solução para abstrair a manipulação do DOM da lógica da aplicação. Abstrai o acoplamento entre o lado cliente e o lado servidor da aplicação. Isto permite que o desenvolvimento evolua em ambos os lados, de forma paralela, e permite o reuso de código. E tem muitos recursos e vantagens que veremos nos próximos artigos sobre o assunto.\n","categories":["angular"]},{"title":"Começando com Domain Driven Design","url":"/hemersonvianna/artigos/IT-management/comecando-com-ddd/","content":"\nDomain Driven Design é uma filosofia de desenvolvimento lançada por Erick Evans. O DDD é composto por um conjunto de padrões para a construção de aplicações corporativas a partir do modelo de domínio.\n\nCom DDD, estamos de olho nos modelos de um domínio com problema. A persistência, interfaces de usuário e outras coisas de mensagens pode vir mais tarde, é o domínio que precisa ser entendido, porque essa é a parte do sistema que está sendo construído que distingue negócios da sua empresa de seus concorrentes.\n\nQuando digo modelo não se refere a um diagrama ou conjunto de diagramas. Os diagramas são úteis, mas eles não são o modelo, apenas diferentes visões do modelo. O modelo é o conjunto de conceitos selecionados para serem implementados em um software, representado no código e qualquer outro artefato de software utilizado para construir o sistema entregue. Em outras palavras, o código é o modelo. Editores de texto fornecem uma maneira de trabalhar com este modelo, embora modernas ferramentas forneçam a abundância de outras visualizações também (diagramas de classe UML e etc).\n\nO DDD define quatro camadas principais, sendo elas:\n\n- **User Interface:** Responsável por apresentar informações ao usuário e interpretar os comandos do usuário.\n- **Application:** Esta camada coordena a atividade das aplicações. Ele não contém qualquer lógica de negócios. Não guarda o estado de objetos de negócios, mas ele pode armazenar o estado de um progresso das tarefas do aplicativo.\n- **Domain:** Esta camada contém informações sobre o domínio do negócio. O estado de objetos de negócios é realizado aqui. Persistência dos objetos de negócios e, possivelmente, seu estado é delegado à camada de infra-estrutura.\n- **Infrastructure:** Esta camada atua como uma biblioteca de suporte em todas as outras camadas. Fornece a comunicação entre as camadas, implementa persistência para objetos de negócios, contém bibliotecas de suporte para a camada de interface do usuário e etc.\n\n## Conclusão\n\nO DDD não é a solução para todos os problemas de todas as camadas de um sistema. Seu foco é na modelagem das entidades principais de negócio usando a linguagem adequada daquele domínio para facilitar a manutenção, extensão e entendimento.\n","categories":["IT management"]},{"title":"Começando com Behavior Driven Development","url":"/hemersonvianna/artigos/IT-management/comecando-com-bdd/","content":"\nBehavior Driven Development (BDD) é uma técnica de desenvolvimento ágil de software que incentiva a colaboração entre desenvolvedores, QA e os participantes não técnicos ou de negócios em um projeto de software. Ele foi originalmente nomeado em 2003 por Dan North como uma resposta ao Test Driven Development (TDD), incluindo o teste de aceitação ou práticas de desenvolvimento de teste do cliente impulsionado como encontrados em programação extrema. Ela tem evoluído ao longo dos últimos anos.\n\nDe fato, um dos maiores benefícios do BDD é que une os interesses das empresas com requisitos técnicos, através da utilização de um vocabulário comum simplificado para descrever o comportamento do sistema que reduz o risco de comunicação entre os membros da equipe com diferentes formações.\n\nAlém de implementar uma linguagem comum, o BDD incluí:\n\n- Um conjunto de ferramentas de software especializados;\n- Um foco sobre as histórias de usuários, também conhecidos como cenários e situações, que delineiam claramente os comportamentos que contribuem com sucesso para os resultados do negócio.\n- Uma mentalidade de fora para dentro que se aplica as técnicas em um nível maior de abstração: testando a intenção do sistema inteiro versus apenas o funcionamento de um único trecho de código.\n\nA característica mais importante de BDD é que os métodos de teste em uma classe recebem nomes expressivos que descrevem claramente para o que os mesmos foram feitos.\nEsta notação ajuda a manter em mente que há várias razões pelas quais o teste pode falhar, incluindo problemas no sistema, ou um erro no caso de teste em si.\nOs casos de teste ou histórias de usuários próprios também seguem um formato de texto muito simples, que consiste em um título e várias frases que descrevem o que acontece em cada cenário incluído na história.\n\n## Conclusão\n\nO BDD tem um impacto significativo sobre a entrega do projeto, uma vez que incentiva as equipes de desenvolvimento para tornarem mais voltadas para o negócio e lidar mais facilmente com os seus colegas de trabalho ou parceiros externos.\n\nPode ser facilmente integrado dentro de equipes de Scrum. Como tal, BDD é um excelente método que pode ser usado para resolver problemas de comunicação em um projeto, e priorizar o atraso de modo que é mais em sintonia com os interesses comerciais do cliente.\n","categories":["IT management"]},{"title":"Começando com Test Driven Development","url":"/hemersonvianna/artigos/IT-management/comecando-com-tdd/","content":"\nTest Driven Development (TDD) é uma técnica de desenvolvimento de software que se baseia em um ciclo curto de repetições:\n\n1. Ler e entender os requisitos para uma determinada funcionalidade.\n2. Desenvolver um conjunto de testes que verificam o recurso. Todos os testes estão vermelhos, devido à ausência da funcionalidade.\n3. Desenvolve a função até que todos os testes fiquem verdes.\n4. Refatora o código.\n\nKent Beck, considerado o criador da técnica, declarou em 2003 que TDD encoraja o desenho de código simples e inspira confiança. Desenvolvimento guiado por testes é relacionado a conceitos de programação de Extreme Programming, iniciado em 1999, mas recentemente tem-se criado maior interesse pela mesma em função de seus próprios ideais. Através do TDD, programadores podem aplicar o conceito de melhorar e depurar código legado desenvolvido a partir de técnicas antigas.\n\nTDD exige uma maneira diferente de pensar, de modo a fim de começar TDD você precisa esquecer a maneira como você desenvolveu código antes. Este processo é muito difícil. E é ainda mais difícil se você não sabe como escrever testes unitários.\n\nVantagens importantes:\n\n- Melhor compreensão de um recurso que você implementou.\n- Indicadores sólidos da funcionalidade.\n- Código coberto com testes e menos chances de ser corrompido por correções ou novos recursos.\n\nO custo destas vantagens é bastante elevado. Inconvenientes relacionados com a mudança para um novo modo de desenvolvimento e o tempo que você gasta para o desenvolvimento de cada novo recurso. O preço da qualidade.\n\n## Conclusão\n\nTestes são muitos importantes por motivos de qualidade e menos riscos para a sua aplicação. Mas não é um pensamento que irá dominar do dia para a noite. O caminho é bem árduo, mas é importante iniciar esse trajeto. O desenvolvedor ganha, o projeto ganha e o cliente com uma qualidade maior.\n","categories":["IT management"]},{"title":"Começando com Git","url":"/hemersonvianna/artigos/git/comecando-com-git/","content":"\nQuando damos início a um projeto de programação, a primeira questão é aonde colocaremos os arquivos com os códigos. Quem nunca guardou em um disco externo ou em um disco virtual? O grande problema é quando temos mais de um desenvolvedor no projeto. Não temos um histórico de alterações e nem o autor, fora outras questões como revertar alguma implementação que estava com um `bug`. \n\nPara isso, temos o Git(o nome vem de uma gíria do Inglês Britânico para \"cabeça-dura\", segundo a Git Wiki). O Git é um sistema de controle de versão(CVS), criado por Linus Torvalds, o criador do Linux.\n\nE temos o [Github](https://github.com/) e o [Bitbucket](https://bitbucket.org/), que são serviços de armazenamento de repositório Git. Assim, temos a ferramenta e onde armazenar. No ***Github***, podemos ter repositórios gratuitamente, desde que sejam públicos, o serviço privado é pago. Quanto ao ***Bitbucket***, podemos ter repositórios privados gratuitamente, desde que a equipe tenha no máximo 5 pessoas. \n\n\nO Git é baseado em linha de comando, para os amantes da utilização do terminal, ele agrada bastante. Mas se não é chegado, também tem ferramentas gráficas que ajudaram na utilização.\n\nPara utilizar o Git, primeiramente precisamos instalá-lo. Para mostrar as funcionalidades, vamos priorizar a linha de comando. \n\n## Instalação\n\n### Windows\n\nPara a instalação, precisamos baixá-lo no [https://git-for-windows.github.io/](https://git-for-windows.github.io/).\n\n***Uma dica***: Eu instalo com o instalador [Rails Installer](http://www.railsinstaller.org/pt-BR), que ja vem com o `Ruby`, `Rails` e outros itens que já evitam o trabalho de instalá-los separadamente. \n \n### MacOS\n\nPara instalar no Mac OSX (Snow Leopard ou superior), basta baixá-lo em [http://sourceforge.net/projects/git-osx-installer/files/?source=navbar](http://sourceforge.net/projects/git-osx-installer/files/?source=navbar). Selecione a última versão.\n\n\n### Linux\n\nPelo terminal, caso esteja no Fedora, você pode usar o yum:\n\n```git\n$ yum install git-core\n```\n\nOu se você estiver em um Debian, como o Ubuntu, use o apt-get:\n\n```git\n$ apt-get install git\n```\n\n## Chave de segurança\n\nVamos usar o `Github`, como exemplo. Crie uma conta se ainda não tiver.\n\nA chave de segurança será a identificação da máquina local que estará usando com o `Github`. Basta abrir o terminal(Git bash) e executar o commando:\n\n```git\nssh-keygen -t rsa -C \"seu_email@seu_provedor.com\"\n```\n\nIrá aparecer:\n\n```git\nEnter file in which to save the key (/c/Users/hemersonvianna/.ssh/id_rsa):\n```\n***/c/Users/hemersonvianna/***: na sua máquina aparecerá o caminho do seu usuário.\n\nSó pressionar a tecla `enter`, para manter no caminho padrão. Logo após, precisará informar a senha, que fica a seu critério informar ou não. E em seguida, a confirmação da mesma.\n\n```\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\n```\n\nAparecerá uma mensagem parecida com essa:\n\n```\nYour identification has been saved in /c/Users/hemersonvianna/.ssh/id_rsa.\nYour public key has been saved in /c/Users/hemersonvianna/.ssh/id_rsa.pub.\nThe key fingerprint is: ...\n```\n\nAgora, precisaremos informar essa chave segura, na conta do `Github`. Nas configurações do seu perfil do `Github`, na seção [SSH Keys](https://github.com/settings/ssh), clique em `add SSH Key`. Basta informar um título e o conteúdo do seu arquivo `id_rsa.pub`, que foi gerado na sua máquina.\n\nPronto! Temos o Git instalado e uma conta criada no `Github`. O processo para o `Bitbucket` é semelhante.\n\n## Clonando um repositório\n\nSó é preciso criar um repositório no Github, para dar início e assim, clonar esse projeto criado.\n\nDigamos que criamos o repositório `teste`. No meu Github a url do projeto ficaria assim:\n\n```git\nhttps://github.com/hemersonvianna/teste\n```\n\nPelo terminal(prompt de comando) na nossa máquina local, vamos entrar na pasta onde queremos que o projeto fique e iremos clonar(baixar os arquivos, juntamente com os arquivos de controle de versão do Git).\n\n```\ncd /e/server/github/\ngit clone https://github.com/hemersonvianna/teste.git\n```\nNo meu caso, a pasta ficará na minha unidade `E:`, dentro da subpasta `github`. Com o comando `git clone [url do projeto git]`, será baixado os arquivos. Agora precisamos entrar na pasta do projeto, que por padrão é o mesmo nome do projeto.\n\n```git\ncd teste\n```\n\nComo acabamos de criar o repositório não tem nada nele, na pasta só terá uma pasta oculta `.git`.\n\nVocê pode ver os arquivos do projeto navegando para a pasta \"repositorio\" e listando os arquivos no prompt de comando:\n\n## Versionando alterações\n\nTemos o nosso repositório na máquina e agora vamos criar algo, bem simples, como o `README.md`. Que é por padrão, onde colocamos as informações do projeto, por ser mostrado logo assim que entramos no respositório que fica no Github. \n\nVamos agora brincar com o comando `touch` do Unix e criar o arquivo pelo terminal :\n\n```git\ntouch README.md\n```\n\nCom ele criado, faremos uma sequência de comandos para adicionar o novo arquivo ao `storage` e fazer o `commit` do mesmo para que seja criado um objeto com um `hash` de identificação da alteração no repositório.\n\n```\ngit add README.md\ngit commit -m \"Primeiro commit\"\n```\nA flag `-m` com a mensagem entre aspas duplas, é para customizarmos a mensagem do commit.\n\nAgora precisamos jogar essa nossa alteração no repositório para o servidor. Para isso usaremos o comando `git push`( como é o nosso primeiro commit no repositório precisamos usar a flag `-u`, para fazer a ligação do branch local, com o branch remoto):\n\n```git\ngit push -u origin master\n```\n\nPor padrão o repositório principal é sempre o `master`, e quando jogamos para o servidor, precisamos informar qual é a origem. Criando outros branches a origem muda.\n\n```\n// Branch dev\ngit push origin dev\n```\n\n\nConclusão\n\nEssa foi apenas uma introdução, onde vimos como instalar o Git na nossa máquina. Criar uma conta em um serviço de armazenamento Git. Clonar um projeto e fazer a nossa primeira alteração. Nos próximos artigos sobre o assunto, vamos ver mais os detalhes de como trabalhar com outros branches, fazer comparações, ver histórico, fluxo e etc.. \n","categories":["git"]},{"title":"Começando com NodeJS","url":"/hemersonvianna/artigos/javascript/comecando-com-nodejs/","content":"\nLançado em 27 de maio de 2009, sendo criado por Ryan Dahl, juntamente com alguns colaboradores. O node.js surgiu para facilitar o desenvolvimento de aplicações `real-time` e de alta escalabilidade. Ele utiliza o mecanismo V8 Javascript, que é utilizado pela Google no navegador Chrome. A google criou esse interpretador escrito C++, e é possível fazer o download desse mecanismo e integrá-lo aonde desejar. Um mecanismo `javascript`, interpreta e executa o código. Assim com o V8, essa interpretação e execução é feita no servidor.\n\nO pessoal de front-end, fica muito grato com a existência da plataforma Node.js e assim, conseguindo rodar `javascript`, no lado do servidor. É isso mesmo, para quem já utiliza a linguagem `javascript`, a curva de aprendizado será muito pequena. Portanto, irá desenvolver em `javascript` na plataforma do Node.js.\n\nO Node.js possui vários módulos nativos que possibilitam trabalhar com recursos I/O (entrada/saída) no servidor. Podendo assim, ter várias bibliotecas a sua disposição para trabalhar com: HTTP, DNS, WebSockets e mais. Além de manipular arquivos, criptografias e mais. Com a vantagem desses eventos serem assíncronos.\n\n## Node foundation\nO `io.js`, oficialmente lançado em dezembro de 2014, começou com um `fork` do projeto do Node.js, que hoje é mantido pela empresa Joyent, onde Dahl, trabalha. A iniciativa foi tomada por Fedor Indutny, um dos principais membros da comunidade Node.js, que estava insatisfeito com o conselho consultivo da Joyent. Outros importantes colaboradores da comunidade apoiaram a ideia, como: Trevor Norris, Isaac Z. Schlueter e Mikeal Rogers. Schlueter, deixa claro no FAQ do blog do io.js, que o `fork` é para prover um espaço para que os contribuidores do núcleo Node possa continuar fazendo o seu trabalho de melhoria.\n\nUma das principais queixas, era a falta de versões no projeto do Node.js. E com o io.js, a intenção era de lançar com crescente regularidade, versões que são compatíveis com o ecossistema `npm` construído até o momento para o Node.js.\n\nEm 16 de junho de 2015, a [`Linux foundation`](http://www.linuxfoundation.org.) anunciou que Node.js e io.js, iriam oficialmente fundir suas bases de código e continuar o trabalho como `Node foundation` e seria hospedado pela `Linux Foundation`.\n\nHoje, já estamos na versão 5.3.0 . Realmente o o ritmo de contribuições com o io.js, acelerou muito as melhorias. Antes da fusão, era curioso ver no `github`. Assim, vemos o poder da comunidade. Parabéns aos envolvidos. :)\n\n## Baseado em Node.js\nTem muitos projetos que são baseados na plataforma e nos ajudam no dia a dia. Alguns deles são:\n\n- ***Grunt ou Gulp***: Automatizador de tarefas, muito conhecido por quem desenvolve o front-end. O mesmo nos ajuda nas tarefas de minificação de arquivos, compilação e mais.\n- ***MeteorJS***: É um framework web JavaScript open-source escrito em Node.js.\n- ***KarmaJS*** - Uma ferramenta que gera um servidor Web que executa o código fonte com o código de teste para cada um dos navegadores conectados.\n\nMesmo que ainda não tenha usado o Node.js, no lado do servidor, é possível utilizá-lo para outras tarefas. Principalmente, quem é front-end, é quase obrigatório tê-lo instalado na máquina, por causa dos automatizadores de tarefas, citados acima. :)\n\n## Threads (Usuários fazendo requisições para a aplicação)\nEm sistemas com arquitetura de `Threads Bloqueantes`, que é o caso dos desenvolvidos em JAVA ou .NET, por exemplo. Quando há acessos simultâneos para o mesmo recurso, eles são enfileirados. Assim, cada um deles utiliza o recurso um de cada vez, garantindo a integridade dos dados, por ter o controle de acesso único. Esse conceito é muito utilizado em aplicações bancárias e e-commerce.\n\nO Node.js segue o conceito de `Threads Não-Bloqueantes`, portanto, é totalmente `single-thread`. Isso traz como vantagem uma alta escalabilidade para aplicações que necessitam de um processamento sem controle de processamento concorrente (threads), pois não há um agente bloqueando e enfileirando threads. Nos casos de aplicações que necessitem de uma resposta rápida, por exemplo, consultas frequentes no banco de dados, o node.js faz esse trabalho muito bem, como: Games Multiplayer, Web Services, Blogs, Redes sociais, Web Analytics, Chats e mais.\n\n\n## CommonJS\n\nO Node.js utiliza o padrão CommonJS para organização e carregamento dos módulos.\nPara carregar um módulo, você fará uso da função `require`.\n```\nrequire('nome-do-modulo');\n```\nE o módulo terá que utilizar as variáveis globais: exports ou module.exports.\n```\nmodule.exports = function() {\n\t// script do módulo\n}\n```\n\n\n## Rodando um exemplo\nPrimeiramente, precisará ter o node instalado, se não tiver é só [acessar o site e baixar](https://nodejs.org/en/).\nDepois vamos dar uma conferida no terminal:\n```\nnode -v\n```\n\nCom o editor de sua preferência, vamos criar o arquivo `exemplo.js`:\n```\nvar http = require('http');\nhttp.createServer(function(req,res) {\n  res.writeHead(200, { 'Content-Type': 'text/plain; charset=utf-8' }); \n  res.end('Exemplo com Node.js');\n}).listen(4000);\nconsole.log('Servidor rodando no endereço localhost:4000');\n```\n\nNo terminal, você vai até onde está o arquivo ou escreve todo o caminho para executá-lo. No caso abaixo, vamos supor que estou na pasta onde se encontra o arquivo, sendo apenas necessário digitar:\n```\nnode exemplo.js\n```\n\nAcessando no navegador da sua preferência, o endereço http://localhost:4000, poderemos ver o texto \"Exemplo com Node.js\". E assim, temos um exemplo simples com o Node.js.\n\n\n## Conclusão\nQuer deixar um `front-ender` feliz, é só dizer que ele pode escrever em `javascript`, para rodar no servidor. E ele vai a loucura, se disser que pode usar os recursos do ES6. E isso é possível com a nossa querida plataforma Node.js. Acima, você pode conferir algumas informações e nos próximos artigos, terá mais algo prático. Até lá. \n","categories":["javascript"]},{"title":"Começando com Ruby","url":"/hemersonvianna/artigos/ruby/comecando-com-ruby/","content":"\nRuby é uma linguagem interpretada, criada por [Yukihiro Matsumoto](https://twitter.com/yukihiro_matz). O primeiro `release` da linguagem foi feito em 21 de dezembro de 1995, no Japão. Em setembro de 2000, o primeiro livro em inglês foi impresso ([Programming Ruby](http://ruby-doc.org/docs/ProgrammingRuby/)). No ano de 2003, foi lançado o **meta-framework**(framework de frameworks), Rails. Por volta de 2005, o interesse pela linguagem Ruby cresceu com o Ruby on Rails.  \n\n## Instalação\n\nVocê pode usar diversas ferramentas para instalar o Ruby. Para verificar se já tem o Ruby instalado, basta digitar o comando `ruby --version` ou o seu atalho `ruby -v` no terminal ou console. Caso, ainda não tenha instalado, siga os passos abaixo, para cada sistema operacional.\n\n### Linux\n\nO Debian GNU/Linux e o Ubuntu usam o gerenciador de pacotes apt. Você pode utilizá-lo da seguinte forma:\n\n```bash\nsudo apt-get install ruby-full\n```\n\nO CentOS, o Fedora e o RHEL usam o gerenciador de pacotes yum. Você pode utilizá-lo da seguinte maneira:\n\n```bash\nsudo yum install ruby\n```\n\n### Windows\n\nSe você está no Windows, existe um ótimo projeto para ajudá-lo a instalar o Ruby: [RubyInstaller](http://rubyinstaller.org/). Ele te dá tudo o que você precisa para configurar um ambiente de desenvolvimento em Ruby completo no Windows.\n\n\n### OS X\n\nNo OS X Yosemite e Mavericks, o Ruby 2.0 já está incluso. O OS X Mountain Lion, Lion e Snow Leopard vêm com o Ruby 1.8.7.\nMuitas pessoas no OS X usam o Homebrew como gerenciador de pacotes. É muito fácil de obter uma versão mais nova do Ruby usando o Homebrew:\n\n```bash\n// instala a versão mais recente\nbrew install ruby\n```\n\n## Interactive Ruby Shell – IRB\n\nO IRB é uma ferramenta para interpretar código Ruby com uma resposta imediata que é executada em um terminal ou console. Ela se encaixa na categoria de programas RELP (Read, Eval, Print, Loop), ou seja, ela aceita ou lê uma instrução (read), avalia ou interpreta esta (evalution), mostra ou imprime o resultado (print), e volta para o primeiro passo (loop). Quando o ruby é instalado essa ferramenta é também instalada. Para que possamos usá-la basta digitar o comando irb no se prompt de comando ou terminal:\n\n```bash\nirb(main):001:0>\n```\n\n## Variável\n\nNo Ruby as variáveis são associadas de acordo com a nomenclatura e cada variável permite sua utilização de acordo como ela foi nomeada. Quando se programa em Ruby, é interessante que se utilize as variáveis de \"menor impacto\" possível. Sendo assim, dar preferência pela variável local, caso não seja possível, pela de instância e assim em diante.\n\nAs variáveis são as seguintes:\n\n- ***local*** - inicia-se com letra minúscula ou undeline, mesma nomenclatura de métodos, e funcionam apenas dentro de métodos, elas não mantém seu valor, e por isso são preferencialmente usadas quando possíveis.\n\n- **@instância** - A nomenclatura para variáveis de instância no Ruby, são as palavras precedidas por @, por exemplo, @variavel. A variável de instância mantêm o seu valor e podem ser acessadasr todo o objeto aonde foi inicializada. Variáveis de instância podem ser acessadas fora do objeto se usado como atributo daquele objeto.\n\n- **$globais** - As variáveis globais podem ser acessadas de qualquer parte do programa, essas variáveis inclusive são utilizadas pelos eventos do RPG Maker (switches e variáveis).\n\n- **@@classe ou estática** - Algumas vezes, as classes precisam armazenar informações referentes a si próprias, ou seja, ter de alguma forma o seu próprio estado, e é aí que entram as variáveis de classe. Uma variável de classe é compartilhada entre todos os objetos desta classe, portanto podem ser usadas por cada um deles e também pelos métodos da classe.\n\n- **constantes** – Apesar de não ser uma variável, é importante ressaltar e explicar como ela funciona. As constantes no Ruby, diferente de muitas outras linguagens, podem ser mudadas, porém é altamente não recomendado. As constantes como o nome diz, devem ser usadas para valores que não mudam através do programa.\n\nAlém das regras já mencionadas, depois do primeiro caractere do seu nome, uma varíavel só poder ter combinações de letras, números e o caractere de underscore (convenção `snake case`). E quando uma variável possui mais de uma palavra no seu nome, as palavras são separadas pelo undescore. Além disso, o caractere após @ e @@ não pode ser um dígito, ou seja, @@1 e @2 são nomes de variáveis inválidos no Ruby.\n\nOs 4 escopos de variáveis do Ruby.\n\n```ruby\nanswer = \"Sim\"\n\n@age = 29\n\n$version = 1.2\n\n@@count = 57\n```\n\n## Tipos de dados\n\nRuby não tem tipos de dados primitivos, ou seja, números, strings, arrays, hashes, símbolos, valores booleanos são objetos e podem ser alterados dinamicamente.\n\n**Boolean**:\n\nAceita 2 valores (true ou false).\n\n```ruby \n#!/usr/bin/ruby\n\nstatus = true\n\nif status\n  puts \"Permitido\"\nelse \n  puts \"Negado\"\nend\n\n# => \"Permitido\"\n```\n\n**Symbol**:\n\nA diferença de um símbolo para uma variável é o prefixo com dois pontos `:`. Você não precisa pré-declarar um símbolo e se certificar que sejam únicos. Não é preciso atribuir um valor para um símbolo, o Ruby cuida disso para você. Não importa onde apareça em seu programa, um símbolo particular terá sempre o mesmo valor.\n\nEle é apenas um nome e um ID interno. Símbolos são mais eficientes que strings. Duas strings com o mesmo conteúdo são dois objetos diferentes, mas para qualquer nome existe apenas um objeto Symbol. Isso pode economizar tempo e memória.\n\n```ruby \n#!/usr/bin/ruby\n\nputs \"teste\".object_id\nputs \"teste\".object_id\nputs :symbol.object_id\nputs :symbol.object_id\n\n# 9258800\n# 9258180\n# 776028\n# 776028\n\n```\n\n**Number**:\n\nRuby pode lidar com ambos os números inteiros e números de ponto flutuante (números com decimais).\n\n```ruby \n#!/usr/bin/ruby\nten = 10\nfifteen_point_two = 15.2\n```\n\nVocê pode usar o `underscore` como um divisor de milhares ao escrever números longos. O Rubu ignora o `underscore`. Isso deixa mais fácil de ler, números grandes.\n\n```ruby \n#!/usr/bin/ruby\nbillion = 1_000_000_000\n```\n\n**String**:\n\nNão é diferente das outras linguagens que deve ter visto. Você pode usar tanto aspas duplas e aspas simples para criar uma string.\n\n```ruby \n#!/usr/bin/ruby\nexample = \"Hello, World!\"\nnew_example = 'New example'\n```\n\nRuby permite incorporar o resultado de algum código dentro de uma string. O código da interpolação de string vai entre #{ e }.\n\n```ruby \n#!/usr/bin/ruby\nname = \"Hemerson\"\nphrase = \"Meu nome é #{name}\"\nresult = \"30 + 5 = #{40 - 5}\"\n```\n\n**Array**:\n\nExistem duas maneiras de criar um array vazio:\n\n```ruby \n#!/usr/bin/ruby\nmy_array = Array.new\nmy_other_array = []\n```\n\n**Hash**:\n\nUm hash em Ruby é como um objeto literal em JavaScript ou um array associativo em PHP. Eles são feitos de forma semelhante aos arrays.\n\n```ruby \n#!/usr/bin/ruby\nmy_hash = Hash.new\nmy_other_hash = {}\n```\n\nPara colocar item em um hash, usasse colchetes. Você pode usar qualquer valor como a chave, mas strings ou símbolos são opções mais comuns.\n\n```ruby \n#!/usr/bin/ruby\nmy_hash[\"name\"] = \"Hemerson\"\nmy_hash[:age] = 29\n```\n\nPara criar um hash com objetos nele desde o início, você usa uma notação quase idêntica aos literais de um objeto JavaScript. A única diferença é que Ruby usa uma seta (=>) entre chaves e valores:\n\n```ruby \n#!/usr/bin/ruby\ndeveloper = { :name => \"Hemerson\", :age => 29, :job => \"front-end\" }\n```\n\n## Conclusão\n\nTenho a se ver sobre Ruby, principalmente sobre Rails. Nos próximos artigos, estaremos olhando mais sobre o assunto.\n\n","categories":["ruby"]},{"title":"Começando com Python","url":"/hemersonvianna/artigos/python/comecando-com-python/","content":"\nPython é uma linguagem interpretada, orientada a objetos (incluindo herança múltipla). Apresenta semântica dinâmica, um moderno mecanismo de tratamento de erros e exceções. Python possui Uma forma eficiente de acesso e reutilização de código com o uso de módulos, recursos avançados de manipulação de textos, listas e outras estruturas de dados (como dicionários, mais poderoso que o hash de Perl, pois os valores assumidos podem conter qualquer outro tipo de objeto como até mesmo outros dicionários). \n\nSeu desenvolvimento teve início em 1990, pelo holandês Guido van Rossum, na CWI em Amsterdã e continuou na CNRI (fundação que sustenta a linguagem hoje) em Reston. O conjunto de entidades e pessoas ligadas ao Python, sobretudo via Internet, formam a Python Software Activity (PSA). \n\n\n## Instalação\n\nPor padrão o Python, já vem instalado no linux e no OSX(Mac). Só precisará instalar se estiver usando o windows. Assim, pode baixá-lo no [https://www.python.org/downloads/](https://www.python.org/downloads/). Depois de fazer o download do arquivo *.msi, você precisa executá-lo e seguir as instruções. Na segunda tela do assistente de instalação, marcado \"Customize\", certifique-se de rolar para baixo e escolha a opção \"Adicionar python.exe para o caminho\". Isso vai fazer com que o caminho da pasta do Python, seja adicionado no caminho do sistema operacional, nas variáveis de ambiente.\n\nPara começar a ver como o interpretador funciona, basta abrir o terminal e digitar: \n```\npython // depois aperte enter\n```\nNo windows, aparece assim:\n```\nPython 2.7.10 (default, May 23 2015, 09:40:32) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n### Variável\n\nNão há declaração explícita de variáveis em Python, assim, a sua existência depende da atribuição de um valor:\n```\n>>> nome = \"Hemerson Vianna\"\n```\n\nPara declarar uma variável é preciso seguir a convenção `snake case`, onde o nome da variável começa com minúscula e utiliza underscore para separar cada palavra:\n```\n>>> quantidade_de_computadores = 10\n```\n\nUma coisa muito interessante no Python, é que podemos declarar variáveis e atribuir seus valores de uma vez só:\n```\n>>> nome, quantidade_de_computadores = \"Hemerson Vianna\", 10\n```\n\n### Tipos de dados\nO Python tem 5 tipos de dados:\n\n***Number***:\nArmazena e suporta 4 tipos de valores numéricos(int, long, float e complex). \n```\n// int\nvar1 = 1\nvar2 = -786\nvar3 = 0x69\nvar4 = -0x260\n\n// long - inteiros longos , que também pode ser representado em octal e hexadecimal\nvar1 = 51924361L\nvar2 = -052318172735L\nvar3 = -0x19323L\nvar4 = 0xDEFABCECBDAECBFBAEl\n\n// float - valores reais de ponto flutuante\nvar1 = 15.20\nvar2 = 32.3+e18\nvar3 = -32.54e100\nvar4 = 70.2-E12\n\n// complex\nvar1 = 3.14j\nvar2 = 9.322e-36j\nvar3 = 4.53e-7j\nvar4 = .876j\n```\nPython permite que você use um L minúsculo com muito tempo, mas é recomendável que você use somente uma maiúscula L , para evitar confusão com o número 1. Python exibe inteiros longos com uma maiúscula L.\n\nUm número complexo é composto por um par ordenado de números de ponto flutuante reais indicados por x + yj, onde x e y são os números reais e j é a unidade imaginária.\n\n***Strings***:\nPython permite tanto pares de aspas simples ou duplas. Subconjuntos podem ser feitas usando o operador de fatia ( [] e [ : ] ) com índices começando em 0 no início da string e -1 ao final. O sinal de mais (+) é o operador de concatenação de string e o asterisco (* ) é o operador de repetição.\n```\nstr = 'Olá mundo'\n\nprint str          # imprime a string\nprint str[0]       # apenas o primeiro caractere\nprint str[2:5]     # começa no terceiro caractere e termina no quinto\nprint str[2:]      # a string começa a partir do terceiro caractere\nprint str * 2      # imprime 2 vezes a string\nprint str + \"TEST\" # concatena a string\n```\n\n***List***:\nÉ o mais versátil dos tipos de dados composto do Python. A lista contém itens separados por vírgulas e entre colchetes ([]) . As listas são semelhantes as matrizes em C. Uma diferença entre elas é que todos os elementos pertencentes a uma lista pode ser de diferentes tipos de dados.\n\nOs valores armazenados em uma lista pode ser acessada usando o operador de fatia ([] e [:]) com índices começando em 0 no início da lista e ao final com -1. O sinal de mais (+) é o operador de concatenação e o asterisco (*) é o operador de repetição.\n```\nlist = [ 'abcd', 786 , 2.23, 'andre', 70.2 ]\ntinylist = [123, 'andre']\n\nprint list          # imprime a lista\nprint list[0]       # apenas o primeiro elemento da lista\nprint list[1:3]     # começa no segundo e termina no terceiro elemento\nprint list[2:]      # começa no terceiro elemento\nprint tinylist * 2  # imprime 2 vezes a lista\nprint list + tinylist # concatena as listas\n```\n\n***Tuple***:\nÉ um outro tipo de dados de sequência que é semelhante à lista. Uma tupla consiste de um número de valores separados por vírgulas. Ao contrário da lista, as tuplas são colocados dentro de parênteses.\n\nAs principais diferenças entre as listas e astuplas são: As listas são colocados entre colchetes ([]) e os seus elementos e tamanho podem ser alteradas, enquanto tuplas estão entre parênteses (()) e não pode ser atualizadas. Tuplas pode ser pensado como somente leitura.\n```\ntuple = ( 'abcd', 786 , 2.23, 'andre', 70.2  )\ntinytuple = (123, 'andre')\n\nprint tuple           # imprime a tupla\nprint tuple[0]        # apenas o primeiro elemento da lista\nprint tuple[1:3]      # começa no segundo e termina no terceiro elemento\nprint tuple[2:]       # começa no terceiro elemento\nprint tinytuple * 2   # imprime 2 vezes a tupla\nprint tuple + tinytuple # concatena as tuplas\n```\n\n***Dictionary***:\nÉ uma espécie de tabela hash. Funcionam como matrizes de associação ou hashes encontrados em Perl e consistem em pares de valores-chave. A chave do dicionário pode ser quase qualquer tipo Python, mas são geralmente números ou strings. Os valores, por outro lado, pode ser qualquer objeto Python arbitrário.\n\nDicionários são delimitados por chaves ({ }) e os valores podem ser atribuídos e acessados usando colchetes ([]).\n```\ndict = {}\ndict['um'] = \"Esse é o um\"\ndict[2]     = \"Esse é o dois\"\n\ntinydict = {'name': 'andre','code':6734, 'dept': 'compras'}\n\n\nprint dict['um']       # impreme o valor \"Esse é o um\"\nprint dict[2]           # impreme o valor \"Esse é o dois\"\nprint tinydict          # imprime o dicionário\nprint tinydict.keys()   # Imprime todas as chaves\nprint tinydict.values() # Imprime todos os valores\n```\n\n### Observações\nPython não permite concatenar uma string com um número. Ele não realiza uma conversão implícita de Number para String. Para isso, usamos `%s` para tratar o resultado final como uma String. Indicamos os valores que entrarão nas lacunas %s e %s, adicionando o sinal % imediatamente após a String e em seguida colocando as duas variáveis entre parênteses e separadas por vírgula.\n```\n>>> nome = \"Hemerson Vianna\"\n>>> idade = 29\n>>> print 'O nome é %s e a idade é %s'  % (nome, idade)\n// O nome é Hemerson Vianna e a idade é 29\n```\n\nPara mostar o que citei acima, sobre não poder atualizar o valor de uma tupla, já com uma lista é possível:\n```\ntuple = ( 'abcd', 786 , 2.23, 'andre', 70.2  )\nlist = [ 'abcd', 786 , 2.23, 'andre', 70.2  ]\ntuple[2] = 1000    # Invalid syntax with tuple\nlist[2] = 1000     # Valid syntax with list\n```\n\n## Conclusão\n\nVenho descobrindo o mundo do Python e tem me agradado bastante. Recomendo o curso [Welcome to the Django](http://welcometothedjango.com.br/) do Henrique Bastos, que é show de bola. Eu fiz, e ele é fera. Aguardem novos artigos da série sobre Python. :)\n","categories":["python"]},{"title":"Começando com MeteorJS","url":"/hemersonvianna/artigos/javascript/comecando-com-meteorjs/","content":"\nMeteorJS é plataforma completa para construir aplicações web e móveis em tempo real usando JavaScript, o mesmo é escrito em Node.js. Portanto, é mais que um framework. Por padrão, usa MongoDB para o banco de dados e Handlebars como linguagem de template. Ele foi apresentado a comunidade em dezembro de 2011 com o nome de Skybreak. A versão 1.0, foi lançada em dezembro de 2014, sendo uma declaração pública de estabilidade.\n \nA principal característica é que você terá um ambiente completo pra desenvolver e gerenciar uma aplicação desde o banco de dados MongoDB, backend Node.js, frontend JavaScript e build mobile usando Cordova do Phonegap.\n\n## DDP\n\nDDP é muito simples e minimalista. É um protocolo baseado em JSON. Tecnicamente, DDP pode ser implementado em cima de qualquer transporte duplex. A implementação atual do Meteor é baseada em WebSockets e SockJS. SockJS é um transporte de emulação WebSockets, que pode ser usado quando o WebSockets não está disponível.\n\nDDP é o coração do MeteorJS e é o protocolo que o mesmo usa para se comunicar entre o cliente e o servidor. DDP é uma sigla para Distributed Data Protocol. Meteor implementou ambas as implementações de cliente e servidor para DDP. Existem algumas bibliotecas do lado cliente para frameworks e linguagens para se conectar com Meteor via DDP.\n\n## Instalação\n\n### Windows\nPara instalar no Windows, basta acessar o [Link](https://install.meteor.com/windows).\n\n### OS X ou Linux\n\nPoderá instalar utilizando a biblioteca cURL.\n```bash\ncurl https://install.meteor.com/ | sh\n```\n\n## Meteor Tool\n\nMeteor Tool é uma CLI (Command Line Interface), que gerenciará o que for necessário para o desenvolvimento com o **Meteor**. Para verificar que já pode testar, basta no terminal, executar o comando:\n\n```bash\nmeteor --version\n```\n\n## Princípios do Meteor\n\n- **Dados na rede:** Não envie HTML pela rede e sim apenas dados para deixar o cliente decidir como renderizá-lo.\n- **Uma só linguagem:** Escreva código Javascript em ambas camadas: cliente e servidor.\n- **Banco de dados em todo lugar:** Utilize uma API de interface única e transparente que te permite acessar o banco de dados tanto no cliente como no servidor.\n- **Compensação de latência:** No cliente é usado prefetching e model simulation na API do banco de dados para atingir latência zero no acesso de seus recursos.\n- **Atualização automática das camadas:** Por default tudo funciona em real-time. E todas as camadas da aplicação adotam o paradigma orientado à eventos, que é herdado do Node.js.\n- **Abrace o ecossistema:** Totalmente open-source o Meteor possui suas convenções pelo qual agrega novos valores ao invés de ser ferramenta uma que vai substituir outros frameworks atuais.\n- **Simplicidade igual a Produtividade:** Desenvolva de forma simplificada, utilize APIs fáceis de aprender e implementar, afinal essa será a melhor forma de criar uma aplicação.\n\n\n## Criando a primeira aplicação\n\nPara criar um novo projeto, basta executar o comando `create` no terminal, junto com o nome que o projeto terá:\n```bash\nmeteor create example\n```\n\nVamos ver o projeto rodando:\n```bash\ncd example\nmeteor\n// Depois acesse : http://localhost:3000/\n```\n\nO Meteor vem com algumas aplicações de demonstração que você pode experimentar. Basta executar uma das sequências dos comandos abaixo no terminal:\n```bash\n// app de tarefas\nmeteor create --example todos\ncd todos\nmeteor\n\n// exemplo de aplicação móvel\nmeteor create --example localmarket\ncd localmarket\nmeteor\n```\n\n## Links\n\n- [Site oficial do Meteor](http://meteor.com/)\n- [Documentação oficial do Meteor](http://docs.meteor.com/)\n- [Meteor Example apps  ](http://www.meteor.com/examples)\n- [Twitter do Meteor](https://twitter.com/meteorjs)\n- [Blog Underground WebDev - Meteor](http://udgwebdev.com/meteor)\n\n## Conclusão\n\nEssa foi uma introdução simples ao MeteorJS. O mesmo tem muitas vantagens como: Desenvolvimento em tempo real, desenvolvimento com uma linguagem única, fácil de aprender, fácil de configurar, recursos úteis, escabilidade e desenvolvimento ágil.\n\nPortanto, tem muito a oferecer para um projeto web ou mobile.\n","categories":["javascript"]},{"title":"Links interessantes - Parte 1","url":"/hemersonvianna/artigos/links/links-interessantes-parte-1/","content":"\nEsse é o primeiro artigo contendo links interessantes para o conhecimento. Estudos, dicas e assuntos que será de interesse de todos que gostam da área web.\n\nAs categorias não serão fixas, apenas dividiram os links selecionados. Com isso, a cada artigo desse segmento, as categorias poderão ser diferentes.\n\n\n## UX/UI\n\n- [Migrar UI Design para UX Design](http://arquiteturadeinformacao.com/user-experience/o-que-significa-na-pratica-migrar-de-ui-design-para-ux-design/) - Artigo que fala sobre as implicações da mudança de um UI Designer para um UX Designer\n- [UX/UI Designer](http://arquiteturadeinformacao.com/mercado-e-carreira/o-mito-do-hibrido-uxui-designer/) - Artigo que fala sobre a diferença e UI e UX.\n- [Wireframes](http://www.designadaptavel.com.br/artigos/o-passo-a-passo-dos-wireframes-do-blog-design-adaptavel) - Ao planejar as adaptações para um site podemos definir que existirão apenas três pontos de adaptação, ou seja, três etapas de detalhamento que resultarão em wireframes e posteriormente em layouts.\n\n## Design\n\n- [Design responsivo](http://webdesign.tutsplus.com/articles/responsive-web-design--webdesign-15155) - A arte de design de websites para uma grande variedade de tamanhos de tela e dispositivos\n- [Upscaling Responsive](http://www.smashingmagazine.com/2015/08/responsive-upscaling-large-screen-e-commerce-design/) - Explora como os designers de e-commerce podem usar `upscaling` sensível e criar uma experiência personalizada para usuários com telas grandes. \n\n## HTML\n\n- [Histórico da HTML5](https://diveintohtml5.com.br/history.html) - A API de histórico da HTML5 é uma maneira padronizada para manipular o histórico do navegador via script.\n- [Curso HTML5](http://www.w3c.br/pub/Cursos/CursoHTML5/html5-web.pdf) - Curso HTML5 da W3C Escritório Brasil.\n- [Elementos de divisão](http://blog.teamtreehouse.com/use-html5-sectioning-elements) - Como usar os elementos de divisão do HTML5\n- [Tag DL](http://html5doctor.com/the-dl-element/) - Comp utilizar a tag dl.\n\n## Schema\n\n- [Schema dando significado](http://blog.popupdesign.com.br/schema-org-dando-significado-ao-conteudo-na-internet/) - Artigo explicando como dar significado com Schema\n\n## CSS\n\n- [CSS Escalável](https://medium.com/@shankarcabus/css-escalavel-parte-1-41e7e863799e#.kbvz33iem) - Artigo sobre CSS escalável por Shankar Cabus.\n- [Lea Verou](http://lea.verou.me/) - Lea Verou é uma desenvolvedora front-end, palestrante e autora. Atualmente é uma assistente de pesquisa no [MIT CSAIL](https://www.csail.mit.edu/), no grupo Haystack de David Karger e uma especialista convidada no [CSS WG](https://www.w3.org/Style/CSS/members.en.php3).\n- [Exemplos de CSS3](http://www.inwebson.com/css3/pure-css3-icons-logos-graphics/) - Icones, logos e gráficos com CSS3\n- [Tipografia com SASS map](http://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/) - Sass map fazendo a tipografia responsiva muito mais gerenciável.\n\n\n## SVG\n\n- [SVG Exemplos](http://tutorials.jenkov.com/svg/svg-examples.html) - Exemplos básicos com SVG.\n\n## JavaScript\n\n- [Curso EXTJS 4](http://www.loiane.com/2011/11/curso-de-extjs-4-gratuito/) - Curso gratuito sobre EXTJS 4, feito pela Loiane.\n- [Plugin JQuery](http://wbruno.com.br/jquery/criando-um-plugin-jquery-parte-1-comecando/) - Criando um plugin com JQuery.\n- [Padrões Javascript](http://shichuan.github.io/javascript-patterns/) - Padrões de JavaScript que abrangem padrões de função, padrões jQuery, padrões de projeto, padrões gerais, literais e padrões de construtor, padrões de criação de objetos, padrões de reutilização de código, DOM e padrões de navegador.\n- [Tutoriais Dojo](https://davidwalsh.name/dojo-tutorials) - Artigos para aprender mais sobre o Dojo JS.\n- [Módulos](http://blog.da2k.com.br/2015/01/03/como-criar-componentes-js-usando-modulos-amd-commonjs-e-umd-parte-1-3/) - Como criar componentes JS usando módulos - AMD, CommonJS e UMD.\n- [Testes Javascript](https://medium.com/@yamadapc/testes-melhores-e-stubs-em-javascript-fd31691b9393#.h877cu80l) - Testes melhores e stubs em JavaScript.\n\n\n## PHP\n\n- [PHP Orientado a objetos](http://cafeesoftware.com/curso-de-php-orientado-a-objetos/) - Curso de Orientação a Objetos com PHP.\n- [PHP do jeito certo](http://br.phptherightway.com/) - Este site introduz novos desenvolvedores PHP às melhores práticas, opções disponíveis e boas informações, que por muitas vezes, quando descobertas, já é tarde demais.\n- [Zend Framework](http://manual.zfdes.com/pt-br/) - Guia de referência sobre o Zend Framework.\n\n## Gestão em TI\n\n- [Templates e Modelos](http://www.elirodrigues.com/2015/09/14/downloads-de-templatesmodelos-para-gerenciamento-de-projetos/) - Aqui você encontra TODOS os templates necessários para gerenciar um projeto. Navegue, avalie e faça o download gratuitamente.\n- [SCRUM](http://www.desenvolvimentoagil.com.br/scrum/) - Scrum é uma metodologia ágil para gestão e planejamento de projetos de software.\n\n## Ferramentas\n\n- [Webmaster tools](https://www.google.com/webmasters/tools/home?hl=en&pli=1) - Gerenciar algumas informações do seu projeto online\n- [Schema Testing Tool](https://developers.google.com/structured-data/testing-tool/) - Ferramenta para avaliar as propriedades Schema do seu projeto\n- [Page Speed](https://developers.google.com/speed/pagespeed/?hl=pt-br) - Ferramenta para calcular o carregamento do seu site\n- [Acessibilidade](http://www.acessibilidade.gov.pt/accessmonitor/) - Validador automático para as WCAG\n- [Responsive](http://mattkersley.com/responsive/) - Testar A responsividade do seu projeto online\n- [Placehold](https://placehold.it/) - Gerador de imagens de exemplo online\n- [CSS - Gradient Editor](http://www.colorzilla.com/gradient-editor/) - Gerador de background Gradient CSS online\n- [CSS - Prefix](http://pleeease.io/play/) - Gerador de propriedades CSS com Prefixo dos navegadores online\n","categories":["links"]},{"title":"Começando com SCRUM","url":"/hemersonvianna/artigos/IT-management/comecando-com-scrum/","content":"\nSe está familiariazado(a) com a metodologia ágil, já deve conhecer o Scrum. Scrum é um framework para desenvolver e manter produtos complexos. Criado em 1993, por Jeff Sutherland, o processo foi formalizado para a indústria mundial de software no primeiro artigo sobre Scrum, publicado na conferência OOPSLA 1995(hoje chamada SPLASH), por Ken Schwaber. \n\nO nome Scrum é uma analogia a um estudo conduzido em 1986 por Takeuchi e Nonaka, publicado na Harvard Business Review. No estudo, compararam equipes de alto desempenho e multi funcionais com a formação \"scrum\" existente nas equipes de Rugby em que todo o time está junto em um objetivo. Se a formação for quebrada, o time todo perde. Se atingem o objetivo, a equipe toda é responsável pelo sucesso. \n\nDe 1995, para cá, o Scrum deixou de ser um método e passou a ser um framework. Pois, ele apenas indica o que deve ser feito e emprega vários processos ou técnicas.\n\n\n## O time\n\n### O Product Owner\nO Product Owner é a pessoa que define os itens que compõem o Product Backlog e os prioriza nas Sprint Planning Meetings.\n\nO Scrum Team olha para o Product Backlog priorizado, seleciona os itens mais prioritários e se compromete a entregá-los ao final de um Sprint (iteração). Estes itens transformam-se no Sprint Backlog.\n\nA equipe se compromete a executar um conjunto de atividades no Sprint e o Product Owner se compromete a não trazer novos requisitos para a equipe durante o Sprint. Requisitos podem mudar (e mudanças são encorajadas), mas apenas fora do Sprint. Uma vez que a equipe comece a trabalhar em um Sprint, ela permanece concentrada no objetivo traçado para o Sprint e novos requisitos não são aceitos.\n\n\n### O Scrum Team\nO Scrum Team é a equipe de desenvolvimento. Nela, não existe necessariamente uma divisão funcional através de papéis tradicionais, tais como programador, designer, analista de testes ou arquiteto. Todos no projeto trabalham juntos para completar o conjunto de trabalho com o qual se comprometeram conjuntamente para um Sprint.\n\nUm Scrum Team típico tem de 6 a 10 pessoas, embora haja relatos de projetos Scrum com equipes maiores. A principal abordagem para trabalhar com equipes grandes no Scrum é usando o conceito de \"Scrum of Scrums\". Cada Scrum Team trabalha normalmente, mas cada equipe também contribui com uma pessoa que deverá freqüentar o Scrum of Scrums Meeting para coordenar o trabalho de múltiplas equipes Scrum. Esses encontros são análogos aos Daily Scrums, mas não acontecem necessariamente todos os dias. Fazer essa reunião duas ou três vezes por semana tende a ser suficiente na maioria das organizações.\n\n\n### O Scrum Master\nO Scrum Master procura assegurar que a equipe respeite e siga os valores e as práticas do Scrum. Ele também protege a equipe assegurando que ela não se comprometa excessivamente com relação àquilo que é capaz de realizar durante um Sprint.\n\nO Scrum Master atua como facilitador do Daily Scrum e torna-se responsável por remover quaisquer obstáculos que sejam levantados pela equipe durante essas reuniões.\n\nO papel de Scrum Master é tipicamente exercido por um gerente de projeto ou um líder técnico, mas em princípio pode ser qualquer pessoa da equipe.\n\n\n## Eventos\n\n### Sprint\nNo Scrum, os projetos são divididos em ciclos (tipicamente mensais) chamados de Sprints. O Sprint representa um tempo definido dentro do qual um conjunto de atividades deve ser executado. Metodologias ágeis de desenvolvimento de software são iterativas, ou seja, o trabalho é dividido em iterações, que no Scrum são chamadas de Sprints e geralmente duram de 2 a 4 semanas.\n\n### Sprint Planning Meeting\nO Sprint Planning Meeting é uma reunião na qual estão presentes o Product Owner, o Scrum Master e todo o Scrum Team, bem como qualquer pessoa interessada que esteja representando a gerência ou o cliente.\n\nDurante o Sprint Planning Meeting, o Product Owner descreve as funcionalidades de maior prioridade para a equipe. A equipe faz perguntas durante a reunião de modo que seja capaz de quebrar as funcionalidades em tarefas técnicas, após a reunião. Essas tarefas irão dar origem ao Sprint Backlog.\n\nO Product Owner não precisa descrever todos os itens que estão no Product Backlog. Dependendo do tamanho do Product Backlog e da velocidade da equipe, pode ser suficiente descrever apenas os itens de maior prioridade, deixando a discussão dos itens de menor prioridade para o próximo Sprint Planning Meeting.\n\nColetivamente, o Scrum Team e o Product Owner definem um objetivo para o Sprint, que é uma breve descrição daquilo que se tentará alcançar no Sprint. O sucesso do Sprint será avaliado mais adiante no Sprint Review Meeting em relação ao objetivo traçado para o Sprint.\n\nDepois do Sprint Planning Meeting, a equipe Scrum se encontra separadamente para conversar sobre o que eles escutaram e decidir quanto eles podem se comprometer a fazer no Sprint que será iniciado. Em alguns casos, haverá negociação com o Product Owner, mas será sempre responsabilidade da equipe determinar o quanto ela será capaz de se comprometer a fazer.\n\n### Daily Scrum\nA cada dia do Sprint a equipe faz uma reunião diária, chamada Daily Scrum. Ela tem como objetivo disseminar conhecimento sobre o que foi feito no dia anterior, identificar impedimentos e priorizar o trabalho a ser realizado no dia que se inicia.\n\nOs Daily Scrums normalmente são realizadas no mesmo lugar, na mesma hora do dia. Idealmente são realizados na parte da manhã, para ajudar a estabelecer as prioridades do novo dia de trabalho.\n\nTodos os membros da equipe devem participar do Daily Scrum. Outras pessoas também podem estar presentes, mas só poderão escutar. Isso torna os Daily Scrums uma excelente forma para uma equipe disseminar informações sobre o estado do projeto.\n\nO Daily Scrum não deve ser usado como uma reunião para resolução de problemas. Questões levantadas devem ser levadas para fora da reunião e normalmente tratadas por um grupo menor de pessoas que tenham a ver diretamente com o problema ou possam contribuir para solucioná-lo. Durante o Daily Scrum, cada membro da equipe provê respostas para cada uma destas três perguntas:\n\n    O que você fez ontem?\n    O que você fará hoje?\n    Há algum impedimento no seu caminho?\n\nConcentrando-se no que cada pessoa fez ontem e no que ela irá fazer hoje, a equipe ganha uma excelente compreensão sobre que trabalho foi feito e que trabalho ainda precisa ser feito. O Daily Scrum não é uma reunião de status report na qual um chefe fica coletando informações sobre quem está atrasado. Ao invés disso, é uma reunião na qual membros da equipe assumem compromissos perante os demais.\n\nOs impedimentos identificados no Daily Scrum devem ser tratados pelo Scrum Master o mais rapidamente possível.\n\n### Sprint Review Meeting\nAo final de cada Sprint é feito um Sprint Review Meeting. Durante esta reunião, o Scrum Team mostra o que foi alcançado durante o Sprint. Tipicamente, isso tem o formato de um demo das novas funcionalidades.\n\nOs participantes do Sprint Review tipicamente incluem o Product Owner, o Scrum Team, o Scrum Master, gerência, clientes e engenheiros de outros projetos.\n\nDurante o Sprint Review, o projeto é avaliado em relação aos objetivos do Sprint, determinados durante o Sprint Planning Meeting. Idealmente, a equipe completou cada um dos itens do Product Backlog trazidos para fazer parte do Sprint, mas o importante mesmo é que a equipe atinja o objetivo geral do Sprint.\n\n### Sprint Retrospective\nO Sprint Retrospective ocorre ao final de um Sprint e serve para identificar o que funcionou bem, o que pode ser melhorado e que ações serão tomadas para melhorar.\n\n### Burn Down Chart\nO Burndown é um simples gráfico, com dois eixos X e Y, baseado nas atividades que não ultrapassem um dia de trabalho. O eixo X indica o número de tarefas existentes no Sprint e o eixo Y os dias que representam o tamanho do Sprint.\n\n## Artefatos\n\n### Product Backlog\nO Product Backlog é uma lista contendo todas as funcionalidades desejadas para um produto. O conteúdo desta lista é definido pelo Product Owner. O Product Backlog não precisa estar completo no início de um projeto. Pode-se começar com tudo aquilo que é mais óbvio em um primeiro momento. Com o tempo, o Product Backlog cresce e muda à medida que se aprende mais sobre o produto e seus usuários.\n\nDurante o Sprint Planning Meeting, o Product Owner prioriza os itens do Product Backlog e os descreve para a equipe. A equipe então determina que itens será capaz de completar durante a Sprint que está por começar. Tais itens são, então, transferidos do Product Backlog para o Sprint Backlog. Ao fazer isso, a equipe quebra cada item do Product Backlog em uma ou mais tarefas do Sprint Backlog. Isso ajuda a dividir o trabalho entre os membros da equipe. Podem fazer parte do Product Backlog tarefas técnicas ou atividades diretamente relacionadas às funcionalidades solicitadas.\n\n\n### Sprint Backlog\nO Sprint Backlog é uma lista de tarefas que o Scrum Team se compromete a fazer em um Sprint. Os itens do Sprint Backlog são extraídos do Product Backlog, pela equipe, com base nas prioridades definidas pelo Product Owner e a percepção da equipe sobre o tempo que será necessário para completar as várias funcionalidades.\n\nCabe a equipe determinar a quantidade de itens do Product Backlog que serão trazidos para o Sprint Backlog, já que é ela quem irá se comprometer a implementá-los.\n\nDurante um Sprint, o Scrum Master mantém o Sprint Backlog atualizando-o para refletir que tarefas são completadas e quanto tempo a equipe acredita que será necessário para completar aquelas que ainda não estão prontas. A estimativa do trabalho que ainda resta a ser feito no Sprint é calculada diariamente e colocada em um gráfico, resultando em um Sprint Burndown Chart.\n\n## Conclusão\n\nMesmo sendo possível implementar apenas partes do Scrum, não será Scrum, se não for aplicado em sua totalidade. Seja adepto das metodologias ágeis e vale a pena conhecer mais sobre o Scrum.\n","categories":["IT management"]},{"title":"Começando com UML","url":"/hemersonvianna/artigos/IT-management/comecando-com-uml/","content":"\nA UML(Unified Modelling Language) é a linguagem para modelagem de dados orientado a objetos, para a especificação, construção, visualização e documentação de um software em desenvolvimento. Se formou na junção de 3 mentes responsáveis por métodos de modelagem orientada a objeto: [Grady Booch](https://twitter.com/grady_booch), James Rumbaugh e [Ivar Jacobson](https://twitter.com/ivarjacobson). A linguagem UML foi adotada em 1997 pela [OMG (Object Management Group)](http://www.omg.org/spec/), que define e ratifica padrões na área de Orientação a Objetos.\n\nO desejo da criação da UML, começou em outubro de 1994, com Booch e Rumbaugh na Rational Software Corporation, que foi adquirida pela IBM em 20 de fevereiro de 2003. Em outubro de 1995, unificaram os métodos Booch e OMT, tendo o seu primeiro esboço da versão 0.8 do Unified Process (Processo Unificado). Um pouco mais tarde com a associando de Jacobson, em junho de 1996, a versão 0.9 da UML, foi lançada com a incorporação do método OOSE.\n\n- ***Booch – Grady Booch*** - Booch definiu a noção de que um sistema é analisado a partir de um número de visões, onde cada visão é descrita por um número de modelos e diagramas. O Método de Booch trazia uma simbologia complexa de ser desenhada a mão, continha também o processo pelo qual sistemas são analisados por macro e micro visões.\n- ***OMT(Object Modelling Technique) – James Rumbaugh*** - A técnica de Modelagem de Objetos é especialmente voltado para o teste dos modelos, baseado nas especificações da análise de requisitos do sistema. O modelo total do sistema baseado no método OMT é composto pela junção dos modelos de objetos, funcional e use-cases.\n- ***OOSE(Object-Oriented Software Engineering) –  Ivar Jacobson*** - O método é a visão de Jacobson de um método orientado a objetos. Baseado na utilização de use-cases, que definem os requisitos iniciais do sistema, vistos por um ator externo.\n\n## Conceito da orientação a objetos\n\nPara utilizar a UML, é necessário conhecer o conceito da orientação a objetos e entender sobre: objetos, classes, \nabstração, encapsulamento, herança, comunicação com mensagens, métodos de organização e polimorfismo. \n\n- ***Objetos*** - É um substantivo que pode ser abstrato ou real, sobre o qual armazenamos dados e operações que manipulam os\ndados, como uma pessoa, um carro e etc.\n- ***Classes*** - É uma coleção de objetos que podem ser descritos com os mesmos atributos e as mesmas operações\n- ***Abstração*** - Focaliza a visão externa de um objeto, separando - a em comportamento, descrito pela interface dos métodos da classe e implementação, composta pelas variáveis de instancia e corpo dos métodos.\n- ***Encapsulamento*** - Esconde dos usuários de um objeto, os detalhes da implementação interna. Os usuários compreendem quais operações podem ser solicitadas de um objeto, mas não conhecem os detalhes de como a operação é executada.\n- ***Herança*** - É o mecanismo de compartilhamento automático de métodos e dados entre classes, subclasses.\n- ***Polimorfismo*** - Permite que o programa trate uniformemente objetos que pertencem a classe diferentes, isto é, o programa envia a  mesma mensagem a objetos de diferentes classe resultando um comportamento diferente. Existem alguns tipos de Polimorfismo: paramétrico, de inclusão, por `overloading` e por coerção.\n\t- ***Paramétrico*** - quando uma função funciona uniformemente sobre uma gama de tipos.\n\t- ***De inclusão*** -  através do mecanismo de herança de objeto pode pertencer a um número infinito de classes, aplicação do princípio de substituição.\n\t- ***Por overloading*** - mesmo nome de variável utilizado para denotar diferentes funções. É o contexto que decide que função utilizar.\n\t- ***Por coerção*** - operação semântica é utilizada para converter argumento para tipo necessário.\n\n## Diagramas\n\nApenas vou listar os tipos de diagramas, que aos poucos irei criando um artigo para cada diagrama. :)\n\n### Diagramas de Estrutura (estático)\n- Diagrama de Classe\n- Diagrama de Objeto\n- Diagrama de Pacotes\n- Diagrama de Componentes\n- Diagrama de Implantação\n- Diagrama de Estrutura Composta\n- Diagrama de Perfis\n\n### Diagramas de Comportamento(dinâmico)\n- Diagrama de Caso de Uso\n- Diagrama de Atividade\n- Diagrama de Máquina de Estados\n- Diagramas de Interação\n\t- Diagrama de Sequência\n\t- Diagrama de Comunicação\n\t- Diagrama de Tempo\n\t- Diagrama de Interação Geral\n\n\n## Versões da UML\n\nA versão atual é a UML 2.5. \n\n- ***1.1*** - OMG (Object Management Group – 1997)\n- [***1.3*** - Março de 2000](http://www.omg.org/spec/UML/1.3/)\n- [***1.4*** - Setembro de 2001](http://www.omg.org/spec/UML/1.4/)\n- [***1.5*** - Março de 2003](http://www.omg.org/spec/UML/1.5/)\n- [***2.0*** - Julho de 2005](http://www.omg.org/spec/UML/2.0/)\n- [***2.1.1*** - Agosto de 2007](http://www.omg.org/spec/UML/2.1.1/)\n- [***2.1.2*** - Novembro de 2007](http://www.omg.org/spec/UML/2.1.2/)\n- [***2.2*** - Fevereiro de 2009](http://www.omg.org/spec/UML/2.2/)\n- [***2.3*** - Maio de 2010](http://www.omg.org/spec/UML/2.3/)\n- [***2.4*** - Março de 2011](http://www.omg.org/spec/UML/2.4/)\n- [***2.4.1*** - Agosto de 2011](http://www.omg.org/spec/UML/2.4.1/)\n- [***2.5*** - Junho de 2015](http://www.omg.org/spec/UML/2.5)\n\n\n## Conclusão\n\nEssa foi uma rápida introdução a UML. Terá uma série de artigos, explicando sobre cada diagrama e mais atualizações sobre o assunto.\n","categories":["IT management"]},{"title":"PHP - Orientação a objetos","url":"/hemersonvianna/artigos/php/php-orientacao-a-objetos/","content":"\nA Programação orientada a objetos permite que os desenvolvedores agrupem tarefas semelhantes em classes. O PHP não é uma linguagem que foi criada para ser orientada a objetos. Começando a dar suporte ao mesmo na versão 3, sendo melhorada na versão 4 e tendo um bom suporte na versão 5.3.\n\nO primeiro e mais importante conceito de orientação a objetos é a classe, uma abstração do software de objetos similares, ou seja, um template do qual os objetos serão criados.\n\nNa criação de uma classe, o nome é precedido da palavra reservada `class` e seguida de um par de chaves `{}`  :\n\n```php\n<?php\nclass Person {\n  // conteúdo da classe\n}\n?>\n```\n\n## Atributos/Propriedades\n\nSão elementos que definem uma classe, também são conhecidos como variáveis de classe. A palavra chave `public` determina a visibilidade da propriedade (vamos ver mais sobre isso no decorrer do artigo, na parte de visibilidade de propriedades e métodos). Depois disso, a propriedade é nomeada usando os padrões básicos de nomeação de variáves e é mostrado que não necessitam de valores iniciais.\n\n```php\n<?php\n// person.php\nclass Person {\n  public $name;\n  public $cpf;\n  public $age;\n}\n?>\n```\n\n## Métodos\n\nSão funções internas das classes que realizam algo, geralmente tomando por base os dados armazenados nas propriedades. Dentro dos métodos, as propriedades e outros métodos internos da classe são referenciados utilizando `$this`. \n\n\n### Construtor\n\nO construtor da classe é um bloco declarado com o mesmo nome que a classe.\n\n```php\n<?php\n// person.php\nclass Person {\n  public $name;\n  public $cpf;\n  public $age;\n  \n  //construtor da classe\n  function Person(){\n    $this->getPerson();\n  }\n\n  function getPerson(){\n    $this->name = \"Hemerson\";\n    $this->cpf = \"123.123.123-22\";\n    $this->age = 29;\n  }\n\n  function getMessage(){\n    return 'Meu nome é ' . $this->name;\n  }\n}\n?>\n```\n\nApós criar a classe, ela pode ser instanciada e guardada em alguma variável usando a palavra chave `new`. O operador `->`, permite acessar as propriedades e métodos de um objeto.\n\n```php\n<?php\nrequire_once 'person.php';\n\n$person = new Person();\n\necho $person->name;\n// Hemerson\necho $person->getMessage();\n// Meu nome é Hemerson\n?>\n```\n\n## Métodos Mágicos\n\nAo invés de termos um método com o mesmo nome da classe para ser o construtor, o PHP provê o método `__construct()`, que é chamado automaticamente quando a classe é instanciada. Também há inúmeras constantes mágicas, como `__CLASS__`, que retorna o nome da classe. Podemos ver as constantes disponíveis no [Manual do PHP](http://us3.php.net/manual/pt_BR/language.constants.predefined.php). Os demais métodos mágicos podemos conferir no [Manual](http://php.net/manual/pt_BR/language.oop5.magic.php).\n\n```php\n<?php\nclass Person {\n  public $name = \"Hemerson\";\n\n  public function __construct(){\n    echo 'Meu nome é ' . $this->name .' e a classe ' . __CLASS__ . ' foi instanciada';\n  }\n}\n\n$person = new Person();\n// Meu nome é Hemerson e a classe Person foi instanciada\n?>\n```\n\n## Herança de Classe\n\nNa Orientação a objetos, as classes podem herdar métodos e propriedades de outra classe. Isso é possível utilizando a palavra chave `extends`.\n\n```php\n<?php\nclass Person {\n  public $name = \"Hemerson\";\n  public $cpf = \"123.123.123-22\";\n  public $age = 29;\n  \n  function __construct(){\n    echo 'Essa classe é a ' . __CLASS__;\n  }\n\n  function getMessage(){\n    return 'Meu nome é ' . $this->name;\n  }\n}\n\nclass Example extends Person {\n  function __construct(){\n    echo 'Essa classe é a ' . __CLASS__;\n  }\n}\n\n$example = new Example();\n// Meu nome é Hemerson\n?>\n```\nAssim, temos superclasses e subclasses na orientação a objetos. Onde as superclasses são classes mãe, que não derivam de nenhuma outra classe e as subclasses são classes que são criadas a partir de outras classes. Podemos utilizar as palavras parent (se referindo a classe mãe) e self (se referindo a classe atual). \n\n```php\n<?php\nclass Person {\n  public $message = \"Eu sou o Hemerson\";\n  \n  public function __construct(){\n    echo 'Essa classe é a ' . __CLASS__;\n  }\n  \n  public function getMessage(){\n    return $this->message.\"--\";\n  }\n}\n\nclass Example extends Person {\n  public $message = \"Não sou o Hemerson\";\n  \n  public function __construct(){\n    echo parent::getMessage();\n    echo self::getMessage();\n    echo $this->getMessage();\n  }\n  \n  public function getMessage(){\n    return $this->message;\n  }\n}\n\n$example = new Example();\n// Não sou o Hemerson--\n// Não sou o Hemerson\n// Não sou o Hemerson\n?>\n```\nTemos que ficar atentos, que quando há uma propriedade de mesmo nome na subclasse, a propriedade da superclasse será sobrescrita e o valor da subclasse passará a valer.\n\n\n## Visbilidade de Propriedades e Métodos\n\nA visibilidade controla como e de onde as propriedades e métodos podem ser acessados. Há três palavras chaves para visibilidade: `public`, `protected`, e `private`. Também pode ser adicionado à sua visibilidade, a palavra chave `static`, o que permite que sejam acessados sem uma instanciação da classe. Se a visibilidade não é declarada, automaticamente se considera como `public`. O uso da declaração de variável com a palavra-chave `var` ainda é suportada por razões de compatibilidade e o mesmo é um sinônimo para a palavra-chave `public`. \n\n- **public** - Podem ser acessados de qualquer lugar, tanto dentro quanto fora da classe.\n- **protected** - Só pode ser acessado dentro da própria classe ou por uma classe herdeira.\n- **private** - É acessível somente dentro da classe que os define.\n- **static** - Podem ser acessados sem instanciar a classe.\n\n```php\n<?php\nclass Person {\n  public $name = 'Hemerson';\n  protected $cpf = '123.123.123-22';\n  private $status = true;\n\n  function __construct(){\n  }\n}\n\nclass Example extends Person {\n  function __construct(){\n  }\n\n  function getCpf(){\n    return $this->cpf;\n  }\n\n  function getStatus(){\n    return $this->status;\n  } \n}\n\n$person = new Person();\n$example = new Example();\n\necho $person->name; // Hemerson\n\necho $example->name; // Hemerson\necho $example->getCpf(); // 123.123.123-22\necho $example->cpf; // FATAL ERROR Cannot access protected property Example::$cpf \n\necho $example->getStatus(); // Undefined property: Example::$status\n?>\n```\nAgora um exemplo com a adição da palavra chave `static`:\n\n```php\n<?php\nclass Person {\n  public static $message = 'Teste';\n    \n  public static function exampleMethod() {\n    return self::$message;\n  }\n}\n\nprint Person::$message; // Teste\n\n$person = new Person();\n\nprint $person->exampleMethod() . \"\\n\"; // Teste\nprint $person->message . \"\\n\";\n// Accessing static property Person::$message as non static\n// Undefined property: Person::$message\n?>\n```\n\nPropriedades estáticas não podem ser acessadas através do operador ->.\n\n## Conclusão\n\nProgramação orientada a objetos é uma coisa linda. Pode parecer complicado no começo, mas como tudo, a prática e entender o que está fazendo, leva a perfeição. É só cair dentro dos estudos e ver as vantagens, que serão notadas. Facilidade na manutenção e organização, ajudando você e sua equipe.\n","categories":["php"]},{"title":"PHP - Entendendo o array","url":"/hemersonvianna/artigos/php/php-entendendo-o-array/","content":"\nO assunto de hoje é o sobre `array`. Se já mexeu com alguma linguagem de programação, já deve ter visto ou trabalhado com um `array`. Se é leigo no assunto, vamos estar vendo sobre o mesmo no PHP.\n\nOs `arrays` também podem ser identificados como `tipos de dados compostos`. Os elementos e os dados de um `array`, são conhecimos como os `pares de chave e valor`. Vamos supor que temos um `array` com 3 elementos, onde cada um contém uma letra do alfabeto. Exemplo:\n\n```php\n// Chave :  0 1 2\n// Valor :  a b c\n```\n\nNa prática temos duas formas de criar um array e representar esse exemplo:\n\n```php\n// função array\n$array = array(0 => 'a', 1 => 'b', 2 => 'c');\n// ou\n// com colchetes\n$array2 = array();\n$array2 = ['a', 'b', 'c'];\n\n// variação com colchetes\n$array3 = array();\n$array3[0] = 'a';\n$array3[1] = 'b';\n$array3[2] = 'c';\n```\n\nNão se preocupe com os exemplos práticos. Logo abaixo vamos estar vendo os tipos, funções de `arrays` e as regras para entender melhor como eles funcionam. \n\n## Tipos de arrays\n\nUma coisa muito importante, é não esquecer que a chave numérica de um elemento de um `array`, sempre começa em 0. E você pode acessar um elemento do `array`, acessando com a chave entre colchetes. Exemplo:\n\n```php\n$array = array(0 => 'a', 1 => 'b', 2 => 'c');\necho $array[2];\n// c\n```\n\n### Indexado / Associativo\n\nUm `array indexado` é conhecido como tal, qual suas chaves são do tipo numérico. Um `array` de chaves nomeadas com `strings`, é conhecido como `array associativo`.\n\n```php\n// Array com chaves númericas(indexadas)\n// Chave :  0 1 2\n// Valor :  a b c\n$array = array(0 => 'a', 1 => 'b', 2 => 'c');\n```\n\n```php\n// Array com chaves nomeadas(associativas)\n// Chave :  name age status\n// Valor :  Ana  20  1\n$array = array('name' => 'Ana', 'age' => 20, 'status' => 1);\n```\n\n### Bidimensional / Multidimensional\n\nOs `arrays` podem ser de duas ou mais dimensões. Isso quer dizer, que podemos ter um `array`, dentro de um `array`. Não se tem um limite de dimensões para os `arrays`, mas dependendo da quantidade, fica difícil manter o código de fácil entendimento. Exemplo:\n\n```php\n// Array tridimensional\n$array = array(0 => 'a', 1 => array(0 => 'a', 1 => 'b', 2 => array(0 => 'entrou', 1 => 'saiu')), 2 => 'c');\necho $array[1][2][0];\n// entrou\n```\n\n### Dinâmicos\n\nJá vimos que os `arrays` podem ser indexados, associativos, bidimensionais e até multidimensionais. No PHP, eles também podem ser dinâmicos. Com isso, podemos adicionar, deletar e alterar os elementos com comandos e funções para esse uso. \n\n```php\n$array = array('name' => 'Ana', 'country' => 'Brasil');\n// Comando que adicionará ao final do array\n$array['age'] = 29;\n```\n\nAcima, temos um `array` associativo com 3 elementos. O que acontece se adicionarmos um valor, sem informar a chave? Podemos conferir no exemplo abaixo.\n\n```php\n$array = array('name' => 'Ana', 'country' => 'Brasil', 'age' => 29);\n$array[] = 'ihhhh';\nvar_dump($array);\n// 'name' => 'Ana', 'country' => 'Brasil', 'age' => 29, 0 => 'ihhhh'\n```\n\nÉ, quando não informamos a chave, automaticamente a chave recebe o próximo índice numérico. Como é apenas um `array` associativo e não tinha nenhuma chave numérica, o próximo índice é o `0`. Vamos ver como fica no próximo exemplo.\n\n```php\n$array = array(0 => 'Ana', 1 => 'Brasil', 'age' => 29);\n$array[] = 'ihhhh';\nvar_dump($array);\n// 0 => 'Ana', 1 => 'Brasil', 'age' => 29, 2 => 'ihhhh'\n```\n\nPara alterar o valor, é bem intuitivo. Basta informar a chave e lhe dar o novo valor.\n\n```php\n$array = array(0 => 'Ana', 1 => 'Brasil', 'age' => 29);\n$array['age'] = 31;\nvar_dump($array);\n// 0 => 'Ana', 1 => 'Brasil', 'age' => 31\n```\n\nAgora vamos brincar um pouco ao remover elementos com a função `array_splice`. Na função, você informa 3 parâmetros, sendo o terceiro opcional. \n\n```php\n$array = array(0 => 'Ana', 1 => 'Brasil', 'age' => 29);\n// Parâmetros\n// 1º = array, 2º = remover a partir de qual posição , 3º = quantos elementos remover\n// Quando não informamos o 3º, ele remove da posição informada no 2º parâmetro até o último elemento do array\narray_splice($array, 1);\nvar_dump($array);\n// 0 => 'Ana'\n```\n\n```php\n$array = array(0 => 'Ana', 1 => 'Brasil', 'age' => 29);\narray_splice($array, 0, 1);\nvar_dump($array);\n// 1 => 'Brasil', 'age' => 29\n```\n\nTambém podemos criar um novo `array`, apenas com o resultado da função `array_splice`, em uma variavel. Exemplo:\n\n```php\n$array = array(0 => 'Ana', 1 => 'São Paulo', 2 => 'Rio de Janeiro');\n$arrayTemp = $array;\n$arrayStates = array_splice($arrayTemp, 1, 2);\nvar_dump($array);\n// 0 => 'Ana', 1 => 'São Paulo', 2 => 'Rio de Janeiro'\nvar_dump($arrayStates);\n// 0 => 'São Paulo', 1 => 'Rio de Janeiro'\n```\n\nUma outra função para remover elementos de um array, é a função `unset`. Exemplo:\n\n```php\n$array = array(0 => 'Ana', 1 => 'São Paulo', 2 => 'Rio de Janeiro');\nunset($array[1]);\nvar_dump($array);\n// 0 => 'Ana', 2 => 'Rio de Janeiro'\n```\n\n## Foreach\n\nFunciona apenas com arrays. Retorna um erro se for utilizado em uma variável de qualquer tipo diferente ou em variáveis não inicializadas. Pode ser usada de duas formas:\n\n```php\nforeach (array as $valor) {\n\t// instrução\n}\n\nforeach (array as $chave => $valor) {\n\t// instrução\n}\n```\n\n```php \n$arr = array(1, 2, 3, 4);\nforeach ($arr as $value) {\n    $value = $value * 2;\n}\n// $arr = array(2, 4, 6, 8)\n```\n\n## Algumas funções de Array\n\nO `array` é muito usado no PHP. Por esse motivo, tem muitas funções nativas da linguagem, que podemos utilizar.\n\n### sort\n\nEssa função ordena um array. Os elementos serão ordenados do menor para o maior ao final da execução dessa função. \n\n```php\n// bool sort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"item1\", \"item2\", \"item3\", \"item4\");\nsort($items);\nforeach ($items as $key => $val) {\n    echo \"items[\" . $key . \"] = \" . $val . \"\\n\";\n}\n?>\n\n// items[0] = item4\n// items[1] = item3\n// items[2] = item1\n// items[3] = item2\n```\n\n### rsort\n\nEssa função ordena um array em ordem descrescente (do maior para o menor). \n\n```php\n// bool rsort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"item1\", \"item2\", \"item3\", \"item4\");\nrsort($items);\nforeach ($items as $key => $val) {\n    echo \"$key = $val\\n\";\n}\n?>\n\n// 0 = item2\n// 1 = item1\n// 2 = item3\n// 3 = item4\n\n```\n\n### asort\n\nEssa função ordena um array de forma que a correlação entre índices e valores é mantida. É usada principalmente para ordenar arrays associativos onde a ordem dos elementos é um fator importante. \n\n```php\n// bool asort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"d\" => \"item1\", \"a\" => \"item2\", \"b\" => \"item3\", \"c\" => \"item4\");\nasort($items);\nforeach ($items as $key => $val) {\n    echo \"$key = $val\\n\";\n}\n?>\n\n// c = item4\n// b = item3\n// d = item1\n// a = item2\n```\n\n### arsort\n\n Esta função ordena um array de forma que a correlação entre índices e valores é mantida. É usada principalmente para ordenar arrays associativos onde a ordem dos elementos é um fator importante. \n\n```php\n// bool arsort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"d\" => \"item1\", \"a\" => \"item2\", \"b\" => \"item3\", \"c\" => \"item4\");\narsort($items);\nforeach ($items as $key => $val) {\n    echo \"$key = $val\\n\";\n}\n?>\n\n// a = item2\n// d = item1\n// b = item3\n// c = item4\n```\n\n### ksort\n\nOrdena um array pelas chaves, mantendo a correlação entre as chaves e os valores. Essa função é bastante útil principalmente para arrays associativos. \n\n```php\n// int ksort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"d\"=>\"item1\", \"a\"=>\"item2\", \"b\"=>\"item3\", \"c\"=>\"item4\");\nksort($items);\nforeach ($items as $key => $val) {\n    echo \"$key = $val\\n\";\n}\n?>\n\n// a = item2\n// b = item3\n// c = item4\n// d = item1\n```\n\n### krsort\n\nOrdena um array pelas chaves em ordem descrescente, mantendo a correlação entre entre as chaves e os valores. Essa função é bastante útil em arrays associativos. \n\n```php\n// bool krsort ( array &$array [, int $sort_flags ] )\n\n<?php\n$items = array(\"d\"=>\"item1\", \"a\"=>\"item2\", \"b\"=>\"item3\", \"c\"=>\"item4\");\nkrsort($items);\nforeach ($items as $key => $val) {\n    echo \"$key = $val\\n\";\n}\n?>\n\n// d = item1\n// c = item4\n// b = item3\n// a = item2\n```\n\n### usort\n\nEssa função irá ordenar um array pelos valores usando uma função de classificação definida pelo usuário. Se o array precisar ser ordenado utilizando um critério não trivial, você deve usar essa função. \n\n```php\n// bool usort ( array &$array , string $cmp_function )\n\n<?php\nfunction cmp($a, $b) {\n\tif ($a == $b) {\n\t\treturn 0;\n\t}\n\treturn ($a < $b) ? -1 : 1;\n}\n\n$a = array(3, 2, 5, 6, 1);\n\nusort($a, \"cmp\");\n\nforeach ($a as $key => $value) {\n\techo \"$key: $value\\n\";\n}\n?>\n\n// 0: 1\n// 1: 2\n// 2: 3\n// 3: 5\n// 4: 6\n```\n\n### array_sum\n\n`array_sum()` retorna a soma dos valores de um array. \n\n```php\n// number array_sum ( array $array )\n\n<?php\n$a = array(2, 4, 6, 8);\necho \"sum(a) = \" . array_sum($a) . \"\\n\";\n\n$b = array(\"a\" => 1.2, \"b\" => 2.3, \"c\" => 3.4);\necho \"sum(b) = \" . array_sum($b) . \"\\n\";\n?>\n\n// sum(a) = 20\n// sum(b) = 6.9\n```\n\n### array_unique\n\nRecebe o argumento array e retorna um novo array sem valores duplicados. \n\n```php\n// array array_unique ( array $array )\n\n<?php\n$input = array(\"a\" => \"green\", \"red\", \"b\" => \"green\", \"blue\", \"red\");\n$result = array_unique($input);\nprint_r($result);\n?>\n\n// Array\n// (\n//     [a] => green\n//     [0] => red\n//     [1] => blue\n// )\n```\n\n### in_array\n\nProcura no array, pelo valor informado. \n\n```php\n// bool in_array ( mixed $needle , array $haystack [, bool $strict ] )\n\n<?php\n$os = array(\"Mac\", \"NT\", \"Irix\", \"Linux\");\nif (in_array(\"Irix\", $os)) {\n    echo \"Got Irix\";\n}\nif (in_array(\"mac\", $os)) {\n    echo \"Got mac\";\n}\n?>\n\n// Got Irix\n```\n\n### array_search\n\nProcura no array, pelo valor informado. \n\n```php\n// mixed array_search ( mixed $needle , array $haystack [, bool $strict ] )\n\n<?php\n$array = array(0 => 'blue', 1 => 'red', 2 => 'green', 3 => 'red');\n\n$key = array_search('green', $array); // $key = 2;\n$key = array_search('red', $array);   // $key = 1;\n?>\n\n```\n\n### array_rand\n\n`array_rand()` é bastante útil quando se quer conseguir aleatoriamente um ou mais elementos de um array. \n\n```php\n// mixed array_rand ( array $input [, int $num_req ] )\n\n<?php\n$input = array(\"Neo\", \"Morpheus\", \"Trinity\", \"Cypher\", \"Tank\");\n$rand_keys = array_rand($input, 2);\necho $input[$rand_keys[0]] . \"\\n\";\necho $input[$rand_keys[1]] . \"\\n\";\n?>\n\n```\n\n### array_merge\n\nFunde os elementos de dois ou mais arrays de forma que os elementos de um são colocados no final do array anterior. Retorna o array resultante da fusão. \n\n```php\n// array array_merge ( array $array1 [, array $array2 [, array $... ]] )\n\n<?php\n$array1 = array(\"color\" => \"red\", 2, 4);\n$array2 = array(\"a\", \"b\", \"color\" => \"green\", \"shape\" => \"trapezoid\", 4);\n$result = array_merge($array1, $array2);\nprint_r($result);\n?>\n\n// Array\n// (\n//     [color] => green\n//     [0] => 2\n//     [1] => 4\n//     [2] => a\n//     [3] => b\n//     [shape] => trapezoid\n//     [4] => 4\n// )\n```\n\n### array_walk\n\nAplica uma função definida pelo usuário nomeada pelo argumento `funcname` em cada elemento de array. \n\n```php\n// bool array_walk ( array &$arrary , string $funcname [, mixed $userdata ] )\n\n<?php\nfunction myfunction($value,$key){\necho \"The key $key has the value $value<br>\";\n}\n$a=array(\"a\"=>\"red\",\"b\"=>\"green\",\"c\"=>\"blue\");\narray_walk($a,\"myfunction\");\n?>\n\n// The key a has the value red\n// The key b has the value green\n// The key c has the value blue\n```\n\n### count\n\nConta os elementos de um array.\n\n```php\n// int count ( mixed $var [, int $mode ] )\n\n<?php\n$a[0] = 1;\n$a[1] = 3;\n$a[2] = 5;\n$result = count($a);\n// $result == 3\n?>\n```\n\n### shuffle\n\nEssa função mistura de forma aleatória os elementos de um array. \n\n```php\n// bool shuffle ( array &$array )\n\n<?php\n$numbers = range(1, 20);\nshuffle($numbers);\nforeach ($numbers as $number) {\n\techo \"$number \";\n}\n?>\n\n// 15 9 18 19 12 16 4 17 20 1 5 13 8 6 7 3 11 2 14 10 \n```\n\n### extract\n\n Importar variáveis a partir de um array para a tabela de símbolos corrente. `extract()` verifica cada chave e vê se ela tem um válido nome de variável. Também verifica por colisões com já existente variáveis na tabela de símbolo. \n\n```php\n// int extract ( array $var_array [, int $extract_type [, string $prefix ]] )\n\n<?php\n\n$size = \"large\";\n$var_array = array(\"color\" => \"blue\",\n                   \"size\"  => \"medium\",\n                   \"shape\" => \"sphere\");\nextract($var_array, EXTR_PREFIX_SAME, \"wddx\");\n\necho \"$color, $size, $shape, $wddx_size\\n\";\n\n// blue, large, sphere, medium\n?>\n\n```\n\n### compact\n\nCria um array contendo variáveis e seus valores. \n\n```php\n// array compact ( mixed $varname [, mixed $... ] )\n\n<?php\n$city  = \"San Francisco\";\n$state = \"CA\";\n$event = \"SIGGRAPH\";\n\n$location_vars = array(\"city\", \"state\");\n\n$result = compact(\"event\", \"nothing_here\", $location_vars);\nprint_r($result);\n?>\n\n// Array\n// (\n//     [event] => SIGGRAPH\n//     [city] => San Francisco\n//     [state] => CA\n// )\n```\n\n## Referências\n\n- [PHP Documentation](http://php.net/docs.php) - Manual do PHP\n\n## Conclusão\n\nSe pode brincar bastante com arrays em PHP. Nas linguagens de programação, com certeza irá se deparar com um `array`. Sempre busque a melhor maneira de trabalhar com eles, pois ele pode ser usado da forma mais básica, até a mais complexa com multidimensões.\n","categories":["php"]},{"title":"PHP - Trabalhando com string","url":"/hemersonvianna/artigos/php/php-trabalhando-com-string/","content":"\nTendo até mesmo pouco contato com a programação web, já deve ter visto ou utilizado uma `string`. No PHP, temos as intruções `echo` e `print`para enviar uma `string` para o navegador. \n\n### echo\n\nPermite vários parâmetros.\n```php\n<?php\necho \"test\", \"test2\", \"test3\";\n// testtest2test3\necho(\"test2\");\n// test2\n?>\n```\n\nEstando ativado no `php.ini` o módulo **short_open_tag**, você pode executar o comando `echo`, com a combinação de tags PHP e o sinal de `=`.\n```php\n<?=\"Test\";?>\n// Test\n```\n\n### print\nRetorna 1 após o envio da saída, pode ser usada em expressões e permite apenas um parâmetro.\n```php\n<?php\n$example = print(\"print\");\n// print\necho $example;\n// 1\n?>\n```\n\n## Escape\n\nNo PHP, para imprimir uma `string`, você pode usar aspas duplas ou simples. Podem haver casos em que seja necessário a impressão das aspas. Para que isso seja possível, temos duas formas: usar os 2 tipos de aspas ou o `escape`(com a barra invertida).\n```php\n<?php\necho \"test 'string' \";\n// test 'string'\necho 'test \"string\" ';\n// test \"string\"\n\n// Escape\necho \"test \\\"string\\\" \";\n// test \"string\"\n?>\n```\n\nO `escape` também pode ser utilizado com outros caracteres. No exemplo abaixo, quando usamos o cifrão, o PHP interpreta que estamos tentando enviar o conteudo de uma variável.\n```php\n<?php\necho \"execute $test \";\n// Notice: Undefined variable: test in ..........\n?>\n```\n\nCom o `escape`, temos o resultado esperado.\n```php\n<?php\necho \"execute \\$test \";\n// execute $test\n?>\n```\n\nÉ válido também mencionar que a barra invertida tem outra utilidade. Combinando a barra invertida com a letra `n`(\\n), o PHP interpreta como uma diretiva de nova linha. Importante lembrar que isso funciona apenas com aspas duplas, não temos o mesmo resultado com aspas simples.\n```php\n<?php\necho \"line \\n new line\";\n// line\n//  new line\n\necho 'line \\n new line';\n// line \\n new line\n?>\n```\n\nPara ser possível ver isso no navegador, é necessário colocar dentro da tag `pre`. Sendo o mais aconselhável, utilizar a tag `br` para esse fim.\n```php\n<pre>\n<?php\necho \"line \\n new line \";\n// line\n//  new line\n?>\n</pre>\n\n<?php\necho \"line <br> new line \";\n// line\n//  new line\n?>\n```\n\n## Algumas funções de string\n\nVamos notar que as funções não seguem uma convenção de nomenclatura. Essa flexibilidade é um ponto forte ao mesmo tempo um ponto fraco do PHP.\n\n### ltrim\n\nRetira espaço em branco (ou outros caracteres) do início de uma string.\n\n```php\n// string ltrim ( string $str [, string $character_mask ] )\n<?php\n$string = \" Teste\";\nvar_dump(ltrim($string));\n?>\n\n// string(5) \"Teste\"\n```\n\n### rtrim\n\nEsta função retorna uma string com espaços em branco retirados do final da string.\n\n```php\n// string rtrim ( string $str [, string $character_mask ] )\n<?php\n$string = \"Teste \";\nvar_dump(rtrim($string));\n?>\n\n// string(5) \"Teste\"\n```\n\n### trim\n\nEsta função retira os espaços em branco do início e do final da string.\n\n```php\n// string trim ( string $str [, string $character_mask = \" \\t\\n\\r\\0\\x0B\" ] )\n<?php\n$string = \" Teste \";\nvar_dump(trim($string));\n?>\n\n// string(5) \"Teste\"\n```\n\n### ucwords\n\nRetorna uma string com o primeiro caractere de cada palavra em maiúscula, se os mesmos forem alfabéticos.\n\n```php\n// string ucwords ( string $str [, string $delimiters = \" \\t\\r\\n\\f\\v\" ] )\n<?php\n$string = \"Teste para a função\";\nvar_dump(ucwords($string));\n?>\n\n// string(21) \"Teste Para A Função\" \n```\n\n### srttoupper\n\nRetorna string com todos os caracteres do alfabeto convertidos para maiúsculas. Saiba que o alfabeto é determinada pela localidade atual. Por exemplo, \"a\" com til (ã) não será convertido, pois o padrão do PHP é o local \"C\".\n\n```php\n// string strtoupper ( string $string )\n<?php\n// setlocale(LC_CTYPE, 'C'); // C = padrão PHP\n$string = \"Teste para a função\";\nvar_dump(strtoupper($string));\n?>\n\n// string(21) \"TESTE PARA A FUNçãO\"\n```\n\nPodemos resolver o problema com a acentuação com a função `setlocale()`. Veja abaixo:\n\n```php\n// string setlocale ( mixed $category , string $locale [, string $... ] )\n// string setlocale ( mixed $category , array $locale )\n```\n\nCategory é uma constante (ou string) especificando a categoria de funções afetadas pela definição local:\n\n- `LC_ALL` - para tudo abaixo\n- `LC_COLLATE` - para comparação de strings, veja strcoll()\n- `LC_CTYPE` - para classificação de caracteres e conversão, por exemplo strtoupper()\n- `LC_MONETARY` - para localeconv()\n- `LC_NUMERIC` - para o separador decimal (Veja também localeconv())\n- `LC_TIME` - para formatação de data e hora com strftime()\n\n\n```php\n<?php\nsetlocale(LC_ALL, 'pt_BR');\n$string = \"Teste para a função\";\nvar_dump(strtoupper($string));\n?>\n\n// string(21) \"TESTE PARA A FUNÇÃO\"\n```\n\n### srttolower\n\nRetorna string com todos os caracteres do alfabeto convertidos para minúsculas. E também é preciso mudar a localidade da aplicação para aceitar os acentos da língua portuguesa.\n\n```php\n// string strtolower ( string $str )\n<?php\nsetlocale(LC_ALL, 'pt_BR');\n$string = \"TESTE PARA A FUNÇÃO\";\nvar_dump(srttolower($string));\n?>\n\n// string(21) \"teste para a função\"\n```\n\n### ucfirst\n\nRetorna uma string com o primeiro caractere em maiúscula, se o caractere for do alfabeto. \n\n```php\n// string ucfirst ( string $str )\n<?php\n$string = \"teste\";\nvar_dump(ucfirst($string));\n?>\n\n// string(5) \"Teste\" \n```\n\n### lcfirst\n\nRetorna uma string com o primeiro caractere em letra minúscula se o caractere for alfabético. \n\n```php\n// string lcfirst ( string $str )\n<?php\n$string = \"TESTE\";\nvar_dump(lcfirst($string));\n?>\n\n// string(5) \"tESTE\" \n```\n\n### str_word_count\n\nConta o número de palavras dentro de string. Se o format opcional não é especificado, então o valor de retorno será um inteiro representando o número de palavras encontrado. No caso de o format estar especificado, o valor de retorno será um array, cujo conteúdo é dependente do format.\n\n```php\n// mixed str_word_count ( string $string [, int $format [, string $charlist ]] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(str_word_count($string));\n?>\n\n// int(3)\n```\n\n### strlen\n\nRetorna o tamanho da string. \n\n```php\n// int strlen ( string $string )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(strlen($string));\n?>\n\n// int(13) \n```\n\n### strstr\n\nRetorna parte da string haystack a partir da primeira ocorrência de needle até o final de haystack. \n\n```php\n// string strstr ( string $haystack , mixed $needle [, bool $before_needle ] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(strstr($string, 'de'));\n?>\n\n// string(7) \"de nada\" \n```\n\n### stristr\n\nRetorna tudo de haystack a partir da primeira ocorrência de needle até o final. \n\n```php\n// string stristr ( string $haystack , mixed $needle [, bool $before_needle ] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(stristr($string, 'de'));\n?>\n\n// string(7) \"de nada\" \n```\n\n### strpos\n\nRetorna a posição numérica da primeira ocorrência de needle dentro de haystack. Diferentemente de strrpos(), esta função pode ter uma string inteira como o parâmetro needle e toda a string será usada. \n\n```php\n// int strpos ( string $haystack , string $needle [, int $offset ] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(strpos($string, 'de'));\n?>\n\n// int(6) \n```\n\n### substr\n\nRetorna a parte de string especificada pelo parâmetro start e length. \n\n```php\n// string substr ( string $string , int $start [, int $length ] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(substr($string, 0, -1));\n?>\n\n// string(12) \"TESTE de nad\" \n```\n\n### str_replace\n\nEsta função retorna uma string ou um array com todas as ocorrências de search em subject substituídas com o valor dado para replace. Se você não precisa de regras de substituição especiais (como expressões regulares), você sempre poderia usar esta função ao invés de ereg_replace() ou preg_replace(). \n\n```php\n// mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )\n<?php\n$string = \"TESTE de nada\";\nvar_dump(str_replace(\"nada\",\"tudo\", $string));\n?>\n\n// string(13) \"TESTE de tudo\" \n```\n\n### strip_tags\n\nEsta função tenta retornar uma string retirando todas as tags HTML e PHP de str. Usa o mesmo sistema para retirar as tags do que fgetss(). \n\n```php\n// string strip_tags ( string $str [, string $allowable_tags ] )\n<?php\n$string = \"<p>nada</p>\";\nvar_dump(strip_tags($string, \"<p>\"));\n?>\n\n// string(11) \"\n// \n// nada\n// \" \n```\n\n### addslashes\n\nRetorna uma string com barras invertidas antes de caracteres que precisam ser escapados para serem escapados em query a banco de dados, etc. Estes caracteres são aspas simples ('), aspas duplas (\"), barra invertida (\\) e NUL (o byte NULL). \n\n```php\n// string addslashes ( string $str )\n<?php\n$string = \"d'agua\";\nvar_dump(addslashes($string));\n?>\n\n// string(7) \"d\\'agua\" \n```\n\n### stripslashes\n\nRemove barras invertidas de uma string. \n\n```php\n// string stripslashes ( string $str )\n<?php\n$string = \"d'agua\";\nvar_dump(stripslashes($string));\n?>\n\n// string(6) \"d'agua\" \n```\n\n### htmlentities\n\n Esta função é idêntica a htmlspecialchars() em toda forma, exceto que com htmlentities(), todos caracteres que tem entidade HTML equivalente são convertidos para estas entidades. Se você está querendo decodificar (o inverso), você pode usar html_entity_decode(). \n\n```php\n// string htmlentities ( string $string [, int $quote_style [, string $charset [, bool $double_encode ]]] )\n<?php\n$string = \"'teste' de <b>nada</b>\";\nvar_dump(htmlentities($string));\n?>\n\n// string(34) \"'teste' de &lt;b&gt;nada&lt;/b&gt\" \n```\n\n### html_entity_decode\n\nhtml_entity_decode() é o oposto da função htmlentities() no que converte todas as entidades HTML para os seus caracteres de string. \n\n```php\n// string html_entity_decode ( string $string [, int $quote_style [, string $charset ]] )\n<?php\n$string = \"'teste' de &lt;b&gt;nada&lt;/b&gt\";\nvar_dump(html_entity_decode($string));\n?>\n\n// string(23) \"'teste' de <b>nada</b>\"\n```\n\n### str_shuffle\n\nstr_shuffle() mistura uma string. Uma permutação de todas as possibilidades é criada. \n\n```php\n// string str_shuffle ( string $str )\n<?php\n$string = \"abcdef\";\nvar_dump(str_shuffle($string));\n?>\n\n// string(6) \"fcebad\" \n```\n\n### md5\n\nCalcula o \"hash MD5\" de str usando » RSA Data Security, Inc. MD5 Message-Digest Algorithm, e devolve esse hash. \n\n```php\n// string md5 ( string $str [, bool $raw_output ] )\n<?php\n$string = \"abcdef\";\nvar_dump(md5($string));\n?>\n\n// string(32) \"e80b5017098950fc58aad83c8c14978e\" \n```\n\n### sha1\n\nCalcula a hash sha1 de str usando » US Secure Hash Algorithm 1, e retorna esta hash. A hash é um número hexadecimal de 40 caracteres. Se o parâmetro opcional raw_output for TRUE, então o resultado é retornado em um formato binário com o tamanho de 20. \n\n```php\n// string sha1 ( string $str [, bool $raw_output ] )\n<?php\n$string = \"abcdef\";\nvar_dump(sha1($string));\n?>\n\n// string(40) \"1f8ac10f23c5b5bc1167bda84b833e5c057a77d2\" \n```\n\n\n## Conclusão\n\nHá grandes possibilidades de se trabalhar com string no PHP. E com certeza, utilizará muito todas as funções mostradas acima. A dica é brincar bastante com elas e com as demais. Assim, fixará o conhecimento da linguagem e terá uma resposta mais rápida para possíveis questões que apareção durante o desenvolvimento. \n\n\n\n\n","categories":["php"]},{"title":"Começando com PHP","url":"/hemersonvianna/artigos/php/comecando-com-php/","content":"\nMeu primeiro contato com uma linguagem back-end(lado servidor), foi com o PHP 4. E de início não foi com as boas práticas e com certeza não tinha nenhum vestígio de MVC. Com o tempo isso foi mundando, até por utilizar o Zend framework.\n\nO PHP foi criado em 1994, por [Rasmus Lerdorf](https://twitter.com/rasmus), e o código fonte liberado em 1995. E é mantido pela organização `The PHP Group`. \n\n>PHP (um acrônimo recursivo para \"PHP: Hypertext Preprocessor\", originalmente Personal Home Page) é uma linguagem interpretada livre, usada originalmente apenas para o desenvolvimento de aplicações presentes e atuantes no lado do servidor, capazes de gerar conteúdo dinâmico na World Wide Web.\n> <cite> -- PHP\n> - [Wikipédia](https://pt.wikipedia.org/wiki/PHP)\n> </cite>\n\n## O ambiente\n\nPrimeiramente para conseguirmos ver uma página em PHP funcionando, precisamos ter um servidor Apache/IIS (De preferência um servidor Apache, que muitos sugerem por ser melhor e para `URL Rewriting` se usa o .htaccess e não o web.config) configurado. Para fazer isso na nossa máquina local, tem softwares que ajudam nessa tarefa. Para windows, temos o [XAMPP](https://www.apachefriends.org/pt_br/index.html) e o [WAMP](http://www.wampserver.com/en/). Para mac, temos o [MAMP](https://www.mamp.info/en/). E para o linux, querendo ser mais `hardcore`, pode seguir esses [passos da Digital Ocean](https://www.digitalocean.com/community/tutorials/como-instalar-a-pilha-linux-apache-mysql-php-lamp-no-ubuntu-14-04-pt) para instalação via terminal.\n\nO necessário é ter o Apache e o PHP, instalados na máquina. Provalmente precisará de um banco de dados e isso fica por conta da necessidade do projeto. Querendo instalar manualmente, segue os links abaixo:\n\n- ***Apache*** - [http://www.apache.org/](http://www.apache.org/)\n- ***PHP*** - [http://php.net/downloads.php](http://php.net/downloads.php)\n\nSugestões de banco de dados:\n\n- ***MySQL*** - [http://dev.mysql.com/downloads/](http://dev.mysql.com/downloads/)\n- ***PostGRE*** - [http://www.postgresql.org/](http://www.postgresql.org/)\n\n## Sintaxe \n\nJá temos o ambiente e agora precisamos escrever nossas primeiras linhas para ver o PHP, funcionando. Pela lógica arquivos PHP, usaram a extensão `.php`.\n\nPodemos usar as tags `HTML`, normalmente como fazemos em arquivos de extensão '.html', mas para usarmos o código PHP, o mesmo deverá ser usado como vemos abaixo:\n\n```\n<!DOCTYPE html>\n\t<html lang=\"pt-br\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t\t<?php \n\t\t\t// script php\n\t\t?>\n\n\t\t<p class=\"<?php echo imprimirClasse(); ?>\">Esse parágrafo tem uma classe inserida via uma função php</p>\n\t</body>\n</html>\n```\n\n### Variável\n\nUma variável no PHP, se inicia com o `$`(cifrão);\n\nAs regras para nomeação, são bem simples:\n\n- Não iniciar com números\n- Sem espaços\n- Sem caracteres especiais, exceto `underscore`\n\n```\n<?php\n\t$name = \"Meu nome\";\n\t$age  = 29;\n\t$account_status  = true;\n?>\n```\n\n## Constante\n\nTambém é possível definir constantes com a função `define()`. E ela não poderá ser alterado em sua execução. Como boa prática, é sempre boa que seja definida em letras maiúsculas para serem facilmente identificadas.\n\n```\n<?php\n\tdefine(\"VALOR\", \"Esse é o valor\");\n\techo VALOR; // Esse é o valor\n?>\n```\n\n## Echo ou Print\n\nPara imprimir algo na tela, temos a função `echo` ou `print`. \n\n```\n//index.php\n\n<?php\n\techo \"Esse texto vai aparecer na minha página inicial\";\n\techo(\"Esse texto vai aparecer na minha página inicial\");\n\n\tprint \"Esse texto vai aparecer na minha página inicial\";\n\tprint(\"Esse texto vai aparecer na minha página inicial\");\n\n\t// Retornará 4 vezes na tela a frase \"Esse texto vai aparecer na minha página inicial\"\n?>\n```\n\nOs 2 fazem a mesma coisa, sendo que a maior diferença fica por conta que o `print` também retorna `1` e o `echo` não retorna nada, além do que ele imprime. Podemos ver melhor isso, abaixo:\n```\n<?php\n    echo print('Teste');\n    // Teste1\n\n    $test = print(\"Teste\");    \n    if ($test) echo 'entrou';\n\t// Testeentrou\n?>\n```\n\nO `echo` tem um atalho.\n```\n<? echo \"exemplo\" ?>\n// É o mesmo que \n<?=\"exemplo\" ?>\n```\n\nO `print` pode ser usado com ternários, já o `echo`, não.\n```\n$test = ($age < 18) ? print('menor') : print('maior'); //válido\n\n$test = ($age < 18) ? echo('menor') : echo('maior'); //inválido,\nParse error: syntax error, unexpected T_ECHO \n```\n\nUtilizando o `echo`, estará economizando `1 byte` e precisando receber um valor de retorno ou utilizar com um ternário, temos o `print`.\n\n\n## Estruturas condicionais\n\nTemos o famoso `if/else` e o `switch/case`. Se já mexeu em outras linguagens de programação, já terá uma familiaridade. Se em um determinado trecho do seu código for necessário ter muitas condições em um mesmo ponto, o mais indicado é o `switch/case`, para que o seu código não tenha um `hadouken`. :)\n```\n<?php\n// if/else\nif ([condição]) {\n\t//seu código aqui\n} else {\n\t//seu código aqui\n}\n\nif ([condição]) {\n\t//seu código aqui\n} elseif([outra condição]) {\n\t//seu código aqui\n} else {\n\t//seu código aqui\n}\n\n// swicth/case\n$item = 3;\n \nswitch ($item) {\n    case 1:\n        echo \"Item 1\"; \n        break;\n    case 2:\n        echo \"Item 2\";\n        break;\n    case 3: // condição\n        echo \"Item 3\";  // código que será executado\n        break; // Finaliza a execução\n    case 4:\n        echo \"Item 4\";\n        break;\n    case 5:\n        echo \"Item 5\";\n        break;\n    default:\n        echo \"Nenhum item\";\n        break;\n}\n?>\n```\n\nNo caso do `if/else`, se nenhuma condição for atendida, sempre o código contido no `else`, será executado. No caso do `switch/case`, se nenhuma condição for atendida, o `default`, será executado.\n\n\n## Loops\n\nSão os laços de repetição que podemos executar, usando: for, while, do while e foreach.\n\n- ***for*** - Executa 3 operações (A primeira antes de executar a condição, onde podemos definir as variáveis que serão utilizadas. A segunda é a condição. E a terceira, o que fará se a condição for verdadeira.)\n- ***while*** - Só executamos uma operação que é a condição. Sendo verdadeira, executa o código.\n- ***do while*** - Ao contrário do `while`, primeiro executa o código para depois testar a condição. Como podemos ver no exemplo abaixo (que não faz sentido, apenas para exemplo), que ele executa o código, mesmo a condição sendo falsa.\n- ***foreach*** - Simplifica o trabalho com um `array`. Executando de acordo com a quantidade de posições do array, sem precisar informar. E já nos informa de uma vez, a chave e valor da posição.\n```\n<?php\nfor ($i=0, $len = 5; $i < len; $i++) {\n    echo $i;\n}\n// 01234\n\n$value = 1;\n$max = 5;\nwhile ($value <= $max) {\n\techo $value;\n\t$value++;\n}\n// 12345\n\n$count = 1;\ndo{\n    echo \"Loop número $count\";  \n} while ($count < 1);\n// Loop número 1 \n\n$alpha = array('a', 'b', 'c', 'd');\nforeach ($alpha as $key => $value) {\n    echo $key.\" - \".$value.\"<br />\";\n}\n// 0 - a\n// 1 - b\n// 2 - c\n// 3 - d\n?>\n```\n\n### Observações\n\n1. Para concatenarmos no PHP, usamos `.` .\n```\n//index.php\n\n<?php\n\techo \"Esse texto vai aparecer na minha página inicial. \" . \"E esse texto também.\";\n?>\n```\n\n2. Uma coisa muito importante no PHP, é sempre usar o `;`, após uma declaração. Você pode estar familiarizado com isso no `CSS` e no `Javascript`.\n\n```\n//index.php\n\n<?php \n\t// sem\n\tdefine('PHP', 'de boas') echo PHP \n\t//Parse error: syntax error, unexpected T_ECHO\n\n\t// com\n\tdefine('PHP', 'de boas'); echo PHP;\n\t// de boas \n?>\n```\n\n3. Podemos interferir no processo normal de um `loop`. Duas palavrinhas mágicas: `break` e `continue`. Como podemos ver abaixo, com o `break`, ele interrompe o processo quando a condição permite a execução do mesmo. No caso do `continue`, quando a condição é verdadeira e o mesmo é executado, ele vai para o próximo `loop`, não imprimindo o '0 - a'.\n```\n// break\n$alpha = array('a', 'b', 'c', 'd');\nforeach ($alpha as $key => $value) {\n    echo $key.\" - \".$value.\"<br />\";\n    if($value === 'b') {\n    \techo \"Parei na letra \".$value;\n    \tbreak;\n    }\n}\n// 0 - a\n// 1 - b\n// Parei na letra b\n\n// continue\n\n$alpha = array('a', 'b', 'c', 'd');\nforeach ($alpha as $key => $value) {            \n    if ($value === 'a') continue;\n    echo $key.\" - \".$value.\"<br />\";\n}\n// 1 - b\n// 2 - c\n// 3 - d\n```\n\n## Conclusão\n\nEssa foi uma pequena introdução ao PHP, nos próximos artigos mostrarei mais sobre a linguagem, frameworks e etc. \n\n","categories":["php"]},{"title":"Começando com KarmaJS","url":"/hemersonvianna/artigos/front-end/comecando-com-karmajs/","content":"\nKarma é uma ferramenta que gera um servidor Web que executa o código de teste para cada um dos navegadores conectados.\nO quão é necessário se criar testes para um desenvolvedor? Muito necessário.\nO KarmaJS está aqui para simplificar isso. \n\n>Things should be simple. We believe in testing and so we want to make it as simple as possible.\n>\n>The main goal for Karma is to bring a productive testing environment to developers. The environment being one where they don't have to set up loads of configurations, but rather a place where developers can just write the code and get instant feedback from their tests. Because getting quick feedback is what makes you productive and creative.\n> <cite> -- KarmaJS\n> - [KarmaJS](http://karma-runner.github.io)\n> </cite>\n\n## Instalação\n\nPrecisamos primeiramente ter o NodeJS e NPM, instalados.\n\nPodendo ser baixado, aqui: [NodeJS com NPM](https://nodejs.org/en/download/)\n\nAgora que já temos o NodeJS e NPM, instalados. Temos que instalar o `KarmaJS` via terminal:\n\n```\nnpm install -g karma-cli\n```\n\nPara instalar o `KarmaJS` e os plugins no projeto. Basta ter o `package.json` e executar os comandos:\n\n```\nnpm install karma --save-dev\n```\n\nPara ter o karma como dependência de desenvolvimento.\n\n```\nnpm install karma-jasmine karma-chrome-launcher --save-dev\n```\n\nComo exemplo, acima estaremos instalando os plugins para o `jasmine` e o lançador do `chrome`.\n\n\n## Configuração\n\nAgora que temos o `KarmaJS` e os plugins instalados, precisamos ir para a parte de configuração.\n\nPara gerar o arquivo de configuração do `Karma`, precisamos do comando:\n\n```\nkarma init\n```\n\nAo executar o comando, aparecerá as perguntas para ser montado o arquivo de configuração.\n\n```\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> jasmine\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n>\n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n>\n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n\nConfig file generated at \"[diretorio]\\karma.conf.js\".\n\n```\n\nApós responder as perguntas, será gerado o arquivo `karma.conf.js`. Para esse exemplo, as sugestões me atendem, então foi só apertar `enter`, direto.\n\nO nosso arquivo de configuração está de acordo com os plugins que foram instalados inicialmente. Para os testes, usaremos o `jasmine` e os mesmos rodarão no navegador 'chrome', na porta 9876 (http://localhost:9876).\n\n## Execução\n\nPara executar o que foi configurado, precisamos do comando:\n\n```\nkarma start\n```\n\nMesmo não tendo nenhum arquivo para ser testado, executando o comando, já poderá ver em ação o que foi configurado.\n\nPara um exemplo mais prático, vamos criar o arquivo `test.js`, com o código:\n\n```\ndescribe(\"Exemplo\", function() {\n  it(\"verdadero\", function() {\n    expect(true).toBe(true);\n  });\n\n    it(\"falso\", function() {\n    expect(false).not.toBe(true);\n  });\n});\n```\n\nNo arquivo `karma.conf.js`, vamos acrescentar o caminho do arquivo, para ser identificado.\n\n```\nfiles: [\n        './*.js'\n    ],\n```\n\nPronto, como um código simples de um teste feito com o `jasmine`, agora é só executar o `karma start`.\n\nNo terminal, aparecerá a seguinte mensagem:\n\n```\nChrome 47.0.2526 (Windows 7 0.0.0): Executed 2 of 2 SUCCESS (0.018 secs / 0.003 secs)\n```\n\nE assim, temos o primeiro teste rodando de acordo com a nossa configuração, de uma forma bem rápida e simples. \n\n\n## Conclusão\n\nNão se pode ter desculpas para não criar testes para o seu código. Além de assegurar a integridade, previne muitas dores de cabeça e falhas que não podem fazer parte do dia a dia de um bom desenvolvedor. Todo ser humano é falho, então vamos deixar nas mãos da tecnologia a última avaliação do seu código. O bom desenvolvedor é ciente de que pode haver `bugs` e que testes, além de ajudar, evita transtornos para o cliente. Afinal, ninguém quer perder dinheiro. Ainda mais se poderia ser evitado.\n","categories":["front-end"]},{"title":"CSS - Propriedade float","url":"/hemersonvianna/artigos/css/css-propriedade-float/","content":"\nAcredito que em 2008, quando comecei na área web e começava a engatinhar no CSS, uma das principais dúvidas era como funcionava o float e o que acontecia com o elemento pai.\n\nA propriedade float, tem como seu valor padrão o `none`, podendo também receber os valores `left` e `right`.\n\nAssim que utilizamos `float: left` em um elemento, o mesmo será posicionado a esquerda e se o próximo for um elemento `inline`,  o irá acompanhar.\n\n## Como funciona com os elementos `block` e `inline`?\n\nNos elementos `block`, o comportamento é diferente dos elementos `inline`, como podemos ver abaixo:\n\n{% codepen hemersonvianna OyKQJv 7928 result 257 %}\n\nNo exemplo, temos 4 elementos (2 `block` e 2 `inline`). Adicionando a propriedade nos primeiros elementos de cada tipo, o segundo elemento `block`, ignora o primeiro e fica atrás dele, não recohecendo a posição do seu antecessor. Aumentando a largura do segundo elemento, conseguimos vê-lo e um fato curioso é que o texto dentro do elemento, reconhece o primeiro elemento, mas porque a quantidade de caracteres é possível ser mostrada naquele espaço a mais do elemento. Então não se engane, ele não está do lado e sim, atrás.\n\nJá o segundo elemento `inline`, se encontra ao lado do primeiro. Com a propriedade `float`, o primeiro elemento reconhece as suas propriedades de dimensão como um elemento `block`.\n\n## Como um elemento se comporta, quando um elemento filho tem a propriedade?\n\nAcima, vimos o comportamento básico dos elementos soltos no `body`. Abaixo, iremos ver como se comportam os elementos, cujo os filhos tem a propriedade `float`. \n\n{% codepen hemersonvianna LGPOMg 7928 result 257 %}\n\nComo o exemplo, conseguimos ver que basta um elemento filho não ter a propriedade `float`, para o elemento pai identificar e respeitar a altura do elemento que não tem o `float`. Com os elementos 6 e 7, o elemento pai perde a referência e se comporta, como se não tivesse conteúdo. Uma solução para esse comportamento, seria acrescentar as propriedades `display: inline-block` e `width: 100%` no elemento pai. Assim, ele ficaria como os demais. Costumo dizer, que o `display: inline-block`, salva vidas. :) Com isso, terás um elemento com os 2 valores: `inline` e `block`. Isso quer dizer, que será um elemento bloco, mas sem quebra de linha (só ficará em 100%, se tiver a propriedade `width: 100%`). Falaremos mais sobre a propriedade `display`, em outro artigo.\n\n## Quando usar o valores left e right para a propriedade?\n\nComo vimos nos exemplos acima, o `float`, quebra o fluxo natural do conteúdo. Na maiorida dos casos, não queremos que os próximos elementos sejam influenciados pelos `floats` na página. Para solucionar esse problema, temos a propriedade `clear`. Solução muito conhecida por causa do `clearfix`, que você já deve ter visto em algum projeto ou já tenha utilizado.\n\n{% codepen hemersonvianna VeZXQE 7928 result 440 %}\n\nTemos 4 exemplos, acima. O primeiro se trata de um uso simples, quando temos 2 elementos e queremos que um fique a direita e outro a esquerda. Se invertermos os valores da propriedade `float`, dos 2 elementos, não teria problema algum. O segundo elemento ficaria a esquerda e o segundo a direita, não necessitando de alguma alteração no html.\n\nNo segundo exemplo, podemos ver que dependendo dos valores da propriedade `float`, podemos fazer muitas variações com as posições dos elementos. No caso, a sequência no html é [1, 2, 3] e com o css ele fica [1, 3, 2]. Assim, podendo ajudar muito na hora de criar mais de um template, sem ter que modificar o html.\n\nNo terceiro, já conseguimos ver a utilização da propriedade 'clear'. Se o elemento 4, não tivesse a propriedade `float` ou `clear`, naturalemnte ele ficaria atrás do elemento 1. Acrescentando nele a propriedade `float`, com o valor `left`, ele ficaria ao lado do elemento 3 e com o valor `right`, ficaria entre os elementos 5 e 2. E para quebrar esses comportamentos, podemos acrescentar a propriedade `clear`, com o valor `both`, para quebrar qualquer valor do `float` ou sendo especifico com o valor do elemento anterior. Se o elemento 3, tem o `float: left`, seria necessário o `clear: left`, no elemento 4. Assim, agora ele se encontra na próxima linha, abaixo do elemento 2. Os elementos posteriores irão respeitar essa quebra de linha.\n\nNo último, só fica mais um exemplo da lógica da mistura dos elementos com as propriedades `float` e `clear`.      \n\n## Conclusão\n\nTendo em mente como funciona a propriedade `float` e seu comportamento no documento HTML, fica mais fácil planejar estruturas que na maioria das vezes, não terão impacto no HTML, facilitando a manutenção. E também é importante entender como outras propriedades podem auxiliar. Como foi mostrado nesse artigo, sobre as propriedades `display` e `clear`. Portanto, usem com sabedoria e evitará muitas dores de cabeça na questão de estrutura e comportamento no documento HTML.\n","categories":["css"]},{"title":"Começando com ECMAScript 2015","url":"/hemersonvianna/artigos/javascript/comecando-com-ecma-script-2015/","content":"\nDepois de 20 anos, temos a evolução de alguns recursos da linguagem JavaScript. Em junho de 2015, foi anunciada pela Assembleia Geral da Ecma International a aprovação da sexta edição da ECMA-262.\n\nO nome oficial é ECMAScript 2015 e de agora em diante, as novas versões irão em seu nome incluir ECMAScript seguido pelo ano de sua liberação.\n\nO ES6, já mostra que veio com várias melhorias, pela sua documentação com quase 600 páginas, enquanto a documentação do seu antecessor ES 5.1, tem 245 páginas.\n\n\n\n## Compatibilidade\n\nPara evitar problemas de compatibilidade, o ES6 é compatível com as versões anteriores. Com isso, não precisa arrancar os cabelos por causa do seu código antigo.\n\nPara ficar por dentro, da compatibilidade com os browsers, confira no [link](http://kangax.github.io/compat-table/es6/), que é mantido pelo [Kangax](https://twitter.com/kangax).\n\n\n\n## Transpiler\n\nAtualmente nenhum navegador suporta completamente todos os novos recursos do ES6. Para utilizar os novos recursos sem problemas, é necessário utilizar um `transpiler` para o ES5. Uma dica para esse trabalho, é o [Babel](https://babeljs.io/)\n\n\n\n## Algumas novidades\n\nDefault Parameters Values - Com certeza, muitos desenvolvedores vão matar uma linha ou mais, podendo já passar em uma função, um parâmetro com um valor `default`.\n\n```\n// ES 5\nfunction worked(entry, leave) {\n    leave = leave || 18;\n    return leave - entry;\n}\n```\n\n```\n// ES 6\nfunction worked(entry, leave = 18) {\n    return leave - entry;\n}\n```\n\nClasses - Agora ficou mais declarativo e fácil de entender e o método constructor para aproximar o javascript com as demais linguagens.\n\n```\n// ES 5\nfunction Accordion(element){\n\tthis.container = element;\n\tthis.effect;\n}\nAccordion.prototype.close = function () {\n}\n\n```\n\n```\n// ES 6\nclass Accordion {\n    constructor(element) {\n        this.container = element;\n        this.effect;\n    }\n \n    close() {\n    }\n}\n```\n\nO intuito do post é só dar uma introdução, mais exemplos e a documentação, você encontra nos links abaixo.\n\n\n\n## Links interessantes\n\n[ECMAScript 2015](http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf)\nEspecificação da linguaguem com a versão ECMAScript 2015.\n\n[Futuro do Subjuntivo - Quando vós programardes JavaScript](https://goo.gl/PL2bV2)\nPalestra muito boa que acompanhei ao vivo no Front Carioca 2015, onde o Jaydson Gomes mostra muito bem algumas novidades.\n\n[ES6: Brincando com o novo JS](http://jsrocks.org/pt-br/2014/11/es6-playing-with-the-new-javascript)\nArtigo do Pedro Nauck, que vale a pena dar uma conferida.\n\n[ES6: Using the new Javascript today!](https://www.youtube.com/watch?v=OVPzgq2pBTc)\nVideo com a apresentação do Pedro Nauck.\n\n\n\n## Conclusão\n\nCom a especificação do ECMAScript 2015, muitas coisas melhoraram e por isso já devemos estar utilizando para atualizar os projetos e já atualizar com os novos padrões. E no momento, de preferência com a ajuda de um `transpiler`. Muita gente como eu, aguardava esse momento, ele já chegou e já está passando. Já acabou a meses a época para testar as novidades, devemos utilizar. É claro, que dependendo do projeto, não será uma tarefa fácil ou rápida, mas já temos que conhecer todas as novas melhorias.\n","categories":["javascript"]},{"title":"Começando com Ionic","url":"/hemersonvianna/artigos/front-end/comecando-com-ionic/","content":"\nO Ionic é um framework para construir aplicações no sentido nativo para dispositivos móveis, utilizando as linguagens web como HTML, CSS e JavaScript.\n\nCriado no final de 2013, visando a construção de aplicações híbridas. Sendo voltado para a aparência e interação da interface da aplicação com o mesmo. Em sua documentação deixa bem claro que não é um substituto para o PhoneGap ou seu preferido framework de JavaScript. A ideia é se encaixar com os seus projetos e simplicar grande parte da sua aplicação no lado do front-end.\n\nO framework exige atualmente o AngularJS, para trabalhar todo o seu potencial. Se integra com os recursos nativos dos dispositivos por meio do Cordova e disponibiliza ferramentas e componentes com o Ionic Module e Ionic CLI.\n\n\n## Instalação\n\nPara começar, precisamos primeiramente ter o NodeJS e NPM, instalados.\n\nPodendo ser baixado, aqui: [NodeJS com NPM](https://nodejs.org/en/download/)\n\nE agora, será necessário instalar globalmente o ionic e o cordova:\n```\nnpm install -g ionic cordova\n```\n\n\n\n## Criando um projeto\n\nUsando o gerador do Ionic CLI, utilizaremos o comando:\n```\nionic start nomeDoApp tipo\n```\n\nOnde:\n\n`nomeDoApp` = Nome da sua aplicação.\n`tipo` \t\t= Tipo do projeto base(Existem 3 tipos: tabs, blank e sidemenu.).\n\n\n\n## Visualizando o projeto\n\nCom o projeto criado, podemos rodar o projeto para visualizá-lo com o comando:\n```\nionic serve\n```\n\nPara simular um dispositivo móvel com android por exemplo, podemos utilizar os comandos abaixo:\n```\nionic platform add os\nionic build os\nionic emulate os\n```\n\nOnde:\n\n`os` = plataforma(android ou ios)\n\nAté o momento apenas simulei com o android e você precisa ter instalado o [Java Development Kit (JDK)](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) e o [Android SDK](http://developer.android.com/sdk/installing/index.html)\n\n\n\n## Links interessantes\n\n[Ionic Creator](https://creator.ionic.io/app/login)\nAqui você pode criar a interface para as páginas com os elementos disponíveis\n\n[Ionic Playground](http://play.ionic.io/app/312561eb0aaf)\nFunciona como o `jsfiddle`, voltado para o Ionic\n\n[Ionic Material Design](http://ionicmaterial.com/)\nPara resolver uma boa parte de problemas com layout\n\n\n\n## Observações\n\nPrecisando utilizar os recursos nativos dos dispositivos, todos os recursos do Cordova estarão disponíveis para isso. E também pode contar com o módulo `ngCordova` do AngularJS.\n\nO Ionic usa o GulpJS para automatizar as tarefas de compilar o SCSS, coffeeScript e rodar o servidor para visualizar o projeto. Os mesmos são opcionais.\n\n\n\n## Conclusão\n\nNos dias de hoje, ter uma aplicação web e ainda desenvolver nativamente para android e IOS, além de gastar mais recursos, tempo e mais códigos para manter, é complicado. Por isso, ter uma aplicação hídrida com o Ionic, resolve boa parte dos problemas, com mais rapidez e facilidade para o desenvolvimento da sua aplicação.\n\nConfira o [site](http://ionicframework.com/) do framework e sua documentação para mais detalhes.\n","categories":["front-end"]},{"title":"Começando com CSS","url":"/hemersonvianna/artigos/css/comecando-com-css/","content":"\nDesde 1996, temos que agradecer a Håkon Wium Lie e Gijsbert (Bert) Bos, pela recomendação da W3C sobre o CSS1. No ano anterior, juntos apresentaram a proposta do CSS para a W3C. Hoje, estamos colhendo os frutos dessa iniciativa. \n\nA primeira recomendação da W3C, foi em 17 de Dezembro de 1996, com o CSS nível 1 e o mesmo foi revisado em 11 de abril de 2008. Em 07 de junho de 2011, saiu a recomendação do CSS nível 2, sendo editado em 17 de dezembro de 2014 (CSS 2.1). Também temos as recomendações: [Módulo de cor nível 3](http://www.w3.org/TR/css3-color/) em 07 de junho de 2011, [Seletores nível 3](http://www.w3.org/TR/selectors/) em 29 de setembro de 2011, [Media Queries](http://www.w3.org/TR/css3-mediaqueries/) em 19 de junho de 2012, e [Atributos de estilo](http://www.w3.org/TR/css-style-attr/) em 07 de novembro de 2013. Você pode dar uma olhada nos [Trabalho atuais](http://www.w3.org/Style/CSS/current-work) da W3C.\n\n>Cascading Style Sheets (CSS) é uma linguagem de folhas de estilo utilizada para definir a apresentação de documentos escritos em uma linguagem de marcação, como HTML ou XML.\n> <cite> -- CSS\n> - [Wikipédia](https://pt.wikipedia.org/wiki/Cascading_Style_Sheets)\n> </cite>\n\n\n## Tipos\n\nTipos de CSS não se refere a forma de escrever as declarações e sim o local onde ele é inserido. Se ele estiver junto ao código HTML, chamamos de CSS inline, no início da página HTML ele é incorporado e quando colocado em um arquivo externo, ele é CSS linkado.\n\n### CSS Inline\nO CSS Inline é aquele que é inserido junto ao código HTML, através do atributo style. Sua aplicação é bastante questionada já que o modelo fica bastante parecido com a antiga formatação via HTML.\n\n```\n<p style=\"color: #ffff00; font-size: 11px;\">\n```\n\n### CSS Incorporado\nCSS incorporado é aquele que é inserido no início do código HTML dentro da tag . o modelo incorporado é melhor que o inline, mas ainda apresenta deficiências, já que ele terá efeito apenas sobre a página e não poderá ser reaproveitado para outras páginas.\n\n```\n<style type=\"text/css\"> \np { \n\tfont-family: Arial, Helvetica, sans-serif; \n\tfont-size: 10px; \n\tcolor: #FF0000; \n} \n</style>\n```\n\n### CSS Linkado\nCSS linkado é o modelo recomendado, pois neste modelo todo o código CSS fica em um arquivo separado, podendo ser linkado a várias páginas do site. Este é o melhor modelo para promover o reaproveitamento do código.\n\n```\n<link href=\"estilo.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\">\n```\n\n## Seletores\n\nSeletores são os elementos que o CSS pode formatar. São eles: Tags do HTML, classes (class) e identificadores (ID´s)\n\n### Tags\n\nQualquer tag do HTML poderá ser formatada em CSS, porém, algus recursos não provocarão efeito nenhum. Por exemplo: aplicar cor em uma tag .\nPara formatar tags, basta colocar o nome da tag como seletor. Exemplo:\n\n```\nbody { \n\tfont-family: Verdana, Arial, Tahoma; \n\tfont-size: 12px; \n\tbackground-color: #E3E3E3; \n}\n```\n\n### Classes\n\nDiferente das tags, as classes não são aplicadas automaticamente no HTML. Uma vez criada, uma classe deverá ser aplicada manualmente no HTML.\nA função das classes é fazer formatações específicas onde as definições de tags não são atendidas.\n\n```\n.recuo { \n\tfont-size: 10px; \n\tcolor: #ff0000; \n}\n```\n\n### Identificadores\n\nOs identificadores em CSS correspondem ao ID no HTML, ou seja, quando você criar um ID no HTML significa que ele poderá ser formatado no CSS.\n\n```\n#site { \n\twidth: 500px; \n\tbackground-color: #ffffff; \n}\n```\n\n## Pseudo-classes\n\nExistem vários tipos de pseudo-classes. Podemos separá-las em dois grandes grupos:Estruturais e Dinâmicas. Existem outras pseudo-classes que não se encaixam nestes dois grupos principais, que controlam a interface do usuário, elementos de URLs e etc.\n\n### Pseudo-classes Dinâmicas\n\nAs pseudo-classes dinâmicas controlam os estados dos elementos. Abaixo, vão alguns deles:\n\n`:hover` – quando passamos o mouse em cima do elemento.\n\n`:active` – quando ativamos o elemento. Por exemplo, quando clicamos em um link e não soltamos o botão do mouse. Nesse momento, estamos ativando a ação do elemento. Esse estado é ativado também quando navegamos pelos links pelo teclado utilizando o TAB. Este estado não há em todos os elementos.\n\n`:visited` – quando o link é visitado.\n\n`:focus` – quando um elemento recebe foco. Muito utilizado em campos de texto. Quando clicamos em cima um campo de texto para escrever, o elemento está ganhando foco.\n\n### Pseudo-classes Estruturais\n\nAs pseudo-classes estruturais servem para selecionarmos um elemento da estrutura do código. Existem várias, por exemplo:\n\n`:first-child` – seleciona o primeiro filho de um outro elemento. <br>\n`:last-child` – seleciona o último filho de um elemento. <br>\n`:root` – representa um elemento que é a raiz do documento. No HTML 4, é sempre a tag HTML. <br>\n`:nth-child()` – permite que selecionemos qualquer elemento no meio de um grupo de elementos. Por exemplo, você pode selecionar linhas de uma tabela. Assim, podemos fazer uma tabela zebrada, sem a ajuda de javascript. Há variações dessa pseudo-classe para podermos pegar os elementos de baixo para cima (`:nth-last-child`) e assim por diante. Testei aqui e isso não funcionou no meu FF3 (mac). <br>\n`:lang()` – seleciona elementos que tem o atributo lang com um valor específico. ( [exemplo](http://tableless.com.br/wp-content/uploads/2009/03/lang.html) )\n\n\n### Pseudo-classes Estruturais - target\n\nO seletor target do CSS3 nos permite aplicar uma formatação ao elemento que é alvo ativo de um link. ( [exemplo](http://www.uxdesign.blog.br/curso-html5-css3/target.html) )\n\n```\ndiv:target { z-index: 1000; }\n```\n\n### Pseudo-classes Estruturais - atributo\n\nNo CSS3 também é possível formatarmos elementos que possuam um atributo específico. \n\n```\na[title] {color: red;} \na[href=\"index.html\"] {color: red;} \nimg[alt*=\"web\"] {border: 5px solid red;} \na[href$=\".pdf\"] {background: url(pdf.png)}\n```\n\n## Pseudo-elementos\n\nPseudo-elementos servem para adicionar efeitos a um seletor ou parte dele. A seguir, veremos dois pseudo-elementos do CSS3 muito úteis: :before e :after.\n\n\n### :before\n\nO pseudo-elemento :before do CSS3 serve para adicionar alguma formatação ou conteúdo antes de um elemento.\n\n```\nli:before {\n   content: \"Livro: \"; \n   color: #D35529;\n}\n```\n\n### :after\n\nPor sua vez, o pseudo-elemento :after do CSS3 serve para adicionar alguma formatação ou conteúdo após um elemento.\n\n```\nli:after {\n   color: #D35529;\n   font-weight: bold;\n}\n```\n\n## Conclusão\n\nO CSS tem evoluindo muito e cada vez mais coisas novas estão aparecendo, até a maneira de escrever com os pré-processadores (SASS, LESS e STYLUS). O importante é sempre estar por dentro das boas práticas de utilização e manutenção, evita muitas dores de cabeça e deixa o projeto organizado. Cada projeto tem suas exigências e é importante fiar ligado nisso. \n","categories":["css"]},{"title":"Começando com GruntJS","url":"/hemersonvianna/artigos/front-end/comecando-com-gruntjs/","content":"\nNo desenvolvimento Front-End tem algumas tarefas que são como um castigo se feitas manualmente. Por isso, temos que automatizar algumas tarefas. Para nos auxiliar com isso, temos o GruntJS.\n\nO GruntJS é um `task runner` que automatiza tarefas e roda via terminal. \n\n## Instalação\n\nPara rodá-lo, precisamos primeiramente ter o NodeJS e NPM, instalados.\n\nPodendo ser baixado, aqui: [NodeJS com NPM](https://nodejs.org/en/download/)\n\nAgora que já temos o NodeJS e NPM, instalados. Temos que instalar o GruntJS via terminal:\n\n```\nnpm install -g grunt-cli\n```\n\nPodemos ver se está instalado com o commando:\n```\ngrunt --version\n```\n\nPara o GruntJS funcionar, precisamos de 2 arquivos: `package.json` e o `Gruntfile.js`.\n\nO ***package.json*** é um arquivo do NodeJS, onde terão as informações do projeto e os plugins do GruntJS. Ex:\n\n```\n{\n  \"name\": \"project name\",\n  \"version\": \"1.0.0\",\n  \"title\": \"Project Title\",\n  \"devDependencies\": {\n    \"grunt\": \">=0.4.5\",\n    \"load-grunt-config\": \"^0.10.0\",\n    \"load-grunt-tasks\": \"^0.4.0\"\n  },\n}\n```\n\nO ***Gruntfile.js*** é o arquivo de configuração do GruntJS. Ex:\n\n```\nmodule.exports = function( grunt ) {\n \n  grunt.initConfig({\n    // Tasks\n  });\n};\n```\n\nPara adicionar um plugin no seu `package.json`, podemos utilizar os comandos:\n\nPara as dependências para produção (`dependencies`) \n```\nnpm install grunt --save\n```\n\nPara dependências, apenas para o desenvolvimento (`devDependencies`)\n```\nnpm install grunt --save-dev\n```\n\nSe você está utilizando um `package.json`, já com os plugins listados, basta executar o comando:\n```\nnpm install\n```\n\n## Configuração\n\nAgora com os plugins instalados, precisando configurar cada tarefa para ser executado ao rodar o `GruntJS`.\n\nNo link [http://gruntjs.com/plugins](http://gruntjs.com/plugins), você pode conferir os plugins para o `GruntJS`. Clicando no plugin desejado, será encaminhado para o host [https://www.npmjs.com](https://www.npmjs.com), onde terá as informações para a configuração do `package` escolhido. \n\nComo exemplo, escolhi o plugin `grunt-contrib-uglify`, sendo levado para [https://www.npmjs.com/package/grunt-contrib-uglify](https://www.npmjs.com/package/grunt-contrib-uglify). Onde podemos conferir, como configurar a tarefa.\n\nAbaixo, como podemos ver no método `initConfig`, iremos passar um objeto com a configuração do plugin. Com o método `loadNpmTasks`, informaremos a tarefa que deverá ser carregada. E para finalizar, devemos registrar as tarefas que teremos no projeto.\n```\nmodule.exports = function( grunt ) {\n\n  grunt.initConfig({\n\n    uglify: {\n\t    my_target: {\n\t\t\tfiles: {\n\t\t\t\t'dest/output.min.js': ['src/input1.js', 'src/input2.js']\n\t\t\t}\n\t    }\n\t}\n\n  });\n\n\n  // Plugins do Grunt\n  grunt.loadNpmTasks( 'grunt-contrib-uglify' );\n\n\n  // Tarefas que serão executadas\n  grunt.registerTask( 'default', [ 'uglify' ] );\n\n};\n\n```\n\nPara ficar mais claro, temos outro exemplo com mais plugins e tarefas.\n\n```\nmodule.exports = function( grunt ) {\n\n  grunt.initConfig({\n\n    uglify: {\n\t    my_target: {\n\t\t\tfiles: {\n\t\t\t\t'dest/output.min.js': ['src/input1.js', 'src/input2.js']\n\t\t\t}\n\t    }\n\t},\n\tcssmin: {\n\t\ttarget: {\n\t    \tfiles: [{\n\t\t\t\texpand: true,\n\t\t\t\tcwd: 'release/css',\n\t\t\t\tsrc: ['*.css', '!*.min.css'],\n\t\t\t\tdest: 'release/css',\n\t\t\t\text: '.min.css'\n\t\t\t}]\n\t\t}\n\t}\n\n  });\n\n\n  // Plugins do Grunt\n  grunt.loadNpmTasks( 'grunt-contrib-uglify' );\n  grunt.loadNpmTasks( 'grunt-contrib-cssmin' );\n\n\n  // Tarefas que serão executadas\n  grunt.registerTask( 'default', [ 'cssmin', 'uglify' ] );\n  grunt.registerTask( 'css', [ 'cssmin' ] );\n  grunt.registerTask( 'js', [ 'uglify' ] );\n\n};\n\n```\n\nAcima, temos a configuração dos plugins `cssmin` e `uglify` no `Gruntfile.js`, onde os mesmos serão carregados com o método `loadNpmTasks` e registramos 3 tarefas.\n\n\n## Executando as tarefas \n\nNo terminal, rodando o comando:\n```\ngrunt\n```\nSerá executada a lista de tarefas `default` (`cssmin` e `uglify`)\n\nCom o comando:\n```\ngrunt css\n```\n\nSerá executada a lista `css` \n\nE o comando:\n\n```\ngrunt js\n```\na lista `js`\n\nAcredito que ficou simples de compreender a lógica para utilizar as tarefas do `GruntJS`. Com isso, temos tudo instalado e configurado. Agora só ser feliz com as tarefas automatizadas.\n\n## A dica\n\nDependendo da quantidade de configurações no seu `Gruntfile.js`, a manutenção fica bem complicada. Para resolver o problema, podemos utilizar o plugin `load-grunt-config`, para termos mais organização.\n\n[https://github.com/firstandthird/load-grunt-config](https://github.com/firstandthird/load-grunt-config)\nO ***load-grunt-config***, permite quebrar a configuração do `Gruntfile.js` por tarefa. Você pode usar os arquivos na extensão .js , .json , .yaml , .cson , ou .coffee.\n\n\nInstalando o plugin\n```\nnpm install load-grunt-config --save-dev\n```\n\nO `Gruntfile.js`, ficará semelhante ao exemplo abaixo:\n```\nmodule.exports = function(grunt) {\n    // Carrega configurações da pasta grunt-configs/\n    var path = require('path');\n\n    require('load-grunt-config')(grunt, {\n        init: true,\n        configPath: path.join(process.cwd(), 'source/_tasks'),\n        data: {\n            projectDir  : '../../public/assets/',\n            projectDev  : 'source/_assets/',\n            pkg: grunt.file.readJSON('package.json')\n        }\n    });\n\n};\n```\n\n`'source/_tasks'` - Será o caminho para onde estão os arquivos com as configurações das tarefas.\n\nNo objeto data, informamos as variáveis que será retornadas pelo parâmetro `options` no arquivo de configuração de cada plugin, como podemos ver abaixo. \n```\nmodule.exports = function(grunt, options){\n\t// configuração\n};\n```\n\nNo `Gruntfile.js`, o caminho das configurações se encontram na pasta `source/_tasks` e a estrutura ficaria assim:\n```\n>source\n  >_tasks\n    > aliases.yaml\n    > cssmin.js\n```\n\nA sua pasta com as tarefas precisará ter o arquivo `aliases.(js|.json|yaml|cson|coffee)` para definir as suas tarefas.\n\nExemplo com a extensão `.yaml`:\n\n***aliases.yaml***\n```\ndefault:\n  - 'cssmin'\n  - 'uglify'\n\ncss:\n  - 'cssmin'\n\njs:\n  - 'uglify'\n\n```\n\nAbaixo, um exemplo com a extensão `.js`, da configuração de um plugin. \n\n***cssmin.js***\n```\nmodule.exports = function(grunt, options){\n\n  var projectDir = options.projectDir;\n\n  return {\n    site: {\n      files: [{\n        expand: true,\n        cwd: '<%= projectDir %>css/site/',\n        src: ['*.css'],\n        dest: '<%= projectDir %>css/site/'\n      }]\n    }\n  };\n};\n```\n\nE assim, podemos utilizar o `GruntJS`, para estar automatizando as tarefas que dão um bom trabalho se feitas manualmente e poupam um bom tempo, nos deixando mais produtivos.\n","categories":["front-end"]},{"title":"Começando com HTML","url":"/hemersonvianna/artigos/html/comecando-com-html/","content":"\nIndependente da área que for atuar no desenvolvimento web, é importante que conheça a linguagem de marcação HTML. Afinal, ela que dá significado ao conteúdo de uma página web. A mesma foi criada em 1990, por [Tim Berners Lee](https://twitter.com/timberners_lee)(físico britânico). Em 28 de outubro de 2014, a WC3 lançou a recomendação da quinta versão (HTML 5).\n\n>HTML (abreviação para a expressão inglesa HyperText Markup Language, que significa Linguagem de Marcação de Hipertexto) é uma linguagem de marcação utilizada na construção de páginas na Web. Documentos HTML podem ser interpretados por navegadores.\n> <cite> -- HTML\n> - [Wikipédia](https://pt.wikipedia.org/wiki/HTML)\n> </cite>\n\n## Versões\n\n***HTML 1.0***\nT. Berners-Lee and D. Connolly, Junho de 1993 - Foi a primeira versão do HTML, apresentada para o mundo.\n\n***HTML 2.0***\nT. Berners-Lee and D. Connolly, Novembro de 1995 - Incluía tudo, desde as especificações originais do 1.0 , mas acrescentou algumas novas funcionalidades.\n\n***HTML 3.2***\nRecomendação W3C, 14 de Janeiro de 1997 - Tornou-se cada vez mais evidente que uma norma se fazia necessária para as tags. Para este fim, a W3C foi fundada em 1994 para padronizar a linguagem e mantê-la evoluindo na direcção certa. Seu primeiro trabalho foi apelidado de `WILBUR`, que mais tarde ficou conhecido como HTML 3.2 .\n\n***HTML 4.01***\nRecomendação W3C, 24 Dezembro de 1999 - Foi uma grande evolução dos padrões de HTML, e a última iteração do HTML clássico. Apelidado de `Cougar`, a maior parte das novas funcionalidades vieram a partir da malfadada HTML 3.0 . O suporte ao navegador foi realizado surpreendentemente pela Microsoft em seu navegador Internet Explorer, e o líder de mercado IE5.\n\n***XHTML 1.0***\nRecomendação W3C, 26 de Janeiro de 2000 - revisado em 1 de Agosto de 2002 - Marca um afastamento da forma que as especificações tem trabalhado. Incorporando os rigores do XML, para que o código seja escrito corretamente. Sem muitas tags novas ou obsoletas, é principalmente apenas um novo conjunto de regras de codificação.\n\n***XHTML 1.1***\nRecomendação W3C, 23 Novembro de 2010 - É uma reformulação do XHTML 1.0 Strict, com pequenas modificações, usando alguns módulos de um conjunto definido em modularização de XHTML. \n\n***HTML 5***\nRecomendação W3C, 28 de Outubro de 2014 - Versão atual do HTML.\n\n### Observações:\n\n***HTML 3.0***\nMarço de 1995 - Incluía muitas habilidades novas e melhoradas para o HTML, e prometeu oportunidades muito mais poderosas para os desenvolvedores, projetarem suas páginas. Infelizmente, os navegadores foram terrivelmente lentos na implementação de qualquer uma das novas melhorias, acrescentando apenas em alguns e deixando de fora o resto. Em parte, esta falha pode ser atribuída ao tamanho da revisão  e assim a especificação HTML 3.0 foi abandonada.\n\n***HTML5 - Primeiro esboço***\nW3C e WHATWG, 22 de Janeiro de 2008 - Em 10 de abril de 2007, propuseram que a W3C adotasse o HTML5 do WHATWG. Em Janeiro de 2008, a W3C publicou HTML5 como um `Working Draft`;\n\n\n## HTML5\n\nApós o HTML 4.01 e o XHTML 1.0, foi proposto o XHTML 2. Com a inovação constante nas funcionalidades em sites e navegadores, o caminho que o XHTML2 estava tomando, começou a ficar pouco realista. Assim, ficou evidente que era necessário uma nova abordagem.\n\nEm 2004, um grupo de pessoas se juntaram e começaram a construir algo próprio, fora dos procedimentos habituais da W3C. Assim surgiu o WHATWG(The Web Hipertext Application Technology Working Group), já que a W3C estava focando em linguagens baseadas em XML. Insatisfeitos com a direção que o HTMLWG (W3C) tinha escolhido para o futuro do HTML, se formou o WHATWG para mudar o futuro do HTML. A W3C percebeu que o XHTML 2.0 era impraticável e parou de trabalhar na especificação. Os esforços foram direcionados para a especificação do WHATWG sobre o HTML5.\n\nEm 28 de outubro de 2014, finalmente saiu a recomendação da W3C sobre o HTML5.\n\n\n### Estrutura básica:\n\n```\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\n- ***Doctype*** - É uma instrução que indica para o navegador, qual a especificação do código se deve utilizar. No exemplo acima, seria HTML5, onde ele não especifica um DTD (Document Type Definition), como nas versões anteriores. Deixando assim, por responsabilidade do navegador saber qual especificação usar.\n- ***html*** - A tag HTML, identifica o documento.\n- ***head*** - Envolve toda a parte inteligente da página. Onde se encontra as informações sobre a página e o seu conteúdo.\n- ***body*** - Onde estará todo o conteúdo que será apresentado para o usuário.\n\n\n### DTD na versão anterior ([XHTML 1.0](http://www.w3.org/TR/xhtml1/dtds.html))\n\nNa versão do XHTML, se pode usar 3 tipos de `doctype`:\n\n***Strict*** - Para escrever código limpo, livre de misturas entre estilo e conteúdos.\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n```\n\n***Transitional*** - Junta os elementos estruturais com elementos que o W3C quer tornar obsoleto na linguagem, por misturar o estilo com os conteúdos. Deve ser usada quando somos obrigados a manter a compatibilidade com browsers que não suportam estilos CSS na perfeição. \n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n```\n\n***Frameset*** - Usa-se em documentos que contenham `frames`.\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">\n```\n\nO que acha? Ficou muito melhor, não ter que se preocupar com o `doctype`. :)\n\n\n## HTMLWG x WHATWG\n\nEm julho de 2012, o HTMLWG e o WHATWG separaram oficialmente as maneiras de como seguir na especificação do HTML5. \n\n***HTMLWG(HTML Working Group)*** - [W3C Recommendation](http://www.w3.org/TR/html5/)\nGrupo de trabalho originalmente criado pelo World Wide Web Consortium (W3C) em 1997.\n\n***WHATWG(The Web Hipertext Application Technology Working Group)*** - [HTML Living Standard](https://html.spec.whatwg.org/multipage/)\nGrupo de pessoas ligadas a entidades e empresas como a Mozilla, Opera e Apple, entre outros interessados na evolução do HTML.\n\n\n## Conclusão\n\nSe ouvir alguém dizer que HTML é uma linguagem de programação, imediatamente a corrija. HTML é uma linguagem de marcação. Nos próximos artigos, estarei mostrando mais sobre as tags e o que é possível com o HTML5. Deixo aqui, essa introdução com a história do HTML.\n","categories":["html"]},{"title":"Começando com WAI-ARIA","url":"/hemersonvianna/artigos/front-end/comecando-com-wai-aria/","content":"\nO HTML é uma linguagem de marcação. Assim, dando significado para o conteúdo, mediante as suas `tags`. A WAI-ARIA se aplica para o significado das interações. Assim, ajudando onde a informação é dividida em diversos elementos e precisão de uma interação no site para serem visualizadas.\n\n>WAI - ARIA (Accessible Rich Internet Applications) define uma forma de tornar o conteúdo e aplicativos web mais acessíveis a pessoas com deficiências. Ele contribui especialmente com conteúdo dinâmico e interface de controles de usuário avançadas desenvolvidos com Ajax, HTML, JavaScript e tecnologias relacionadas.\n> <cite>\n> - [WAI-ARIA - Front in Rio 2012](http://www.w3c.br/pub/Agenda/PalestraFrontinRio2012AcessibilidadeHtml5Waiaria/Apresentacao-wai-aria-html5-frontinrio2012.pdf)\n> </cite>\n\n## Roles\n\nDistingue o tipo de elemento que está tendo a interação do usuário. Temos 4 categorias de `roles`: Abstract, Widgets, Document Structure e Landmarks.\n\n***Abstract*** - Tem a finalidade de definir conceitos gerais. São utilizados apenas por navegadores para ajudar a organizar e dinamizar um documento, e nunca por desenvolvedores para marcar HTML. Eles não são mapeados para leitores de tela e não fornecem nenhuma informação adicional acessibilidade diretamente entre HTML e leitor de tela.\n\n- [command](http://www.w3.org/TR/wai-aria/roles#command)\n- [composite](http://www.w3.org/TR/wai-aria/roles#composite)\n- [input](http://www.w3.org/TR/wai-aria/roles#input)\n- [landmark](http://www.w3.org/TR/wai-aria/roles#landmark)\n- [range](http://www.w3.org/TR/wai-aria/roles#range)\n- [roletype](http://www.w3.org/TR/wai-aria/roles#roletype)\n- [section](http://www.w3.org/TR/wai-aria/roles#section)\n- [sectionhead](http://www.w3.org/TR/wai-aria/roles#sectionhead)\n- [select](http://www.w3.org/TR/wai-aria/roles#select)\n- [structure](http://www.w3.org/TR/wai-aria/roles#structure)\n- [widget](http://www.w3.org/TR/wai-aria/roles#widget)\n- [window](http://www.w3.org/TR/wai-aria/roles#window)\n\n\n***Widgets*** - Tem a finalidade de definir elementos de interface independentes ou em conjuntos.\n\n- [alert](http://www.w3.org/TR/wai-aria/roles#alert)\n- [alertdialog](http://www.w3.org/TR/wai-aria/roles#alertdialog)\n- [button](http://www.w3.org/TR/wai-aria/roles#button)\n- [checkbox](http://www.w3.org/TR/wai-aria/roles#checkbox)\n- [dialog](http://www.w3.org/TR/wai-aria/roles#dialog)\n- [gridcell](http://www.w3.org/TR/wai-aria/roles#gridcell)\n- [link](http://www.w3.org/TR/wai-aria/roles#link)\n- [log](http://www.w3.org/TR/wai-aria/roles#log)\n- [marquee](http://www.w3.org/TR/wai-aria/roles#marquee)\n- [menuitem](http://www.w3.org/TR/wai-aria/roles#menuitem)\n- [menuitemcheckbox](http://www.w3.org/TR/wai-aria/roles#menuitemcheckbox)\n- [menuitemradio](http://www.w3.org/TR/wai-aria/roles#menuitemradio)\n- [option](http://www.w3.org/TR/wai-aria/roles#option)\n- [progressbar](http://www.w3.org/TR/wai-aria/roles#progressbar)\n- [radio](http://www.w3.org/TR/wai-aria/roles#radio)\n- [scrollbar](http://www.w3.org/TR/wai-aria/roles#scrollbar)\n- [slider](http://www.w3.org/TR/wai-aria/roles#slider)\n- [spinbutton](http://www.w3.org/TR/wai-aria/roles#spinbutton)\n- [status](http://www.w3.org/TR/wai-aria/roles#status)\n- [tab](http://www.w3.org/TR/wai-aria/roles#status)\n- [tabpanel](http://www.w3.org/TR/wai-aria/roles#tabpanel)\n- [textbox](http://www.w3.org/TR/wai-aria/roles#textbox)\n- [timer](http://www.w3.org/TR/wai-aria/roles#timer)\n- [tooltip](http://www.w3.org/TR/wai-aria/roles#tooltip)\n- [treeitem](http://www.w3.org/TR/wai-aria/roles#treeitem)\n\nExemplo: \n\n```\n<span class=\"tooltip\" role=\"tooltip\" aria-hidden=\"true\">Texto de exemplo</span>\n```\n\nAs `roles` abaixo, normalmente são recipientes para gerenciar outros elementos de interface.\n \n- [combobox](http://www.w3.org/TR/wai-aria/roles#combobox)\n- [grid](http://www.w3.org/TR/wai-aria/roles#grid)\n- [listbox](http://www.w3.org/TR/wai-aria/roles#listbox)\n- [menu](http://www.w3.org/TR/wai-aria/roles#menu)\n- [menubar](http://www.w3.org/TR/wai-aria/roles#menubar)\n- [radiogroup](http://www.w3.org/TR/wai-aria/roles#radiogroup)\n- [tablist](http://www.w3.org/TR/wai-aria/roles#tablist)\n- [tree](http://www.w3.org/TR/wai-aria/roles#tree)\n- [treegrid](http://www.w3.org/TR/wai-aria/roles#treegrid)\n\nExemplo: \n\n```\n<ul class=\"menu\" role=\"menu\">\n\t<li class=\"menu-item checked\" role=\"menuitemradio\" tabindex=\"-1\" aria-controls=\"st1\" aria-checked=\"true\">Sans-serif</li>\n\t<li class=\"menu-item\" role=\"menuitemradio\" tabindex=\"-1\" aria-controls=\"st1\" aria-checked=\"false\">Serif</li>\n\t<li class=\"menu-item\" role=\"menuitemradio\" tabindex=\"-1\" aria-controls=\"st1\" aria-checked=\"false\">Monospace</li>\n\t<li class=\"menu-item\" role=\"menuitemradio\" tabindex=\"-1\" aria-controls=\"st1\" aria-checked=\"false\">Fantasy</li>\n</ul>\n```\n\n\n***Document Structure*** - Descrevem estruturas que organizam o conteúdo de uma página. Geralmente não são interativos.\n\n- [article](http://www.w3.org/TR/wai-aria/roles#article)\n- [columnheader](http://www.w3.org/TR/wai-aria/roles#columnheader)\n- [definition](http://www.w3.org/TR/wai-aria/roles#definition)\n- [directory](http://www.w3.org/TR/wai-aria/roles#directory)\n- [document](http://www.w3.org/TR/wai-aria/roles#document)\n- [group](http://www.w3.org/TR/wai-aria/roles#group)\n- [heading](http://www.w3.org/TR/wai-aria/roles#heading)\n- [img](http://www.w3.org/TR/wai-aria/roles#img)\n- [list](http://www.w3.org/TR/wai-aria/roles#list)\n- [listitem](http://www.w3.org/TR/wai-aria/roles#listitem)\n- [math](http://www.w3.org/TR/wai-aria/roles#math)\n- [note](http://www.w3.org/TR/wai-aria/roles#presentation)\n- [presentation](http://www.w3.org/TR/wai-aria/roles#presentation)\n- [region](http://www.w3.org/TR/wai-aria/roles#region)\n- [row](http://www.w3.org/TR/wai-aria/roles#row)\n- [rowgroup](http://www.w3.org/TR/wai-aria/roles#rowgroup)\n- [rowheader](http://www.w3.org/TR/wai-aria/roles#rowheader)\n- [separator](http://www.w3.org/TR/wai-aria/roles#separator)\n- [toolbar](http://www.w3.org/TR/wai-aria/roles#toolbar)\n\nExemplo: \n\n```\n<dialog tabindex=\"0\" role=\"alertdialog\" aria-labelledby=\"d-message\">\n   <div>\n      <div role=\"document\" tabindex=\"0\">\n         <p id=\"d-message\">Essa informação é desnecessária</p>\n         <button>Eu entendi</button>\n      </div>\n   </div>\n</dialog>\n```\n\n\n***Landmarks*** - São regiões da página que são pontos importantes para a navegação do usuário.\n\n- [application](http://www.w3.org/TR/wai-aria/roles#application)\n- [banner](http://www.w3.org/TR/wai-aria/roles#banner)\n- [complementary](http://www.w3.org/TR/wai-aria/roles#complementary)\n- [contentinfo](http://www.w3.org/TR/wai-aria/roles#contentinfo)\n- [form](http://www.w3.org/TR/wai-aria/roles#form)\n- [main](http://www.w3.org/TR/wai-aria/roles#main)\n- [navigation](http://www.w3.org/TR/wai-aria/roles#navigation)\n- [search](http://www.w3.org/TR/wai-aria/roles#search)\n\nExemplo: \n\n```\n<ul role=\"navigation\">\n\t<li><a href=\"sobre.html\">Sobre</a></li>\n\t<li><a href=\"contato.html\">Contato</a></li>\n</ul>\n```\n\n\n## States e Properties\n\nAprensenta o estado do elemento. \n\nAbaixo, temos um exemplo de estado e propriedades com a funcionalidade de `tabs`, que será alterado via javaScript (Não será necessário, colocar o script aqui, porque a ideia é apenas mostrar as propriedades e estados):\n\n```\n// HTML\n<ul role=\"tablist\">\n <li role=\"presentation\"><a href=\"#section1\" tabindex=\"0\" role=\"tab\" aria-controls=\"section1\" aria-selected=\"true\">Section 1</a></li>\n <li role=\"presentation\"><a href=\"#section2\" tabindex=\"-1\" role=\"tab\" aria-controls=\"section2\">Section 2</a></li>\n <li role=\"presentation\"><a href=\"#section3\" tabindex=\"-1\" role=\"tab\" aria-controls=\"section3\">Section 3</a></li>\n</ul>\n<section id=\"section1\" role=\"tabpanel\">...</section>\n<section id=\"section2\" role=\"tabpanel\" aria-hidden=\"true\">...</section>\n<section id=\"section3\" role=\"tabpanel\" aria-hidden=\"true\">...</section>\n\n```\nAo clicar no item de navegação, o elemento terá o estado `true`, para a propriedade `aria-selected`. E o conteúdo que será mostrado para o usuário, não terá a propriedade `aria-hidden` com o estado `true`.\n\n\n## Links\n\n- HTML5 ARIA - [http://www.w3.org/TR/aria-in-html/](http://www.w3.org/TR/aria-in-html/)\n- ARIA - [http://www.w3.org/WAI/PF/aria/](http://www.w3.org/WAI/PF/aria/)\n- Roles - [http://www.w3.org/TR/wai-aria/roles](http://www.w3.org/TR/wai-aria/roles)\n- States and Properties - [http://www.w3.org/TR/wai-aria/states_and_properties](http://www.w3.org/TR/wai-aria/states_and_properties)\n- Design Patterns - [http://www.w3.org/TR/wai-aria-practices/#aria_ex](http://www.w3.org/TR/wai-aria-practices/#aria_ex)\n\n\n## Conclusão\n\nA WAI-ARIA é para extender e não substituir as tags HTML. Dê sempre preferência para o HTML, para dar significado ao conteúdo. E é preciso tomar alguns cuidados.\n\nSe não é possível usar a tag `form`, usaríamos assim:\n\n```\n<div role=\"form\"></div>\n```\n\nNo código abaixo, seria redundante.\n```\n<form role=\"form\"></form>\n```\n\nO mais importante é sempre lembrar que as interações devem ser usadas via teclado. Afinal, o foco está na acessibilidade.\n","categories":["front-end"]},{"title":"Começando com a metodologia ágil","url":"/hemersonvianna/artigos/IT-management/comecando-com-a-metodologia-agil/","content":"\n## Por que é necessário se ter um método ágil para o desenvolvimento de software?\n\nCom o método tradicional conhecido como `Cascata` (Waterfall), se tem um processo de levantamento bem detalhado no início do projeto, junto ao cliente. Assim, muitas das vezes se tem o projeto com o escopo fechado. Logo de ínicio, precisamos saber de tudo que o cliente precisa e aí encontramos o problema em que o cliente pode não saber o que quer, sem ter amostras para que possa ter uma visão mais clara.\n\nMesmo que o cliente ainda não saiba o que quer, terá uma equipe de analistas que faria o levantamento dos requisitos, depois passando pelas equipes de design, modelagem e depois de um longo processo chegaria na equipe de programação. Muitas das vezes, o pensamento das equipes por onde se passou o projeto, não estão com a mesma linha de raciocínio.\n\nDepois de um longo processo, por fim se chega na parte de testes, onde o prazo já está apertado ou inexistente. Provocando uma possível queda na qualidade do projeto e não dando oportunidade para correções dentro do prazo.\n\nCom o cliente só tendo acesso ao projeto no final do mesmo, é gigantesca a possibilidade de haver o : \"- Não foi isso que eu pedi.\". E temos um sério problema.\n\nNas metodologias ágeis temos os mesmos processos, mas ao invés de fases extensas, temos ciclos com duração bem mais reduzidas. A cada ciclo, o cliente já poderá acompanhar o acréscimo da funcionalidade no produto, podendo dar `feedbacks` para as equipes.\n\n\n## Manifesto Ágil\n\nEm 2001, foi criado o manifesto ágil com a assinatura de especialistas em processos de desenvolvimento de software representando entre outros, os métodos Scrum e Extreme Programming (XP).\n\n>\"Estamos descobrindo maneiras melhores de desenvolver software, fazendo-o nós mesmos e ajudando outros a fazerem o mesmo. Através deste trabalho, passamos a valorizar: \n>\n>Indivíduos e interação entre eles mais que processos e ferramentas.\n>Software em funcionamento mais que documentação abrangente\n>Colaboração com o cliente mais que negociação de contratos\n>Responder a mudanças mais que seguir um plano\n>\n>Ou seja, mesmo havendo valor nos itens à direita,\n>valorizamos mais os itens à esquerda.\"\n> <cite>\n> - [Manifesto ágil](http://www.manifestoagil.com.br/)\n> </cite>\n\nAqui você pode conferir os [Princípios por trás do manifesto ágil](http://www.manifestoagil.com.br/principios.html).\n\n\nExistem várias abordagens para as metodologias ágeis, dependendo da sua necessidade, você poderá estar usando o `Scrum`, `XP`, `Kanban` ou outros como ferramenta.\n\n## Vantagens para o cliente\n\n>- Foco e maximização do ROI (Retorno do Investimento) e do Valor de Negócio;\n>- Entregas do produto + rápida, freqüentes e regulares;\n>- Aceleração do Time-to-market o que se traduz em ganho de competitividade;\n>- Maximização do Value-to-Makert;Foco no que é prioritário e traz mais valor para o usuário, o que se traduz em ganho de usabilidade;\n>- Transparência e visibilidade do status do projeto;\n>- Flexibilidade para mudanças de requisitos e prioridades além de maior agilidade na tomada de decisões;\n>- Melhoria da Qualidade do produto final;\n>- Produtividade;\n>- Redução dos riscos e das indesejáveis surpresas.\n> <cite>\n> - [O que são essas tais de metodologias Ágeis?](https://www.ibm.com/developerworks/community/blogs/rationalbrasil/entry/mas_o_que_s_c3_a3o_essas_tais_de_metodologias__c3_a1geis?lang=en)\n> </cite>\n\n## Vantagens para o gestor e a equipe\n\n>- Escopo e objetivos claros e priorizados;\n>- Equipes auto-gerenciáveis, maior autonomia, disciplina e regularidade;\n>- Maximização do comprometimento;\n>- Melhoria na comunicação. A comunicação intensa com o cliente e a gestão de suas expectativas são parte do processo;\n>- Inspeção e Adaptação constantes do processo em busca da melhoria contínua e a redução dos desperdícios;\n>- Antecipação dos problemas e maior agilidade na tomada de ações.\n> <cite>\n> - [O que são essas tais de metodologias Ágeis?](https://www.ibm.com/developerworks/community/blogs/rationalbrasil/entry/mas_o_que_s_c3_a3o_essas_tais_de_metodologias__c3_a1geis?lang=en)\n> </cite>\n\n## Conclusão\n\nO mais importante é colocar o projeto em primeiro lugar e avaliar o que é melhor para o mesmo. Se o projeto tem requisitos estáveis e previsíveis, o método tradicional se encaixa bem. Os requisitos sendo instáveis e o projeto estando em constantes mudanças, a metodologia ágil resolve e organiza esse fluxo que precisa de uma atenção em curto prazo.\n","categories":["IT management"]},{"title":"Começando com a lógica de programação","url":"/hemersonvianna/artigos/IT-management/comecando-com-logica-de-programacao/","content":"\nA lógica está presente em algo que você faz. Na lógica de programação, não é muito diferente. Tudo que se propõe a programar, você deve se basear em um raciocínio lógico no planejamento. Então, o foco é ter em mente o desenvolvimento da forma racional, buscando soluções para um problema. É um requisito básico para quem quer ser um programador, saber sobre lógica. Copiar e colar, não é programar. É necessário saber o que está fazendo e ter um raciocínio do que está sendo feito para solucionar um problema.\n\nNa lógica de programação, uma coisa muito importante é a teoria da programação, que será a base para você programar, independente da linguagem. \n\nO que será muito visto é a criação de algoritmos. Que é uma sequência de passos, para se executar uma tarefa.\n\n>Um algoritmo é uma sequência finita de instruções bem definidas e não ambíguas, cada uma das quais devendo ser executadas mecânica ou eletronicamente em um período de tempo finito e com uma quantidade de esforço finita.\n> <cite>\n> - [Wikipédia](https://pt.wikipedia.org/wiki/Algoritmo)\n> </cite>\n\n## O que é preciso para programar?\n\nQuando precisamos desenvolvedor algo, partimos de 2 premissas: Saber o que precisa ser feito e como.\n\nA lógica entra na primeira etapa. Exemplo:\n\nTemos a tarefa de chupar uma bala. Precisamos saber como será feito. Entramos com a lógica, na elaboração do algoritmo.\n\n- 1 - Colocar a mão no bolso;\n- 2 - Pegar a bala;\n- 3 - Desembrulhar o papel;\n- 4 - Colocar a bala na boca;\n- 5 - Chupar a bala;\n- 6 - Jogar fora o papel;\n\nCom a primeira etapa concluída, passamos para a etapa de como fazer. Assim, só será preciso escolher a linguagem que será utilizada. Que depende do seu conhecimento de uma linguagem e estudo da mesma. A parte do planejamento sendo bem pensado, evitar retrabalho e falhas quando a tarefa for executada pelo seu programa.\n\n## Algoritmos\n\nAs formas mais conhecidas da representação de algoritmos, são:\n\n- 1 - Descrição Narrativa\n- 2 - Fluxograma\n- 3 - Pseudocódigo ou linguagem estruturada\n\n\n### Descrição Narrativa\n\nÉ a linguagem normal que usamos no dia a dia e os passos como devem ser, como foi mostrado acima na tarefa \"chupar uma bala\".\n\n### Fluxograma\n\nÉ representado por formas geométricas, onde cada forma tem um significado e expressa uma ação, instrução ou comando.\n\n![Fluxograma](/hemersonvianna/assets/css/img/site/articles/fluxograma.svg)\n\n\n### Pseudocódigo ou linguagem estruturada\n\nÉ a que chega mais próximo de uma linguagem de programação. Utilizando: comandos de entrada e saída, variáveis, constantes, expressões, blocos e ações a serem realizadas.\n\nPara essa etapa, você pode usar o [VisualG](http://www.apoioinformatica.inf.br/produtos/visualg). Na faculdade, usava o [Dev C++](http://sourceforge.net/projects/orwelldevcpp/), mas acredito que o VisualG é mais interessante, por não ser necessário conhecer uma linguagem.\n\nPara quem usa o Linux, uma alternativa se não quiser usar o ***Wine***, é o [G-Portugol](http://sourceforge.net/projects/gpt.berlios/). \n\nOutras sugestões:\n\n- [Portugol Studio](http://lite.acad.univali.br/portugol/) - Win\n- [Potigol](https://github.com/potigol/Potigol) - Win / Linux\n\n> O VisuAlg é um programa que edita, interpreta e executa algoritmos com uma linguagem próxima do portuguêsestruturado como um programa normal de computador. É um programa de livre uso e distribuição, empregado no ensino de programação em várias escolas e universidades no Brasil e no exterior.\n> <cite>\n> - [VisualG](http://www.apoioinformatica.inf.br/produtos/visualg)\n> </cite>\n\nExemplo com o VisualG:\n\n```\nalgoritmo \"exemplo\"\n// Função : Média\n// Autor :  Hemerson Vianna\n// Data : 26/08/2015\n\n// Seção de Declarações\nvar nota1, nota2, media : real\n\ninicio\n\tescreva(\"Digite a primeira nota:\")\n\tleia(nota1)\n\t\n\tescreva(\"Digite a segunda nota:\")\n\tleia(nota2)\n\t\n\tlimpatela\n\t\n\tmedia <- (nota1+nota2)/2\n\t\n\tescreval(\"A média é:\",media)\nfimalgoritmo\n```\n\n## Conclusão\n\nA lógica da programação é muito importante, para se ter um planejamento mais detalhado e assim, evitando falhas durante a execução dos passos. \n\nUm algoritmo tem que partir do princípio que poderá ser compreendido por qualquer pessoa. Com isso, é necessário que ele seja feito de forma clara e no caso do ***pseudocódigo***, com comentários e identação para fácil compreensão.\n","categories":["IT management"]},{"title":"Javascript - Variaveis","url":"/hemersonvianna/artigos/javascript/javascript-variaveis/","content":"\nVariáveis são endereços de memória onde armazenamos dados ou informações. Precisamos declarar as mesmas, para manipular os dados e informações com facilidade e para termos controle durante os processos.\n\nAté a quinta versão do ECMA-262, variáveis não declaradas ou sem valor receberiam o valor `undefined`. Agora com a sexta versão, variáveis declaradas sem valor e não declaradas, terão o valor `string` e `undefined`, respectivamente.\n\n```\n// versão 5\nvar name;\nconsole.log(typeof name); // undefined\nconsole.log(typeof calc); // undefined\n```\n\n```\n// versão 6\nvar name;\nconsole.log(typeof name); // string\nconsole.log(typeof calc); // undefined\n```\n\nPodemos apenas declarar uma variável sem valor, com isso já estaremos configurando na memória para o seu uso posteriormente. Declarando já com um valor, dizemos que a variável está sendo inicializada.\n\n```\nvar name = 'Hemerson';\n```\n\n\nÉ possível declarar uma variável sem usar a palavra-chave var na declaração e atribuir um valor para ela. Trata-se de uma declaração implícita.\n\n```\nname = 'Hemerson';\n```\n\nNão é possível usar uma variável que nunca tenha sido declarada.\n\n```\nvar result = width * height;\n```\n\n\n## Nomeação\n\nA linguagem JavaScript é '**case sensitive**', portanto faz distinção entre maiúsculas e minúsculas.\n\n```\nvar name = 'hemerson';\nvar Name = 'fulano';\n\nconsole.log(name) // hemerson\nconsole.log(Name) // fulano\n```\n\nRegras para nomear uma variável:\n\n*\t1. O caractere inicial deve ser uma letra ASCII ou um caractere de sublinhado(_). E não pode iniciar por um número\n*\t2. Os próximo caracteres devem ser letras, números ou sublinhados (_).\n*\t3. Não pode ter o nome de uma palavra reservada.\n\n\n### Palavras reservadas\n\nbreak - default - function - return - var - case - delete - if - switch - void - catch - do - in - this - while - const - else - instanceof - throw - with - continue - finally - let - try - debugger - for - new - typeof\n\n\nPode:\n\n```\nvar _name;\nvar Age;\nvar match_result;\n```\n\nNão pode:\n\n```\nvar 107Test;\nvar name&age;\n```\n\n\n## E aí, comma-first ou trailing commas?\n\nComma-first:\n\n```\nvar name = 'hemerson'\n    , age= 28\n;\n```\n\nTrailing commas:\n\n```\nvar name = 'hemerson',\n    age= 28;\n```\n\nO padrão tradicional e o qual muitos estão acostumados, seria com as vírgulas à direita.  Com a vírgula na frente, na minha opinião tem facilitado bastante a legibilidade do código e dependendo da ocasião, facilidade para comentar uma variável.\n\nSendo adepto do comma-first, deixo um [artigo do Suissa](http://nomadev.com.br/comma-first-por-que-usar/) que levanta uns bons pontos.\n\nEssa é uma questão que mesmo tendo uma preferência, deixo aberto que a decisão seja tomada visando o melhor para o projeto e padronização da equipe.\n\n\n<br><br>\n### Série JavaScript\n\n*\t1.[Introdução](/hemersonvianna/artigos/javascript/javascript-introducao)\n*\t2.[Tipos de dados](/hemersonvianna/artigos/javascript/javascript-tipos-de-dados)\n*\t3.[Valores](/hemersonvianna/artigos/javascript/javascript-valores)\n*\t4.Variáveis\n","categories":["javascript"]},{"title":"Javascript - Valores","url":"/hemersonvianna/artigos/javascript/javascript-valores/","content":"\nAgora que já conhecemos os tipos de dados que existem na linguagem JavaScript, agora precisamos ver mais sobre os valores em si. Como no caso do tipo `boolean`, que tem apenas 2 valores possíveis, `true` ou `false`.\n\nPodemos inverter o valor do tipo `boolean` com o operador `!`(negação). Ex:\n\n```\nvar test = true;\nconsole.log(!test); // false\n```\n\nNegando 2 vezes `!!`, podemos ter o retorno real do valor. Ex:\n\n```\nvar test = true;\nconsole.log(!!test); // true\n```\n\nUma coisa muito importante para se levar em conta nas condições que você possa fazer no código JavaScript, é se determinados valores são considerados verdadeiros ou falsos. \n\nConsiderados `falsy` (falsos):\n\n- false\n- 0 (zero)\n- \"\" (string vazia)\n- null\n- undefined\n- NaN\n\n```\nif(false) console.log('true');\nelse console.log('false');\n\nif(0) console.log('true');\nelse console.log('false');\n\nif(\"\") console.log('true');\nelse console.log('false');\n\nif(null) console.log('true');\nelse console.log('false');\n\nif(undefined) console.log('true');\nelse console.log('false');\n\nif(NaN) console.log('true');\nelse console.log('false');\n```\n\n\nConsiderados `truthy` (verdadeiros):\n\n- \"0\" (zero)\n- \"false\"\n- function() {}\n- []\n- {}\n\n```\nif(\"0\") console.log('true');\nelse console.log('false');\n\nif(\"false\") console.log('true');\nelse console.log('false');\n\nif(function(){}) console.log('true');\nelse console.log('false');\n\nif([]) console.log('true');\nelse console.log('false');\n\nif({}) console.log('true');\nelse console.log('false');\n```\n\nTambém é importante conhecer os possíveis valores do tipo `number`.\n\n- Inteiro\n```\nvar num = 10;\nvar num2 = -10;\n```\n\n- Decimal\n```\nvar num = 10.12;\nvar num2 = -10.12;\n```\n\n- Com expoente\n```\nvar num = 421e6\nconsole.log(num); //421000000\n\nvar num2 = 421e-6\nconsole.log(num2); //0.000421\n```\n\n- Hexadecimal\n```\nvar num = 0xFF;\nconsole.log(num); // 255\n```\n\n\n\n<br><br>\n### Série JavaScript\n\n*\t1.[Introdução](/hemersonvianna/artigos/javascript/javascript-introducao)\n*\t2.[Tipos de dados](/hemersonvianna/artigos/javascript/javascript-tipos-de-dados)\n*\t3.Valores\n*\t4.[Variáveis](/hemersonvianna/artigos/javascript/javascript-variaveis)\n","categories":["javascript"]},{"title":"Javascript - Tipos de dados","url":"/hemersonvianna/artigos/javascript/javascript-tipos-de-dados/","content":"\nA linguagem JavaScript é uma linguagem de tipagem fraca (ou tipagem dinâmica). Isso significa que variáveis JavaScript não têm nenhum tipo predeterminado. Assim, o tipo de uma variável é o tipo do seu valor.\n\nEm JavaScript, você pode realizar operações em valores de diferentes tipos sem causar uma exceção. O interpretador converte implicitamente um dos tipos de dados no outro e realiza a operação. \n\nRegras para os tipos primários:\n\n```\n// string + number\nvar test = '1' + 1;\nconsole.log(typeof test); // string\n\n// string + boolean\nvar test2 = '1' + false;\nconsole.log(typeof test2); // string\n\n// number + boolean\nvar test3 = 1 + false;\nconsole.log(typeof test3); // number\n\n```\n\n### Primários\n\nOs tipos de dados primários (primitivos) são:\n\nString\n```\nvar name = 'Hemerson';\nconsole.log(typeof name); // string\n```\n\nNumber\n```\nvar age = 29;\nconsole.log(typeof age); // number\n```\n\nBoolean\n```\nvar rich = false;\nconsole.log(typeof rich); // boolean\n```\n\nSymbol (Novidade com a versão ECMAScript 2015)\n```\nvar symbol1 = Symbol('foo');\nconsole.log(typeof symbol1); // symbol\n```\n\n\n### Compostos\n\nOs tipos de dados compostos (de referência) são:\n\nObject\n```\nvar obj = {};\nconsole.log(typeof obj); // object\n```\n\nArray\n```\nvar items = [];\nconsole.log(items instanceof Array); // true\n```\n\n\n### Especiais\n\nOs tipos de dados especiais são:\n\nNull\n```\nvar money = null;\nconsole.log(money); // null\n```\n\nUndefined\n```\nconsole.log(typeof lost); // undefined\n```\n\n<br><br>\n### Série JavaScript\n\n*\t1.[Introdução](/hemersonvianna/javascript/javascript-introducao)\n*\t2.Tipos de dados\n*\t3.[Valores](/hemersonvianna/javascript/javascript-valores)\n*\t4.[Variáveis](/hemersonvianna/javascript/javascript-variaveis)\n","categories":["javascript"]},{"title":"Começando com Javascript","url":"/hemersonvianna/artigos/javascript/comecando-com-javascript/","content":"\nE aqui se inicia a série \"JavaScript\". A ideia veio depois de ver um número grande de front-enders que ainda não se preocupam em conhecer a linguagem e só apenas usam frameworks e bibliotecas.\n\nQuando perguntado se conhece a linguagem, a resposta mais ouvida foi: ***'Uso jQuery!'***\n\nEntão, vamos falar sobre a linguagem JavaScript, que já foi chamada de Mocha, posteriormente LiveScript e por fim JavaScript. A mesma foi criada por [@BrendanEich](https://twitter.com/brendaneich), e teve sua primeira versão JavaScript 1.0, introduzida no navegador Netscape 2.0 em 1996.\n\n>JavaScript é uma linguagem de programação interpretada . Foi originalmente implementada como parte dos navegadores web para que scripts pudessem ser executados do lado do cliente e interagissem com o usuário sem a necessidade deste script passar pelo servidor, controlando o navegador, realizando comunicação assíncrona e alterando o conteúdo do documento exibido.\n> <cite> -- JavaScript\n> - [Wikipédia](http://pt.wikipedia.org/wiki/JavaScript)\n> </cite>\n\n> Com JavaScript, podemos controlar o comportamento do navegador em diversos aspectos, como criar janelas pop-up, apresentar mensagens ao usuário, alterar as dimensões do navegador, interferir na barra de status, retirar menus, fechar e abrir janelas.\n>\n> JavaScript é capaz de acessar os campos e valores digitados em um formulário HTML e proceder à validação dos dados, realizar cálculos e fornecer dicas de preenchimento dos campos.\n>\n> <cite> -- JavaScript Guia do Programador\n> - Maurício Samy Silva\n> </cite>\n\n\nAtualmente, o nome oficial da linguagem JavaScript é ECMAScript e a versão é a ECMA-262 v6 (ECMAScript 2015).\n\n### Tabela 1.1 – Versões da JavaScript\n\n| Versão           | Implementação                                | Mês/ano       |\n| ---------------- | -------------------------------------------- | ------------- |\n| JavaScript 1.0   | Netscape 2.0                                 | Março 1996    |\n| JavaScript 1.1   | Netscape 3.0                                 | Agosto 1996   |\n| JavaScript 1.2   | Netscape 4.0 e 4.05                          | Junho 1997    |\n| JavaScript 1.3   | Netscape 4.06 e 4.07x                        | Outubro 1998  |\n| JavaScript 1.4   | Servidores Netscape                          | -             |\n| JavaScript 1.5   | Netscape 6.0 – Firefox 1.0 – Opera 6.0 a 9.0 | Novembro 2000 |\n| JavaScript 1.6   | Firefox 1.5 – Safari 3.0 e 3.1               | Novembro 2005 |\n| JavaScript 1.7   | Firefox 2.0 – Safari 3.2 e 4.0 – Chrome 1.0  | Outubro 2006  |\n| JavaScript 1.8   | Firefox 3.0                                  | Junho 2008    |\n| JavaScript 1.8.1 | Firefox 3.5                                  | 2008          |\n| JavaScript 1.9   | Firefox 4.0                                  | 2009          |\n| JavaScript 1.0   | Internet Explorer 3                          | Agosto 1996   |\n| JavaScript 2.0   | Internet Explorer 3 – Windows IIS 3          | Janeiro 1997  |\n| JavaScript 3.0   | Internet Explorer 4                          | Outubro 1997  |\n| JavaScript 4.0   | Visual Studio 6.0                            | -             |\n| JavaScript 5.0   | Internet Explorer 5                          | Março 1999    |\n| JavaScript 5.1   | Internet Explorer 5.01                       | -             |\n| JavaScript 5.5   | Internet Explorer 5.5                        | Julho 2000    |\n| JavaScript 5.6   | Internet Explorer                            | Outubro 2001  |\n| JavaScript 5.7   | Internet Explorer 7                          | Novembro 2006 |\n| JavaScript 5.8   | Internet Explorer 8                          | Março 2009    |\n| ECMA-262 v1      | Navegadores versão 4                         | 1998          |\n| ECMA-262 v2      | Versão de testes                             | 1998          |\n| ECMA-262 v3      | Navegadores versão 6                         | 1999          |\n| ECMA-262 v4      | Navegadores versão 6+                        | 2002          |\n| ECMA-262 v5      | Navegadores versão 6+                        | 2009          |\n| ECMA-262 v6      | Versão atual                                 | 2015          |\n\n\n> ECMA (acrônimo para European Computer Manufacturers Association) é uma associação fundada em 1961 dedicada à padronização de sistemas de informação. Desde 1994 passou a se denominar Ecma International para refletir suas atividades internacionais. A associação é aberta a companhias que produzem, comercializam ou desenvolvem sistemas de computação ou de comunicação na Europa.\n> <cite> -- Ecma International\n> - [Wikipédia](http://pt.wikipedia.org/wiki/Ecma_International)\n> </cite>\n\n\n> ECMAScript é uma linguagem de programação baseada em scripts, padronizada pela Ecma International na especificação ECMA-262. A linguagem é bastante usada em tecnologias para Internet, sendo esta base para a criação do JavaScript/JScript e também do ActionScript.\n> <cite> -- ECMAScript\n> - [Wikipédia](http://pt.wikipedia.org/wiki/ECMAScript)\n> </cite>\n\n\n## Mãos à obra\n\nConseguimos inserir de algumas formas o código JavaScript em um documento HTML.\n\nIncorporado no `<head>` ou no `<body>`:\n\n```\n<!doctype html>\n<html>\n  <head>\n    <script type=\"text/javascript\">\n      // Insira o código Javascript aqui\n    </script>\n  </head>\n  <body>\n    <script type=\"text/javascript\">\n      // Insira o código Javascript aqui\n    </script>\n  </body>\n</html>\n```\n\n\nLinkado no `<head>` ou no `<body>`:\n\n```\n<!doctype html>\n<html>\n  <head>\n    <script type=\"text/javascript\" src=\"arquivo.js\"></script>\n  </head>\n  <body>  \n  \t<script type=\"text/javascript\" src=\"arquivo.js\"></script>\n  </body>\n</html>\n```\n\nTambém é possível de forma `inline`, mas não é aconselhável por dificultar a manutenção e etc.\n\n```\n<!doctype html>\n<html>\n  <head>\n  </head>\n  <body>  \n    <a href=\"#\" onclick=\"document.getElementsByTagName('p')[0].style.color = 'red';return false;\">clique aqui</a>\n\n    <p>Text 1</p>\n    <p>Text 2</p>\n\n  </body>\n</html>\n```\n\n\n## EcmaScript 2015\n\nJá podemos utilizar as novas features sem preocupação com o auxílio de um \"transpiler\", como o [BabelJS](https://babeljs.io/).\nEm um próximo artigo, falarei sobre as novas features.\n\nCom isso, temos uma introdução na linguagem. :)\n\n<br><br>\n### Série JavaScript\n\n*\t1.Introdução\n*\t2.[Tipos de dados](/hemersonvianna/artigos/javascript/javascript-tipos-de-dados)\n*\t3.[Valores](/hemersonvianna/artigos/javascript/javascript-valores)\n*\t4.[Variáveis](/hemersonvianna/artigos/javascript/javascript-variaveis)\n","categories":["javascript"]},{"title":"Conhecendo a metodologia ITCSS","url":"/hemersonvianna/artigos/css/conhecendo-a-metodologia-itcss/","content":"\nOlá, pessoal.\n\nVou escrever sobre uma coisa muito importante, que é o gerenciamento do código CSS. Você começa um projeto Front-End e está na hora de pensar como será a arquitetura CSS.\n\nSe tem várias metodologias e frameworks no mercado. Com isso, várias fontes de estudo e conceitos mais sólidos para uma implantação.\n\nHora da avaliação dos pós e contras, e escolher o melhor rumo para o seu  projeto. Nesse artigo, vou escrever sobre a metodologia que chamou a minha atenção e tenho adotado.\n\n## No que tenho que pensar?\n\nQuando vamos começar um projeto web, temos que montar uma boa arquitetura CSS, para que não tenhamos problemas futuramente. E é bom seguir a ideia de \"perder\" algumas horas de planejamento no início, do que perder dias para consertar e/ou mudar a metodologia adotada no meio do projeto.\n\nO ponto essecial para uma arquitetura CSS é o mesmo ser modular (Escabilidade, reutilização e customização), principalmente para projetos complexos. O mesmo deve ser bem gerenciado, para não ter dor de cabeça com hierarquia e etc..\n\nLevanta a mão que já pegou um projeto legado com vários \"!important\", sem nenhum critério. .../\n\n**Portanto, temos que nos preocupar com muitos fatores na hora de escrever um código CSS. Como:**\n\n- Escolha do pré-processador\n- Padrão de escrita\n- Estrutura de pastas\n- Ser modular (escalável, reutilizável e customizável)\n- Metodologias\n- O melhor para a equipe/projeto\n\nCom a metodologia ITCSS, uma boa porcentagem das preocupações serão resolvidas.\n\n\n## ITCSS - Inverted triangle CSS\n\nNa busca pela melhor forma de gerenciar o CSS dos meus projetos, conheci a metodologia [ITCSS](https://twitter.com/itcss_io), que foi criada por [Harry Roberts](https://twitter.com/csswizardry).\n\nAqui você confere o vídeo em que foi apresentado a metodologia [Harry Roberts - Managing CSS Projects with ITCSS](https://www.youtube.com/watch?v=1OKZOV-iLj4&hd=1)\n\nSlides - [Managing CSS Projects with ITCSS](https://speakerdeck.com/dafed/managing-css-projects-with-itcss)\n\n### A metodologia\n\nA metodologia consiste em camadas e aborda a escrita por ordem de especificidade, onde as 2 primeiras (Settings e tools), são utilizadas no desenvolvimento composto por um pré-processador de CSS e as camadas generic, base, objects, components, theme(sendo optativa) e trumps.\nCom isso:\n\n- evitando a redundância de regras de estilo;\n- problemas com especificidade, indo da mais baixa para a mais alta;\n- código reutilizavel, com uma estrutura granular;\n- elimina a necessidade de mais desenvolvimento de código para solucionar questões de substituição de propriedades.\n\n\n![ITCSS](/hemersonvianna/assets/img/site/articles/arquitetura-itcss.jpg)\n\n**[Settings] Configurações:**\n\nUtilizando um pré-processador de CSS, essa camada inicial tem todo o controle de variáveis ​​globais e configuração do projeto (cores, tamanhos de tela).\n\n```\n// Color palette\n$color-brand:           #bada55;\n$color-brand-highlight: lighten($color-brand, 15%);\n$color-brand-shadow:     darken($color-brand, 15%);\n\n// Links\n$color-link:        $color-brand;\n$color-link-hover:  $color-brand-shadow;\n```\n\n\n**Ferramentas [Tools]:**\n\nNessa camada usamos a grande utilidade de um pré-processado de CSS, que são as funções e mixins.\n\n```\n@mixin vertical-align {\n  position: relative;\n  top: 50%;\n  @include transform(translateY(-50%));\n}\n```\n\n\n**Genéricos [Generic]:**\n\nBox-sizing, reset, modernizr se encontram nessa camada. \n\n```\nhtml {\n    -webkit-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n            box-sizing: border-box;\n}\n\n* {\n\n    &,\n    &:before,\n    &:after {\n        -webkit-box-sizing: inherit;\n           -moz-box-sizing: inherit;\n                box-sizing: inherit;\n        }\n\n}\n```\n\n\n**Base [Base]:**\n\nEstilos que são aplicados nas tags HTML (estilização básica).\n\n```\nfieldset {\n  background-color: lighten($base-border-color, 10%);\n  border: $base-border;\n  margin: 0 0 $small-spacing;\n  padding: $base-spacing;\n}\n\ninput,\nlabel,\nselect {\n  display: block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n}\n```\n\n\n**Objetos [Objects]:**\n\nSeguindo o conceito de orientação a objeto CSS, nessa camada usamos as classes para os objetos que se repetem no projeto. A partir dessa camada que começamos a utilizar as classes CSS.\n\n\n```\n.o-media {\n    display: table;\n    width: 100%;\n}\n\n.o-layout {\n    margin:  0;\n    padding: 0;\n    list-style: none;\n    margin-left: -$base-spacing-unit;\n}\n```\n\n\n**Componentes [Components]:**\n\nElementos de interface com contexto específico \n\n```\n.c-avatar {\n    display: block;\n    border-radius: 100%;\n    width:  64px;\n    height: 64px;\n}\n\n.c-avatar--small {\n    width:  32px;\n    height: 32px;\n}\n\n.c-btn {\n    display: inline-block;\n    padding: (0.5 * $base-spacing-unit) $base-spacing-unit;\n    text-decoration: none;\n    background-color: $color-btn;\n    color: #fff;\n    border-radius: $base-radius;\n    transition: background-color 0.2s;\n\n    &:hover,\n    &:focus {\n        background-color: $color-btn-hover;\n        color: #fff;\n    }\n\n}\n```\n\n\n**Tema (opcional) [Theme]:**\n\nComo está bem sugestivo, seria a camada onde teremos os temas do projeto / componentes / objetos.\n\n\n```\n/**\n * Background colors.\n */\n@each $color in $colors {\n\n    $color-name:  nth($color, 1);\n    $color-value: nth($color, 2);\n\n    .bg--#{$color-name} {\n        background-color: #{$color-value};\n    }\n\n}\n```\n\n\n**Trunfos [Trumps]:**\n\nEspecificidade mais alta, ajudantes e substituições (.col-ms-12 {})\n\n```\n.clearfix,\n%clearfix {\n\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n\n}\n```\n\n\n### Guidelines\nO [CSS Guidelines](http://cssguidelin.es/) é uma documentação de recomendações e abordagens feita por Harry Roberts, para ajudar no desenvolvimento de um código CSS, legível, escalável, de fácil manutenção e etc..\n\n\n### Framework\nO [Inuitcss](https://github.com/inuitcss) é desenvolvido utilizando o pré-processador [Sass](http://sass-lang.com/), com a convenção de nomenclatura [BEM](https://en.bem.info/method/) e a metodologia [OOCSS](https://github.com/stubbornella/oocss/wiki) que não impõe o design. Projetado com o pensamento em escalabilidade e desempenho.\n\n**Obs:** A única camada com a qual o Inuitcss não se envolve é a de componentes.\n\n\n## Conclusão\n\nTenho adotado essa metodologia nos meus projetos, e tenho achado bem satisfatório a organização e o padrão que o mesmo traz.\n\nO InuitCSS, utiliza da metodologia do [BEM](https://en.bem.info/method/). Acho muito confuso, misturar undercore com hífen. Por isso, utilizo assim:\n\n```\n.form {} // bloco\n.form-field {} // elemento\n.form-field--select {} // modificador\n```\n\nPara blocos com nome composto, ainda estou refletindo sobre o assunto, mas no momento utilizo tudo em minúsculo. Aceito feedbacks sobre o assunto.\n\n```\n.singleform {}\n```\n\nQuanto a estrutura de pastas, tenho usado numeração nas mesmas para uma melhor visualização.\n\n- 00-settings\n- 01-tools\n- 03-base\n- etc..\n\nE com o acréscimo da pasta:\n\n- vendor - para CSS externos de plugins (ex: colorbox, bxslider)\n\nAcredito que não tem uma metodologia com a verdade absoluta e que o melhor caminho é ver o que o projeto necessita. Como pode ser visto neste artigo, a ideia era falar de uma metodologia, mas você pode ver que outras foram citadas e ideias acrescentadas. O mais importante é a unificação de pensamento da equipe para o projeto evoluir com um padrão sólido.\n\n\n## Referências\n\n- [Modular-CSS](https://github.com/bernarddeluna/Modular-CSS)\n- [CSS Modular – Breve explicação](http://tableless.com.br/css-modular-breve-explicacao/)\n- [CSS escalável - Parte 1](https://medium.com/@shankarcabus/css-escalavel-parte-1-41e7e863799e)\n- [Classes Funcionais](http://tableless.com.br/classes-funcionais/)\n- [Arquitetura CSS](http://tableless.com.br/arquitetura-css-anotacoes-da-palestra-rafael-rinaldi/)\n- [InuitCSS](https://github.com/inuitcss)\n- [css-scaffold](https://github.com/csshugs/css-scaffold)\n- [itcss-netmag](https://github.com/itcss/itcss-netmag)\n- [TemplateITCss](https://github.com/lionelthonon/TemplateITCss)\n- [BEM](https://en.bem.info/method/)\n","categories":["css"]},{"title":"Conhecendo o fluxo de trabalho front-end","url":"/hemersonvianna/artigos/front-end/conhecendo-o-fluxo-de-trabalho-front-end/","content":"\nAntes de qualquer coisa, cada um/equipe sabe o que é melhor para o workflow do seu projeto. Cada projeto tem suas necessidades e o ideal que seja feito um planejamento para o mesmo. O que interessa é a organização, automação das tarefas, gerenciamento de dependências e padrão único da equipe.\n\nPara iniciar o fluxo de trabalho, temos que criar um controle de versão. Afinal, não podemos perder o que fizermos no projeto.\n\nA partir desse momento vem o processo de desenvolvimento de código, com uma arquitetura sólida e preferencialmente com [TDD](http://pt.wikipedia.org/wiki/Test_Driven_Development) ou [BDD](http://pt.wikipedia.org/wiki/Behavior_Driven_Development).\n\nO importante é a criação de padrões e documentação. Para que o projeto fique de fácil compreensão na hora da manutenção. Os testes unitários, automatização de tarefas e ferramentas que auxiliam na depuração são de grande valia para assegurar que o seu código seja estável.\n\nComo não queria que o artigo ficasse muito extenso, nos próximos artigos vou falar mais detalhadamente sobre cada etapa e ferramenta. Por enquanto, listei por categorias o que uso no fluxo de trabalho como front-ender, com pequenos comentários.\n\n***\n\n## Linguagem\n\nAs linguagens que nós front-enders mais usamos, são:\n\n*   **HTML** - [http://pt.wikipedia.org/wiki/HTML](http://pt.wikipedia.org/wiki/HTML)\n*   **CSS** - [http://pt.wikipedia.org/wiki/Cascading_Style_Sheets](http://pt.wikipedia.org/wiki/Cascading_Style_Sheets)\n*   **JavaScript** - [http://pt.wikipedia.org/wiki/JavaScript](http://pt.wikipedia.org/wiki/JavaScript)\n\n***\n\n## Diversos e Produtividade\n\nComo editor utilizei por um bom tempo o Sublime e o Bracket, no momento utilizando o Atom. Ter um bom editor que auxilia com seus plugins, facilita e agiliza muito o processo de desenvolvimento.\n\n*   **Sublime Text** - [http://www.sublimetext.com/3](http://www.sublimetext.com/3)\n*   **Bracket** - [http://brackets.io/](http://brackets.io/)\n*   **Atom** - [https://atom.io/](https://atom.io/)\n\n\nPara gerenciar as tarefas:\n\n*   **Wunderlist** - [https://www.wunderlist.com/pt/](https://www.wunderlist.com/pt/)\n\n\nPoderia colocar tudo no mesmo lugar, mas tenho a preferência de versionar os arquivos gráficos como os layouts em PSD no Dropbox,  documentos e livros no Google Drive.\n\n*   **Dropbox** - [https://www.dropbox.com/](https://www.dropbox.com/)\n\n*   **Google Drive** - [https://www.google.com/intl/pt-BR/drive/](https://www.google.com/intl/pt-BR/drive/)\n\n***\n\n## Softwares\n\nGosto de usar o Rails Installer, pois em uma só tacada ele já instala o Ruby, Rails, Git bash e etc..\n\n*   **Rails Installer** - [http://railsinstaller.org/pt-BR](http://railsinstaller.org/pt-BR)\n\n\nPara criar, visualizar e editar os layouts web.\n\n*   **Photoshop** - [http://www.adobe.com/br/products/photoshop.html](http://www.adobe.com/br/products/photoshop.html)\n\n***\n\n## Referências\n\nÓtimas referências para consultar a compatibilidade crossbrowser e novos recursos.\n\n*   **MDN** - [https://developer.mozilla.org/pt-BR/](https://developer.mozilla.org/pt-BR/)\n\n*   **caniuse** - [http://caniuse.com/](http://caniuse.com/)\n\n*   **html5please** - [http://html5please.com/](http://html5please.com/)\n\n*   **Cross Browser Knowledgebase** - [http://www.crossbrowserbook.com/Knowledge](http://www.crossbrowserbook.com/Knowledge)\n\n***\n\n## Ferramentas Online\n\nPara fazer testes rápidos com bibliotecas JavaScript, HTML e CSS\n\n*   **jsfiddle** - [http://jsfiddle.net/](http://jsfiddle.net/)\n\nNem sempre conseguimos ter todos os ícones que precisamos em um lugar só, o Icomoon ajuda nisso e com ícones que você mesmo criou.\n\n*   **icomoon** - [https://icomoon.io/](https://icomoon.io/)\n\nPara testar a performance do site:\n\n*   **PageSpeed** - [https://developers.google.com/speed/pagespeed/insights/](https://developers.google.com/speed/pagespeed/insights/)\n\n*   **GTmetrix** - [http://gtmetrix.com/](http://gtmetrix.com/)\n\nAvaliar a performance do seu código JavaScript.\n\n*   **JSperf** - [http://jsperf.com/](http://jsperf.com/)\n\nDepois de estruturar seu código HTML com o Schema, aqui você pode ver como o Google vê.\n\n*   **Google Structured Data Testing Tool** - [http://www.google.com.br/webmasters/tools/richsnippets](http://www.google.com.br/webmasters/tools/richsnippets)\n\n***\n\n## Plataforma\n\nAlém de ser um pré-requisito para utilizar muitas ferramentas que estão listadas nesse artigo, o Node consegue levar o front-ender para o lado do servidor. Não vou falar muito porque isso merece um artigo à parte. ^^\n\n*   **NodeJS** - [http://nodejs.org](http://nodejs.org)\n\n***\n\n## Geradores & Gerenciadores\n\nPara conectar a criação de estrutura, automatização e gerenciamento de tarefas, temos:\n\n*   **Yeoman** - [http://yeoman.io/](http://yeoman.io/)\n\nGerenciador de Pacotes do Node\n\n*   **NPM** - [https://www.npmjs.com/](https://www.npmjs.com/)\n\nGerenciador de dependências\n\n*   **Bower** - [http://bower.io/](http://bower.io/)\n\nPara gerar páginas estáticas. Uso para este blog. :)\n\n*   **Jekyll** - [http://jekyllrb.com/](http://jekyllrb.com/)\n\n***\n\n## Automatização de tarefas\n\nSempre utilizei o Grunt, mas já testando o Gulp. ^^\n\n*   **Grunt** - [http://gruntjs.com/](http://gruntjs.com/)\n\n*   **Gulp** - [http://gulpjs.com/](http://gulpjs.com/)\n\n***\n\n## Pré-processador de CSS\n\nSou grande adepto do SCSS, e utilizo bastante o Compass.\n\n*   **SASS** - [http://sass-lang.com/](http://sass-lang.com/)\n\n*   **Compass** - [http://compass-style.org/](http://compass-style.org/)\n\n*   **LESS** - [http://lesscss.org/](http://lesscss.org/)\n\n*   **Stylus** - [http://learnboost.github.io/stylus/](http://learnboost.github.io/stylus/)\n\n***\n\n## Versionamento\n\nPara versionar os meus projetos utilizo o Git, dividindo entre o [Github](https://github.com/) e o [Bitbucket](https://bitbucket.org/)\n\n*   **Git** - [http://git-scm.com/book/pt-br/v1](http://git-scm.com/book/pt-br/v1)\n\n\n***\n\n## Depuração & teste\n\nMuito útil para garantir a qualidade e padrão do código.\n\n*   **JSHint** - [http://jshint.com/](http://jshint.com/)\n\n*   **CSSLint** - [http://csslint.net/](http://csslint.net/)\n\n\nTeste unitário para o seu código JavaScript, é indispensável.\n\n*   **Jasmine** - [http://jasmine.github.io/](http://jasmine.github.io/)\n\n*   **Mocha** - [http://mochajs.org/](http://mochajs.org/)\n\n*   **Karma** - [http://karma-runner.github.io/0.12/index.html](http://karma-runner.github.io/0.12/index.html)\n\n\nPara visualização rápida em várias resoluções\n\n*   **Responsive Design Testing** - [http://mattkersley.com/responsive/](http://mattkersley.com/responsive/)\n\n***\n\n## Navegador\n\nPor questão de memória RAM, largando o Chrome como meu navegador principal para voltar para o Firefox.\n\n*   **Chrome** - [https://www.google.com.br/chrome/](https://www.google.com.br/chrome/)\n\n*   **Firefox** - [https://www.mozilla.org/pt-BR/firefox/new/](https://www.mozilla.org/pt-BR/firefox/new/)\n\n***\n\n## Complementos do navegador\n\n*   **ColorZilla** - [http://www.colorzilla.com/](http://www.colorzilla.com/)\n\n*   **Firebug** - [http://getfirebug.com/](http://getfirebug.com/)\n\n*   **Window Resizer** - [Chrome](https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh) & [Firefox](https://addons.mozilla.org/pt-BR/firefox/addon/window-resizer-webextension/?src=search)\n\n*   **Chrome Developer Tools** - [https://developer.chrome.com/devtools](https://developer.chrome.com/devtools)\n\n***\n\n## Bibliotecas & Frameworks\n\nO mais famoso e mais utilizado com certeza é o JQuery. Também utilizo no momento, mas já tive um bom contato com o Dojo e foi um preríodo de um bom conhecimento.\n\n*   **jQuery** - [http://jquery.com/](http://jquery.com/)\n\n*   **Dojo Toolkit** - [http://dojotoolkit.org/](http://dojotoolkit.org/)\n\n\nAvaliando os prós e contras desses 2 frameworks que tem muito a acrescentar.\n\n*   **AngularJS** - [https://angularjs.org/](https://angularjs.org/)\n\n*   **React** - [http://facebook.github.io/react/](http://facebook.github.io/react/)\n\n***\n\n## Sintaxe & metodologias\n\nCom uma junção de padrões e metodologias, você cria um boa estrutura para o seu projeto.\n\n*   **BEM** - [https://en.bem.info/methodology/](https://en.bem.info/methodology/)\n\n*   **OOCSS** - [http://oocss.org/](http://oocss.org/)\n\n*   **SMACSS** - [https://smacss.com/](https://smacss.com/)\n\n*   **DryCSS** - [http://malko.github.io/dryCss/](http://malko.github.io/dryCss/)\n\n*   **Atomic Design** - [http://bradfrost.com/blog/post/atomic-web-design/](http://bradfrost.com/blog/post/atomic-web-design/)\n\n*   **CSS Guidelines** - [http://cssguidelin.es/](http://cssguidelin.es/)\n\n*   **Idiomatic CSS** - [https://github.com/necolas/idiomatic-css](https://github.com/necolas/idiomatic-css)\n\n*   **Idiomatic SASS** - [https://github.com/anthonyshort/idiomatic-sass](https://github.com/anthonyshort/idiomatic-sass)\n\n*   **Idiomatic JS** - [https://github.com/rwaldron/idiomatic.js](https://github.com/rwaldron/idiomatic.js)\n\n*   **JavaScript design patterns** - [https://github.com/addyosmani/essential-js-design-patterns](https://github.com/addyosmani/essential-js-design-patterns)\n\n***\n\n## Documentação\n\nPara a documentação do código SCSS e JS. Para as demais documentações, utilizo o Jekyll.\n\n*   **SassDoc** - [http://sassdoc.com/](http://sassdoc.com/)\n\n*   **JSDuck** - [https://github.com/senchalabs/jsduck](https://github.com/senchalabs/jsduck)\n\n***\n\n## Inspiração & Blogs\n\nÉ sempre bom ter uma inspiração e segue algumas.\n\n*   **CSS Tricks** - [http://css-tricks.com/](http://css-tricks.com/)\n\n*   **Smashing Magazine** - [http://www.smashingmagazine.com/](http://www.smashingmagazine.com/)\n\n*   **A List Apart** - [http://alistapart.com/](http://alistapart.com/)\n\n*   **Codrops** - [http://tympanus.net/codrops/](http://tympanus.net/codrops/)\n\n*   **Awwwards** - [http://www.awwwards.com/](http://www.awwwards.com/)\n\n\nPor enquanto é isso. :)\n","categories":["front-end"]},{"title":"Desenvolvedor client-side","url":"/hemersonvianna/artigos/front-end/desenvolvedor-client-side/","content":"\nHoje venho falar sobre o que o desenvolvedor front-end faz. Existem dois tipos de linguagens para o desenvolvimento web:\nAs linguagens client-side(lado cliente) e server-side(lado servidor). Com isso, no desenvolvimento temos três estágios (Front-End, Middleware e Back-End).\n\n**O Front-End está no lado cliente(client-side), no caso seria o primeiro estágio quando acessamos um site. Normalmente a estrutura front-end é composta por HTML, CSS e Javascript.**\n\nO Middleware(mediador) seria o intermediário entre a interface(front) e os dados(back). Geralmente é associado a um \"encanamento\" de um sistema. Um exemplo seria a comunicação de aplicações via web service.\n\nO Back-End está no lado servidor(server-side), que é responsável por todo processamento dos dados recebidos do front-end e esse estágio mexe com o banco de dados(ex: MySQL, MS-SQL, PostgreSQL e etc...) e o armazenamento de dados. Posso citar algumas linguagens do lado servidor como Ruby on Rails, Lua, Perl, Python, Django, Node, PHP e etc...\n\nO intuito é apenas abordar superficialmente os dois últimos estágios citados e focar no primeiro estágio que seria o Front-End.\n\n> Front-end e back-end são termos utilizados para caracterizar interfaces de programas e serviços em relação ao usuário inicial desses recursos. (O \"usuário\" pode ser um ser humano ou um programa.) A aplicação \"front-end\" é aquele que os usuários do aplicativo interagem diretamente. Um aplicativo de \"back-end\" ou programa serve indiretamente em apoio aos serviços de front-end, geralmente por estar mais perto do recurso necessário ou que tenham a capacidade de se comunicar com o recurso necessário.\n> <cite> -- Front-end\n> - [Margaret Rouse](http://whatis.techtarget.com/definition/front-end)\n> </cite>\n\nAbaixo você tem uma estrutura (HTML), um estilo para o link (CSS) e uma interação (Javascript). Essa é apenas uma pequena amostra do que um front-ender faz.\n\nExemplo HTML:\n\n```\n<p>\n\t<a id=\"link\" href=\"/\">Link</a>\n</p>\n```\n\nExemplo CSS:\n\n```\n#link {\n\tcolor: #4299E3;\n\tfont-size: 14px;\n}\n```\n\nExemplo JavaScript:\n\n```\nvar el = document.getElementById(\"link\");\n\nfunction message( event ) {\n\tevent.preventDefault();\n\talert('Este é um link');\n}\nel.addEventListener(\"click\", message, false);\n```\n\nO código acima, funcionando: [Demonstração](http://jsfiddle.net/hc77v7g2/)\n\n> ### O que o front-end faz:\n\n> 1.   Estabelecer uma linguagem visual entre designers e o back-end\n> 2.   A partir de um projeto visual, definir um conjunto de componentes que representam o conteúdo, marca, recursos, etc.\n> 3.   Estabelecer uma linha de base para a aplicação Web em termos de convenções, quadros, requisitos, linguagens visuais e especificações.\n> 4.   Definir o escopo do aplicativo Web em termos de dispositivos, navegadores, telas, animações.\n> 5.   Desenvolver uma diretriz de garantia de qualidade para garantir a fidelidade da marca, a qualidade do código, revisão de produto pelas partes interessadas.\n> 6.   Estilo de aplicações Web com espaçamentos adequados, tipografia, títulos, fontes cara, ícones, margens, preenchimentos, grades e assim por diante.\n> 7.   Estilo de aplicações Web com várias imagens de alta resolução, mockups orientada dispositivo, tudo ao mesmo tempo cuidando de diretrizes de design.\n> 8.   Marcação da aplicação web, tendo em conta a semântica, acessibilidade, SEO, esquemas e microformats.\n> 9.   Conectar-se a uma API para recuperar informações em um amistoso, consumindo não-bateria, dispositivo e cliente maneira consciente.\n> 10.   Desenvolver código do lado do cliente para executar animações, transições, carregamento lento, interações, fluxos de trabalho de aplicativos, a maior parte do tempo, tendo em conta a optimização progressiva e normas para trás compatíveis.\n> 11.   Certificar que as conexões de back-end são seguras.\n> 12.   Nunca esquecendo que apesar de prazos rigorosos, os pedidos dos associados e as limitações do dispositivo, o usuário é, e estará sempre em primeiro lugar.\n>\n> <cite> -- Why can’t we find Front End developers?\n> - [Jose Aguinaga](http://jjperezaguinaga.com/2014/03/19/why-cant-we-find-front-end-developers/)\n> </cite>\n\n\nEm um projeto web, temos a regra de negócio:\n\n> \"Regras de Negócio são declarações sobre a forma da empresa fazer negócio. Elas refletem políticas do negócio. As organizações com isto têm políticas para satisfazer os objetivos do negócio, satisfazer clientes, fazer bom uso dos recursos, e obedecer às leis ou convenções gerais do negócio.\n> Regras do Negócio tornam-se requisitos, ou seja, podem ser implementados em um sistema de software como uma forma de requisitos de software desse sistema. Representam um importante conceito dentro do processo de definição de requisitos para sistemas de informação e devem ser vistas como uma declaração genérica sobre a organização.\n> As regras de negócio definem como o seu negócio funciona, podem abranger diversos assuntos como suas políticas, interesses, objetivos, compromissos éticos e sociais, obrigações contratuais, decisões estratégicas, leis e regulamentações entre outros.\"\n> <cite> -- Regras de negócio\n> - Wikipédia\n> </cite>\n\nCom essa definição, passamos para próximo passo que seria o UX/UI design (Desenho da experiência do usuário ou desenho da Interface do usuário)\n\n> \"De um modo simplificado, podemos dizer que em um projeto de um carro, por exemplo, a interface (também chamado de User Interface, Interface de Usuário ou apenas UI) é toda a parte “física” do veiculo; ou seja, a forma. Já a experiência (ou User Experience, UX) é o prazer que o veiculo te proporciona ao dirigi-lo; ou seja, a sua experiência de uso do veículo.\"\n> <cite> -- Design Básico: Diferença entre UX e UI Design\n> - Canha - Chocolate Design\n> </cite>\n\nEssa etapa com a regra de negócio em mãos, começa um estudo para ter a melhor forma de apresentação e experiência para o usuário.\n\nApós esse estudo, chegamos na etapa do design final. Onde todos os elementos que se mostraram necessários para a apresentação do negócio/produto ganham cores e formas mais harmônicas para o usuário. E assim, temos o layout final do projeto. Geralmente, o front-ender recebe os layouts das telas em formato PSD(Photoshop).\n\nAgora o trabalho do front-ender é transformar essas telas em páginas web, onde serão acessadas pelo navegador, como o exemplo de código que citei no inicio desse artigo.\n\nEm teoria, o back-end seria a última etapa, mas na maioria das vezes em paralelo ou antes, pois o front-end precisa saber como enviar alguns dados por meio de API e etc...\n\n> \"No contexto de desenvolvimento Web, uma API é um conjunto definido de mensagens de requisição e resposta HTTP, geralmente expressado nos formatos XML ou JSON. A chamada Web 2.0 vem abandonando o modelo de serviços SOAP em favor da técnica REST.\n> Enquanto você usufrui de um aplicativo ou sítio, este pode estar conectada a diversos outros sistemas e aplicativos via APIs sem que se perceba.\n> Um exemplo popular é a rede social Twitter, sendo possível ler e publicar mensagens.\"\n> <cite> -- Interface de programação de aplicações\n> - Wikipédia\n> </cite>\n\nBom, a ideia foi mostrar um pouco do processo e aonde se encaixa o front-ender. O front-end é o elo entre o layout e o armazenamento de dados. Além de ser a estrutura da interface para o usuário, ele tem algumas preocupações a mais, como comunicação com o back-end, ser adaptável para todos os dispositivos e diferentes navegadores, código limpo e bem estruturado para o buscadores e etc..\n\nEspero que tenha contribuído, com esse meu primeiro artigo.\n\nAceitando feedbacks. :)\n","categories":["front-end"]}]